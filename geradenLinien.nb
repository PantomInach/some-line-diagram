(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    421161,       8133]
NotebookOptionsPosition[    416594,       8050]
NotebookOutlinePosition[    417133,       8070]
CellTagsIndexPosition[    417090,       8067]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Herleitung der Steigung von den Linien", "Chapter",
 CellChangeTimes->{{3.843380287137295*^9, 3.8433802945502567`*^9}, {
  3.84365949647615*^9, 
  3.8436595123362617`*^9}},ExpressionUUID->"e635c930-2096-473b-a58c-\
58b86fac7a94"],

Cell[TextData[{
 "Wir nehmen einen Einheitskreis um den Startpunkt der Line, wo wir die \
Steigung einzeichnen wollen. Durch den Winkel des Datenpunkt kann man \
\[UDoubleDot]ber ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox[
     RowBox[{"cos", "(", "\[Alpha]", ")"}], 
     RowBox[{"sin", "(", "\[Alpha]", ")"}]], "=", 
    RowBox[{"cot", "(", "\[Alpha]", ")"}]}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "1ab58844-49df-4193-b671-6d779ea880ab"],
 " die Steigung ausrechnen f\[UDoubleDot]r die Geradengleichung. "
}], "Text",
 CellChangeTimes->{{3.843659526377761*^9, 
  3.843659691653637*^9}},ExpressionUUID->"75eeb6b2-913f-4cb5-86c8-\
857bf769a6ba"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"datapoints", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "2", ",", "10", ",", "25", ",", "4", ",", "6", ",", "10", ",", 
     " ", "17", ",", "14"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"maxAngle", " ", "=", " ", "45"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"degPerUnit", " ", "=", 
   RowBox[{
    RowBox[{"-", " ", "maxAngle"}], "/", 
    RowBox[{"Max", "[", "datapoints", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"unitToM", "[", "u_", "]"}], ":=", 
   RowBox[{"Cot", "[", 
    RowBox[{"degPerUnit", "*", "u", "*", 
     RowBox[{"Pi", "/", "180"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"unitToM", "[", 
       RowBox[{"datapoints", "[", 
        RowBox[{"[", "u", "]"}], "]"}], "]"}], "*", "x"}], ",", 
     RowBox[{"{", 
      RowBox[{"u", ",", "1", ",", 
       RowBox[{"Length", "[", "datapoints", "]"}]}], "}"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "1"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.843320609237447*^9, 3.843320817654071*^9}, {
  3.843321126688348*^9, 3.843321165053268*^9}, {3.843321203896284*^9, 
  3.843321255632732*^9}, {3.843321308526814*^9, 3.8433215390671*^9}, {
  3.843321585423339*^9, 3.8433215927354403`*^9}, {3.843321642138834*^9, 
  3.843321665189002*^9}, {3.843321706591748*^9, 3.8433217110156803`*^9}, {
  3.843321779450034*^9, 3.8433217991468143`*^9}, {3.843321932618574*^9, 
  3.8433219975548763`*^9}, {3.843322079310948*^9, 3.843322148377656*^9}, {
  3.843659474668355*^9, 3.843659476687107*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"4e26f33b-4437-4fe5-8e69-d5f006bc32f7"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[{{-0.03142626604335115, 1.}, {-0.01991217886741602, 
       0.633615805325012}, {0.01900391033155799, -0.6047142318894307}, {
       0.03142626604335115, -1.}}], 
      LineBox[{{-0.06291466725364976, 1.}, {-0.05960779053832902, 
       0.9474386997552006}, {-0.01991217886741602, 0.31649501994721096`}, {
       0.01900391033155799, -0.30205850497374365`}, {
       0.06122210971165424, -0.9730975682479298}, {
       0.06291466725364975, -1.}}], 
      LineBox[{{-0.3249196962329063, 1.}, {-0.30802898349493396`, 
       0.9480157314751861}, {-0.26569705331891763`, 
       0.8177314468756084}, {-0.2261854619413709, 
       0.6961272725653371}, {-0.18337176038270195`, 
       0.5643602481126871}, {-0.141337581295972, 
       0.43499234713878204`}, {-0.10212374100771163`, 
       0.3143045564541834}, {-0.05960779053832902, 
       0.18345391562720606`}, {-0.01991217886741602, 0.06128338508953527}, {
       0.01900391033155799, -0.05848802196939074}, {
       0.06122210971165424, -0.18842227917069546`}, {
       0.10061997029328089`, -0.30967642608269363`}, {
       0.14331994105602977`, -0.44109342313707056`}, {
       0.18524038934683965`, -0.5701112967127026}, {
       0.22434049883917992`, -0.6904490599990282}, {
       0.2667427185126425, -0.8209496734277325}, {
       0.3063245993876354, -0.9427701765671302}, {0.3249196962329063, -1.}}], 
      LineBox[CompressedData["
1:eJw91P9PFHQAxnGEmIaJ4EJHeRigzC/MCdWxNPcwSycmTm46aKZwtNSBRrEM
GJup0aJG0yVuZNbaDlS0HWEZQ4FHUHbUcIYgoGcoB0eA3X00ssC5Ga3Hfnj2
+gued3R2nu2twICAgNTJ/etSzB599MhQIm8itnTigaHEd98nxI3dN5RIXJia
PXTHUCIpvORGe4+hRPLAvZ+/qDGUsH18+fTzmYYSBVdKdu9o8lOiq2v6aLPd
RwnLhbynk+b+TomzuZeCZ/46SomssoS71w+MUGL88+JSYpgSjtC+yIr+IUoc
W5eQ3/mJlxIHdtkLF6UMUqI46FRBvs9DCfu+K/O7T/ZT4kijt+JYzm1KnLu1
8KlvY/ooERuWvGrT125KnFlcmuMZ6KXErdba56zWbkp4448k8sdOSoTvrbYu
ndJBiXiria8aa6fEh6/6fqkvdFEiYpPz0OtzWihx5q/WmW3zz1Giyu39bKTE
SYmtaXN/cL9ZTon6kOJrLXsOP5YveqZE7c+ogWTs3fMTy1vqIZniuH55Q0YL
JFenzgq6f9YFyYOZPfuW1bVD0rXBMmPjrA5I+qIj9l492gnJPe8tsR+c3Q3J
npthtu1tvZDMKnr5t6nr3ZC8uCTp04vBfZCMe7JhuHLtbUhaGnJXB5f2QzLg
QWB1vscDyb/TGre1LhiEpPuFzGcXlHgh+U56WHjMzSFIRpYPZjxhGYakc8s3
J8YKRyCZvvKDtW2No5Cs3bY7ZvnDO5AcD3klqH6zD5K2jhVWS4UfkiErpjc3
fOWHZHPljdfecPghuaywyP6l0w/J0Hl1ZZGtfkj+tCtxIOIPPySTpy06FLp+
8nf/yfF3x59xphlI1rhdVanpBpJRNdvPl2UbSD7cXDkUUmQgWeeYt3LqcQPJ
t2cY1/HTBpJxBU22NbUGkuXrtu78qMFAMv/e0cNBnQaSi7fkRDl6DST7L71U
varPQHJjRW/T/hEDyWmBJ1OijYEkcwu6LvxpIPn+tTWZWZNdkv9363HH/gE0
7Ztd
       "]], 
      LineBox[{{-0.12632937844610817`, 1.}, {-0.10212374100771163`, 
       0.8083926499430802}, {-0.05960779053832902, 
       0.4718442477238782}, {-0.01991217886741602, 0.15762112591973618`}, {
       0.01900391033155799, -0.15043144013935775`}, {
       0.06122210971165424, -0.4846228997934273}, {
       0.10061997029328089`, -0.7964890790324369}, {
       0.12632937844610817`, -1.}}], 
      LineBox[{{-0.19076020221856674`, 1.}, {-0.18337176038270195`, 
       0.9612684315180199}, {-0.141337581295972, 
       0.7409175480639932}, {-0.10212374100771163`, 
       0.5353513983524804}, {-0.05960779053832902, 
       0.31247498086646175`}, {-0.01991217886741602, 0.10438329712295703`}, {
       0.01900391033155799, -0.09962198671704038}, {
       0.06122210971165424, -0.3209375383315434}, {
       0.10061997029328089`, -0.5274683562035327}, {
       0.14331994105602977`, -0.7513094418500276}, {
       0.18524038934683965`, -0.9710641275930151}, {
       0.19076020221856674`, -1.}}], 
      LineBox[{{-0.3249196962329063, 1.}, {-0.30802898349493396`, 
       0.9480157314751861}, {-0.26569705331891763`, 
       0.8177314468756084}, {-0.2261854619413709, 
       0.6961272725653371}, {-0.18337176038270195`, 
       0.5643602481126871}, {-0.141337581295972, 
       0.43499234713878204`}, {-0.10212374100771163`, 
       0.3143045564541834}, {-0.05960779053832902, 
       0.18345391562720606`}, {-0.01991217886741602, 0.06128338508953527}, {
       0.01900391033155799, -0.05848802196939074}, {
       0.06122210971165424, -0.18842227917069546`}, {
       0.10061997029328089`, -0.30967642608269363`}, {
       0.14331994105602977`, -0.44109342313707056`}, {
       0.18524038934683965`, -0.5701112967127026}, {
       0.22434049883917992`, -0.6904490599990282}, {
       0.2667427185126425, -0.8209496734277325}, {
       0.3063245993876354, -0.9427701765671302}, {0.3249196962329063, -1.}}], 
      LineBox[CompressedData["
1:eJwBAQL+/SFib1JlAgAAAB8AAAACAAAA0GhFPLzs4r8AAAAAAADwP2GAzyTW
qOG/aGT+KVHc7T+VveWYnGrgv3innXI6wus/ut8oDKwi3r9XkXgmZnrpPyMQ
QEJUntu/6NFyB6NZ5z+yKohq4uPYv0a5qFMiC+U/38WxIDY21r8LErLhbcfi
P+UslTK/ttO/gMHanMqq4D8Rfqk2LgHRv4YvfobTwNw/LDbvLKXzzL9uiYUt
NHrYP4NE7dC5eMe/8zAEqxnY0z8VVK6QWRfCv4V2U1gvl84/svbFD8gkur/n
5RsPcBrGP6Xb5Y3phK6/BeGl5XTNuT9dURy022OUv4JXHSwmPaE/uQp71cJ1
kz+x/NlV2XOgvzXiAR6BWK8//3ELElmAur8j8Lv5OsK5PxCYFwgex8W/SaPZ
zU5Ywj/n2zraBQXPv0VNEgP1tcc/FC2IUt4L1L+PX9eAMLfMP9M+tF0XR9i/
x04dDVAS0T/2AmmSy93cv+0hFX7SmtM/3Ixvti6T4L91dCthjxbWP9Ym12Gr
rOK/19wQUmbI2D8DGgOi5fPkv2B5POcHTNs/f7YPtQ4U57/DKzeKwwXePy2s
4Fz1Yem/Jgm86KRI4D8pS5LXyojrvx28a0UFiOE/wnhwENSk7b8A+gKpcuLi
P4z/Et6a7u+/0GhFPLzs4j8AAAAAAADwv4b1AWI=
       "]], LineBox[CompressedData["
1:eJwBoQFe/iFib1JlAgAAABkAAAACAAAARzuepbkd3r8AAAAAAADwPyMQQEJU
ntu/McUBbJtY7T+yKohq4uPYv90lFst4cuo/38WxIDY21r9QcS8+6JnnP+Us
lTK/ttO/1LOIBnHy5D8Rfqk2LgHRv4zIcGB9EeI/LDbvLKXzzL+oqDEfRsPe
P4NE7dC5eMe/oGSfoJjw2D8VVK6QWRfCvyf2FkoPOdM/svbFD8gkur+d6xw8
ccfLP6Xb5Y3phK6/uzNHKtI2wD9dURy022OUv3JgxbVhqqU/uQp71cJ1kz+Y
YUP9Y62kvzXiAR6BWK8/GsDXJTynwL8j8Lv5OsK5P4vLXve5Xsu/SaPZzU5Y
wj8WR1XBFH7Tv0VNEgP1tcc/2VLxXqgx2b+PX9eAMLfMP3lwDVIJg96/x04d
DVAS0T/a9AWRsSPiv+0hFX7SmtM/ZzrFI8XU5L91dCthjxbWPyuVf6JGeOe/
19wQUmbI2D+8HauPRFXqv2B5POcHTNs/Pa+WJykB7b/DKzeKwwXeP4pu8y2K
5u+/Rjuepbkd3j8AAAAAAADwv+Qlyq4=
       "]]},
     Annotation[#, "Charting`Private`Tag$2420#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-1, 1}, {-1, 1}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.843321436004736*^9, {3.8433214729948072`*^9, 3.843321539588674*^9}, {
   3.84332158592551*^9, 3.843321593205674*^9}, {3.843321642981267*^9, 
   3.843321665584803*^9}, {3.843321707388793*^9, 3.843321711470379*^9}, {
   3.843321781226581*^9, 3.843321800228491*^9}, 3.843321939431466*^9, {
   3.843321976881412*^9, 3.8433219981079082`*^9}, 3.843322080276412*^9, 
   3.843380487634378*^9, 3.843448851602697*^9, 3.8436594775486917`*^9, 
   3.86811084657028*^9, 3.8681109937426*^9, 3.868172641129943*^9, 
   3.868173860508545*^9, 3.8681744091487417`*^9, 3.868176273438051*^9, 
   3.8681763430652533`*^9},
 TextAlignment->Center,
 CellLabel->"Out[5]=",ExpressionUUID->"1dcffb14-3ab3-4df9-9515-dbcfeb8e1d83"]
}, Open  ]],

Cell["", "PageBreak",
 PageBreakBelow->True,ExpressionUUID->"ebaf4463-89ac-4db9-b470-5137efc229a8"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Datenverarbeitung", "Chapter",
 CellChangeTimes->{{3.8434828027651663`*^9, 3.843482809053974*^9}, {
  3.843659823388837*^9, 3.843659827264719*^9}, {3.843661138416194*^9, 
  3.843661138914178*^9}, {3.843661295455996*^9, 
  3.843661298908649*^9}},ExpressionUUID->"6f66f9d6-04b5-4377-b537-\
bd45675722cf"],

Cell["Zuerst m\[UDoubleDot]ssen die Daten importiert werden.", "Text",
 CellChangeTimes->{{3.843659831181356*^9, 
  3.8436598407767773`*^9}},ExpressionUUID->"a0bff842-bb46-484a-aa66-\
8656e737085c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"sh", "=", 
   RowBox[{"Import", "[", 
    RowBox[{"FileNameJoin", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"NotebookDirectory", "[", "]"}], ",", "\"\<s-h.xlsx\>\""}], 
      "}"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ta", "=", 
   RowBox[{"Import", "[", 
    RowBox[{"FileNameJoin", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"NotebookDirectory", "[", "]"}], ",", "\"\<Acc.csv\>\""}], 
      "}"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ts", "=", 
   RowBox[{"Import", "[", 
    RowBox[{"FileNameJoin", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"NotebookDirectory", "[", "]"}], ",", "\"\<gps.xls\>\""}], 
      "}"}], "]"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.843482830520227*^9, 3.843482949681007*^9}, {
  3.868111002271299*^9, 3.86811100597761*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"03b7f5b0-1360-48bd-b705-db316a13db79"],

Cell["\<\
Von den gegebenen Daten brauchen wir nur Strecke-H\[ODoubleDot]he, \
Zeit-Beschleunigung und Zeit-Strecke Datenpunkte. Im n\[ADoubleDot]chsten \
Schritt filtern wir diese aus.\
\>", "Text",
 CellChangeTimes->{{3.843659850822373*^9, 3.843659918591166*^9}, {
  3.843659950400959*^9, 
  3.843659979494273*^9}},ExpressionUUID->"dc18d991-33cc-455c-b5c0-\
0d3c17d30ece"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"sh", "=", 
   RowBox[{
    RowBox[{"Function", "[", 
     RowBox[{"x", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "3", "]"}], "]"}], "/", "1000"}], ",", 
        RowBox[{"x", "[", 
         RowBox[{"[", "4", "]"}], "]"}]}], "}"}]}], "]"}], "/@", 
    RowBox[{"Take", "[", 
     RowBox[{
      RowBox[{"Flatten", "[", 
       RowBox[{"sh", ",", "1"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", ",", 
        RowBox[{
         RowBox[{"Length", "[", 
          RowBox[{"Flatten", "[", 
           RowBox[{"sh", ",", "1"}], "]"}], "]"}], "-", "1"}]}], "}"}]}], 
     "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ta", "=", 
   RowBox[{
    RowBox[{"Function", "[", 
     RowBox[{"x", ",", 
      RowBox[{"x", "[", 
       RowBox[{"[", 
        RowBox[{"{", 
         RowBox[{"1", ",", "5"}], "}"}], "]"}], "]"}]}], "]"}], "/@", 
    RowBox[{"Take", "[", 
     RowBox[{"ta", ",", 
      RowBox[{"{", 
       RowBox[{"2", ",", 
        RowBox[{"Length", "[", "ta", "]"}]}], "}"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ts", "=", 
   RowBox[{
    RowBox[{"Function", "[", 
     RowBox[{"x", ",", 
      RowBox[{"x", "[", 
       RowBox[{"[", 
        RowBox[{"{", 
         RowBox[{"1", ",", "8"}], "}"}], "]"}], "]"}]}], "]"}], "/@", 
    RowBox[{"Take", "[", 
     RowBox[{
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{"Take", "[", 
         RowBox[{"ts", ",", "1"}], "]"}], ",", "1"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", ",", 
        RowBox[{"-", "1"}]}], "}"}]}], "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.843482968481269*^9, 3.843482974027671*^9}, {
  3.843483025061331*^9, 3.8434831894048853`*^9}, {3.8434832997942953`*^9, 
  3.8434833327106533`*^9}, {3.843483507118288*^9, 3.843483507552343*^9}, {
  3.843483703874343*^9, 3.843483727268632*^9}, {3.843487984426186*^9, 
  3.8434880167160463`*^9}, {3.8434886237147627`*^9, 3.843488636328444*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"2b7f4abf-ad42-4c4d-a79a-5a5f6fa3d8f9"],

Cell["\<\
Nun wollen wir aber die Zeit-Beschleunigung und Zeit-Strecke Datenpunkte \
vereinen. Dazu nehmen wir alle 10 Sekunden die n\[ADoubleDot]hesten \
Beschleunigungs und Strecken Punkte.  \
\>", "Text",
 CellChangeTimes->{{3.843659970331346*^9, 
  3.8436601146591253`*^9}},ExpressionUUID->"c4ff8bbb-0223-4699-8578-\
80f71c584612"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"dist", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"u_", ",", "v_"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"x_", ",", "y_"}], "}"}]}], "]"}], ":=", 
  RowBox[{"Abs", "[", 
   RowBox[{"u", "-", "x"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"saFrom", "[", "t_", "]"}], ":=", 
  RowBox[{"{", 
   RowBox[{"t", ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Flatten", "[", 
      RowBox[{
       RowBox[{"Nearest", "[", 
        RowBox[{"ts", ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0"}], "}"}], ",", 
         RowBox[{"DistanceFunction", "\[Rule]", "dist"}]}], "]"}], ",", "1"}],
       "]"}], "[", 
     RowBox[{"[", "2", "]"}], "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Flatten", "[", 
      RowBox[{
       RowBox[{"Nearest", "[", 
        RowBox[{"ta", ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0"}], "}"}], ",", 
         RowBox[{"DistanceFunction", "\[Rule]", "dist"}]}], "]"}], ",", "1"}],
       "]"}], "[", 
     RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tsa", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"saFrom", "[", "t", "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", 
       RowBox[{"Max", "[", 
        RowBox[{
         RowBox[{"First", "[", 
          RowBox[{"Take", "[", 
           RowBox[{"ts", ",", 
            RowBox[{"-", "1"}]}], "]"}], "]"}], ",", 
         RowBox[{"First", "[", 
          RowBox[{"Take", "[", 
           RowBox[{"ta", ",", 
            RowBox[{"-", "1"}]}], "]"}], "]"}]}], "]"}], ",", "10"}], "}"}]}],
     "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.84348458189051*^9, 3.843484586519413*^9}, {
   3.8434848621004143`*^9, 3.843485019270733*^9}, {3.8434850506693*^9, 
   3.843485069697646*^9}, {3.843485240495305*^9, 3.843485254451816*^9}, {
   3.843485314788045*^9, 3.8434854164975033`*^9}, {3.843485559184352*^9, 
   3.8434855644643106`*^9}, {3.843487024326153*^9, 3.843487066237018*^9}, {
   3.843488606983148*^9, 3.843488608077883*^9}, 3.843489666374464*^9, {
   3.843661019178014*^9, 3.8436610252931147`*^9}, {3.868111013153406*^9, 
   3.868111034486622*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"add87577-56be-4453-8d6e-cd8ab1ad8f1f"],

Cell["", "PageBreak",
 PageBreakBelow->True,ExpressionUUID->"03444c54-83e9-498c-b435-d966d01266d4"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Von Strecke auf H\[ODoubleDot]he", "Chapter",
 CellChangeTimes->{{3.843488921026176*^9, 3.843488940944392*^9}, {
  3.8436601676868143`*^9, 3.843660173984633*^9}, {3.8436602732534246`*^9, 
  3.843660274395877*^9}},ExpressionUUID->"8706eb45-e6da-4ed4-98c2-\
8dfafa29494a"],

Cell["\<\
Damit wir wissen auf welcher H\[ODoubleDot]he die Line liegen muss, brauchen \
wir eine Funktion, die unabh\[ADoubleDot]ngig von den Datenpunkten einen \
korrekten Wert liefert. Da die Strecke zwischen den Datenpunkten durch eine \
Line verbunden wird, kann man mit den n\[ADoubleDot]hesten zwei Datenpunkte, \
welche rechts und links von der Eingabe s liegen, eine Geradengleichung \
aufstellen. Dadurch kann einfach die richtige Koordinate bestimmt werden.  \
\>", "Text",
 CellChangeTimes->{{3.843660176512271*^9, 3.8436601772951403`*^9}, {
  3.843660258474278*^9, 
  3.843660456385763*^9}},ExpressionUUID->"534f7c17-543e-4ae8-b5d4-\
a4964952f522"],

Cell[BoxData[
 RowBox[{
  RowBox[{"h", "[", "s_", "]"}], ":=", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"p", "=", 
       RowBox[{"SelectFirst", "[", 
        RowBox[{"sh", ",", 
         RowBox[{
          RowBox[{
           RowBox[{"First", "[", "#", "]"}], ">", "s"}], "&"}]}], "]"}]}], 
      ",", 
      RowBox[{"q", "=", 
       RowBox[{"SelectFirst", "[", 
        RowBox[{
         RowBox[{"Reverse", "[", "sh", "]"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"First", "[", "#", "]"}], "<", "s"}], "&"}]}], "]"}]}]}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"p", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "-", 
         RowBox[{"q", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"p", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "-", 
         RowBox[{"q", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ")"}]}], 
      RowBox[{"(", 
       RowBox[{"s", "-", 
        RowBox[{"p", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ")"}]}], "+", 
     RowBox[{"p", "[", 
      RowBox[{"[", "2", "]"}], "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.8434893129029284`*^9, 3.843489452455892*^9}, {
  3.8434894868175907`*^9, 3.843489594671167*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"ab13d3d4-4c18-44b7-814c-b40a26e25c73"],

Cell["", "PageBreak",
 PageBreakBelow->True,ExpressionUUID->"e676ca5e-2a49-4e67-b653-1c1ea12d9451"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Plotten des Graphen", "Chapter",
 CellChangeTimes->{{3.843490051332974*^9, 3.843490053272848*^9}, {
  3.843660479572825*^9, 
  3.8436604863924932`*^9}},ExpressionUUID->"3adfdd2f-8bc4-4b5f-8c35-\
cda391bed667"],

Cell[TextData[{
 "Da wir nun wissen, wie man die Steigung und H\[ODoubleDot]he berechnen, \
muss nun noch gekl\[ADoubleDot]rt werden, wie man die Geraden an den \
richtigen Punkt verschiebt. Der Punkt einer jeder Gerade ist gegeben durch \
die H\[ODoubleDot]he an der Strecke s, welche in tsa ist. \nSomit muss \
einfach nur der Punkt in eine Geradengleichung ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], "=", 
    RowBox[{
     RowBox[{"m", "\[CenterDot]", "x"}], "+", "t"}]}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "ac05e3e2-edd0-48bf-8869-4dd8e410f6f1"],
 " einsetzen. Man bekommt:"
}], "Text",
 CellChangeTimes->{{3.843660571216331*^9, 
  3.8436607792515182`*^9}},ExpressionUUID->"bb55e379-1942-4a6f-a04b-\
cd943902f761"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"f", "(", "x", ")"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"m", "\[CenterDot]", "x"}], "+", "t"}], 
     OverscriptBox["\[Implies]", 
      RowBox[{"einsetzen", " "}]], "h"}], "=", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"m", "\[CenterDot]", "s"}], "+", "t"}], 
      "\[DoubleLeftRightArrow]", "t"}], "=", 
     RowBox[{
      RowBox[{
       RowBox[{"h", "-", 
        RowBox[{"m", "\[CenterDot]", "s"}]}], "\[Implies]", 
       RowBox[{"f", "(", "x", ")"}]}], "=", 
      RowBox[{
       RowBox[{
        RowBox[{"m", "\[CenterDot]", "x"}], "+", "h", "-", 
        RowBox[{"m", "\[CenterDot]", "s"}]}], "=", 
       RowBox[{
        RowBox[{"m", "(", 
         RowBox[{"x", "-", "s"}], ")"}], "+", "h"}]}]}]}]}]}], 
  TraditionalForm]], "Text",
 CellChangeTimes->{{3.7999457735554543`*^9, 3.7999457916218967`*^9}, {
  3.799945954839527*^9, 3.799945958210362*^9}, {3.8436608077960873`*^9, 
  3.84366086770432*^9}},
 TextAlignment->Center,ExpressionUUID->"34ce4c99-1c0c-40c2-b283-daa19953a282"],

Cell["Nun haben wir alle n\[ODoubleDot]tigen Sachen, um den Graph zu \
zeichnen:", "Text",
 CellChangeTimes->{{3.8436608718556223`*^9, 
  3.843660907320278*^9}},ExpressionUUID->"eed111ae-0928-4966-bdea-\
ef37b079d934"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Table", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Cot", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "maxAngle"}], "/", 
         RowBox[{
          RowBox[{"Flatten", "[", 
           RowBox[{"MaximalBy", "[", 
            RowBox[{"tsa", ",", 
             RowBox[{
              RowBox[{"Take", "[", 
               RowBox[{"#", ",", 
                RowBox[{"-", "1"}]}], "]"}], "&"}]}], "]"}], "]"}], "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], "*", 
        RowBox[{
         RowBox[{"tsa", "[", 
          RowBox[{"[", "u", "]"}], "]"}], "[", 
         RowBox[{"[", "3", "]"}], "]"}], "*", 
        RowBox[{"Pi", "/", "180"}]}], "]"}], "\[IndentingNewLine]", "*", 
      RowBox[{"(", 
       RowBox[{"x", "-", 
        RowBox[{
         RowBox[{"tsa", "[", 
          RowBox[{"[", "u", "]"}], "]"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], ")"}]}], "+", 
     RowBox[{"h", "[", 
      RowBox[{
       RowBox[{"tsa", "[", 
        RowBox[{"[", "u", "]"}], "]"}], "[", 
       RowBox[{"[", "2", "]"}], "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"u", ",", "1", ",", "103", ",", "5"}], "}"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Plot", "[", 
   RowBox[{"%", ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "1.4"}], "}"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "1.4"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"10", ",", "20"}], "}"}]}], "}"}]}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"%", ",", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{"sh", ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Black"}]}], "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.8434903433841248`*^9, 3.843490458483348*^9}, {
   3.843490492829247*^9, 3.843490871071439*^9}, 3.843491182912325*^9, {
   3.843491231437977*^9, 3.843491235662241*^9}, {3.843491267462572*^9, 
   3.8434912976855164`*^9}, {3.843491535666297*^9, 3.8434915374551973`*^9}, {
   3.843491837507299*^9, 3.8434918429063587`*^9}, 3.843492039183428*^9, {
   3.843492148223803*^9, 3.843492167866583*^9}, {3.843642571362631*^9, 
   3.8436425717417603`*^9}, 3.843660247463441*^9, {3.843660467100073*^9, 
   3.843660468807292*^9}, {3.843660532009604*^9, 3.8436605352613564`*^9}, 
   3.843661044283437*^9, {3.86811071641685*^9, 3.868110718873156*^9}, {
   3.8681108400419827`*^9, 3.868110841510477*^9}, {3.868111052731106*^9, 
   3.868111054341715*^9}, {3.8681117899479027`*^9, 3.868111817389097*^9}, {
   3.868111988597167*^9, 3.868111991340477*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"22c5c21b-18cb-4b09-9ab9-2f58a7781e69"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, {}, 
     TagBox[
      {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
       Opacity[1.], 
       LineBox[{{2.857142857142857*^-8, 12.942938770951518`}, {
        0.0004294050887834774, 12.9376309071418}, {0.0008587816061383834, 
        12.932323043332081`}, {0.0017175346408481954`, 12.921707315712645`}, {
        0.0034350407102678193`, 12.90047586047377}, {0.006870052849107067, 
        12.858012949996024`}, {0.013740077126785563`, 12.77308712904053}, {
        0.027480125682142555`, 12.603235487129542`}, {0.0572716999196421, 
        12.234958200556234`}, {0.08508903699821294, 11.891086025916461`}, {
        0.11236070834642646`, 11.553959258315272`}, {0.14194385682142555`, 
        11.188258487962749`}, {0.16955276813749592`, 10.846962829543761`}, {
        0.19947315658035186`, 10.477093168373441`}, {0.22884787929285053`, 
        10.113968914241703`}, {0.2380673274999097, 10.}}]},
      Annotation[#, "Charting`Private`Tag$2930#2"]& ], 
     TagBox[
      {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], 
       Opacity[1.], 
       LineBox[{{2.857142857142857*^-8, 14.567985018928248`}, {
        0.0004294050887834774, 14.559498662635551`}, {0.0008587816061383834, 
        14.551012306342855`}, {0.0017175346408481954`, 14.534039593757463`}, {
        0.0034350407102678193`, 14.500094168586676`}, {0.006870052849107067, 
        14.432203318245103`}, {0.013740077126785563`, 14.296421617561958`}, {
        0.027480125682142555`, 14.024858216195668`}, {0.0572716999196421, 
        13.436046524635998`}, {0.08508903699821294, 12.886254386451442`}, {
        0.11236070834642646`, 12.347246987574602`}, {0.14194385682142555`, 
        11.762554699870673`}, {0.16955276813749592`, 11.216881965541857`}, {
        0.19947315658035186`, 10.625524342385955`}, {0.22884787929285053`, 
        10.044951458537764`}, {0.23112224770860737`, 10.}}]},
      Annotation[#, "Charting`Private`Tag$2930#3"]& ], 
     TagBox[
      {RGBColor[0.922526, 0.385626, 0.209179], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1:eJwBIQLe/SFib1JlAgAAACEAAAACAAAAm1pFjKetXj4BYDXDhfUvQDjEJNA4
JDw/RG73ELnzL0Ctq9V0+yNMP4Z8uV7s8S9AaB8ux9wjXD8MmT36Uu4vQEVZ
WnDNI2w/F9JFMSDnL0A0dvDExSN8PyxEVp+62C9Aq4Q778EjjD9YKHd777sv
QOcLYQTAI5w/r/C4M1mCL0DhSUhct1KtPyVST498BS9AIswnJ2XItT+N5wYp
5pAuQDMLtN+rw7w/2o+FOpkeLkC5Q3VfNyvCP+4IFzecoi1AdmQMteezxT/1
tclx5S4tQMqj+B1WiMk/xDOPl36xLEAPL6km40rNP3fEGzVhNixAeM6qil9m
0D8dickQisMrQLSUq4ssTdI/ih6K1wJHK0A/TKr/oBPUP+rna9zB0ipAwimL
wyTR1T8uxBRZymAqQJGWFpGHtNc/OnHQwCLlKUCu9J/RkXfZPzhSrWbBcSlA
F+LTG3tg2z/+A533r/QoQHj16bVzQN0/qchTAOh5KEAn+v3CEwDfP0bBK0dm
ByhAEUfebMly4D+qihZ5NIsnQLaJvLFcVeE/Aogi6UgXJ0ABFHB730riPyBW
QUStmSZASLEU7ek74z8kNycXWx4mQDZHOBjIHOQ/GUwuKE+rJUDKJDHIlRDl
P9YxSCSTLiVABfuoMTf05T+GS4NeHbokQDzkEUNg0+Y/GniFEPFHJECaIKrk
/V/nPwAAAAAAACRAU4jpBg==
        "]]},
      Annotation[#, "Charting`Private`Tag$2930#4"]& ], 
     TagBox[
      {RGBColor[0.528488, 0.470624, 0.701351], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1:eJwBQQK+/SFib1JlAgAAACMAAAACAAAAm1pFjKetXj6hGp9peuUyQDjEJNA4
JDw/V1923DvkMkCtq9V0+yNMPw6kTU/94jJAaB8ux9wjXD96Lfw0gOAyQEVZ
WnDNI2w/VEBZAIbbMkA0dvDExSN8PwdmE5eR0TJAq4Q778EjjD9ssYfEqL0y
QOcLYQTAI5w/OEhwH9eVMkDhSUhct1KtP6Db6PaAPzJAIswnJ2XItT98YpB6
4+4xQDMLtN+rw7w/7AKP0dqfMUC5Q3VfNyvCPy8JNUofSjFAdmQMteezxT/l
AgpvHPowQMqj+B1WiMk/bWKGtWajMEAPL6km40rNP4nbWc9FTjBAeM6qil9m
0D8zkLgqu/0vQLSUq4ssTdI/9zQM+oRRL0A/TKr/oBPUP6TAvSHAsC5AwimL
wyTR1T94fx3wJBMuQJGWFpGHtNc/8AnMASRoLUCu9J/RkXfZP1B72GuUyCxA
F+LTG3tg2z9VuDMZnxssQHj16bVzQN0/gCg9bdNxK0An+v3CEwDfP5R/pBl5
0ypAEUfebMly4D9MoloJuScqQLaJvLFcVeE/7KtuUWqHKUABFHB730riPzCB
0dy12ShASLEU7ek74z+cieIOKy8oQDZHOBjIHOQ/8HhRmRGQJ0DKJDHIlRDl
P+gzD2eS4yZABfuoMTf05T/I1SqNhEImQDzkEUNg0+Y/0Kr0WaCkJUAZFVDZ
eMXnP3xLDWpW+SRAnT4NKWWn6D8Q04PSfVkkQLB78mzhJek/AAAAAAAAJEAJ
lv12
        "]]},
      Annotation[#, "Charting`Private`Tag$2930#5"]& ], 
     TagBox[
      {RGBColor[0.772079, 0.431554, 0.102387], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1:eJwBEQLu/SFib1JlAgAAACAAAAACAAAA8igHw/9Roz8AAAAAAAA0QOFJSFy3
Uq0/Ipcd1+/GM0AizCcnZci1P1RDtAewdTNAMwu036vDvD9dRMc6CCYzQLlD
dV83K8I/Fbt+EqDPMkB2ZAy157PFPzl2nhv8fjJAyqP4HVaIyT8Mp2LJlycy
QA8vqSbjSs0/tyyjecvRMUB4zqqKX2bQP872S1vDgTFAtJSriyxN0j+UNpnh
+ioxQD9Mqv+gE9Q/x7pOmfbZMEDCKYvDJNHVP9GTgFOKijBAkZYWkYe01z+K
4layXTQwQK70n9GRd9k/XusqherHL0AX4tMbe2DbPwb98O6YGS9AePXptXNA
3T9euK9dd24uQCf6/cITAN8/jvw+L97OLUARR95syXLgPxwsF0rEIS1Atom8
sVxV4T+D5L/HMoAsQAEUcHvfSuI/R4ixjiDRK0BIsRTt6TvjP7vVm1o+JStA
Nkc4GMgc5D8HrFaJ5IQqQMokMciVEOU/sW1aAQrXKUAF+6gxN/TlPzS4Lty3
NClAPOQRQ2DT5j9mrPu7lZUoQBkVUNl4xec/9osR5fLoJ0CdPg0pZafoP1/0
93DYRydAx6+f/UCc6T8mSCdGPZkmQO0zI3qkjOo/nEVPINLtJUC6sCWw22zr
P+rLR13vTSVALXX9agJg7D+WPYnji6AkQEeVz80mQe0/AAAAAAAAJEAXb+3H

        "]]},
      Annotation[#, "Charting`Private`Tag$2930#6"]& ], 
     TagBox[
      {RGBColor[0.363898, 0.618501, 0.782349], AbsoluteThickness[1.6], 
       Opacity[1.], 
       LineBox[{{0.42826022607124276`, 20.}, {0.45417311895665535`, 10.}}]},
      Annotation[#, "Charting`Private`Tag$2930#7"]& ], 
     TagBox[
      {RGBColor[1, 0.75, 0], AbsoluteThickness[1.6], Opacity[1.], 
       LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAAm1pFjKetXj4Og0+3La0yQDjEJNA4
JDw/qVNRn2KsMkCtq9V0+yNMP0QkU4eXqzJAaB8ux9wjXD95xVZXAaoyQEVZ
WnDNI2w/5Ade99SmMkA0dvDExSN8P7qMbDd8oDJAq4Q778EjjD9llom3ypMy
QOcLYQTAI5w/vKnDt2d6MkDhSUhct1KtP9Tb9mVcQzJAIswnJ2XItT9c9vri
9g8yQDMLtN+rw7w/UVofeZPdMUC5Q3VfNyvCP7DJAr3qpjFAdmQMteezxT+A
IbfP53MxQMqj+B1WiMk/uIQqkJ88MUAPL6km40rNP18xvmlZBjFAeM6qil9m
0D92xiISudMwQLSUq4ssTdI/9mZGaNOcMEA/TKr/oBPUP+fvOo2TaTBAwimL
wyTR1T9Fwk/LVTcwQJGWFpGHtNc/DaAjt9IAMECu9J/RkXfZP4rMkOPqmy9A
F+LTG3tg2z/Mb1i0pS0vQHj16bVzQN0/66Vgt2TBLkAn+v3CEwDfP+qsClhv
XC5AEUfebMly4D+8yjJU7+4tQLaJvLFcVeE/brn87bqILUABFHB730riP/O+
ROP7GS1ASLEU7ek74z9UV80KQa0sQDZHOBjIHOQ/lcD3z9FHLEDKJDHIlRDl
P6lAoPDX2StABfuoMTf05T+ekequKXMrQDzkEUNg0+Y/b3V1n38OK0AZFVDZ
eMXnPxJwfutKoSpAnT4NKWWn6D+WOynVYTsqQMevn/1AnOk/7B1SGu7MKUDt
MyN6pIzqPx6Tu5F+YClAurAlsNts6z8y2camWvsoQC11/WoCYOw/FzZQF6yN
KEBHMlTf/ELtP95jeyVJJyhAXQKc+34h7j+AJOdl6sInQBkauZzwEu8/9PvQ
AQFWJ0B8KlX3NfTvP0qkXDtj8CZAQkFjazV08D9yY2bQOoImQJpp27c55vA/
e/MRA14bJkBwG0zYAVbxP2AW/meFtiVAGXEnu0HP8T8XUGgoIkklQBVDwnpr
QPI/r1p0hgrjJEDkuMf8DLvyPxp8/j9odCRAMbjFUnIz8z9hMMkrygckQHzh
ZL0UPPM/AAAAAAAAJEBuFHHV
        "]]},
      Annotation[#, "Charting`Private`Tag$2930#8"]& ], 
     TagBox[
      {RGBColor[0.647624, 0.37816, 0.614037], AbsoluteThickness[1.6], Opacity[
       1.], LineBox[CompressedData["
1:eJwBwQI+/SFib1JlAgAAACsAAAACAAAAY1QcQqxerD8AAAAAAAA0QOFJSFy3
Uq0/6MMu6uv7M0AizCcnZci1P3cUsf/8vjNAMwu036vDvD+yElYSQIMzQLlD
dV83K8I/6Xd+9HJCM0B2ZAy157PFPyMumer4BTNAyqP4HVaIyT9aSzewbsQy
QA8vqSbjSs0/PRb4chaEMkB4zqqKX2bQPyEyq0kRSDJAtJSriyxN0j8DteHv
+wYyQD9Mqv+gE9Q/54gKqjnKMUDCKYvDJNHVP3YKVmGpjjFAkZYWkYe01z8D
8yToCE4xQK70n9GRd9k/kizmgrsRMUAX4tMbe2DbPx7NKu1d0DBAePXptXNA
3T9WG5JUMpAwQCf6/cITAN8/j7rrz1lUMEARR95syXLgP8fAyBpxEzBAtom8
sVxV4T//LzDztq0vQAEUcHvfSuI/bKzVT2sqL0BIsRTt6TvjPzCEwKaDqS5A
Nkc4GMgc5D/3/Y8lQjEuQMokMciVEOU/ukVmQ+CuLUAF+6gxN/TlP4EvIYkk
NS1APOQRQ2DT5j+edCHJzL0sQBkVUNl4xec/tocoqFQ8LECdPg0pZafoP9I8
FK+CwytAx6+f/UCc6T/qvwZVkEArQO0zI3qkjOo/WJ4+9QHAKkC6sCWw22zr
P8oeW70ZSCpALXX9agJg7D82bX4kEcYpQEcyVN/8Qu0/qF2Gs65MKUBdApz7
fiHuP2+p0zyw1ShAGRq5nPAS7z8xwydlkVQoQHwqVfc19O8/+H5gtRjcJ0BC
QWNrNXTwP7oIoKR/WSdAmmnbtznm8D+ANMS7jN8mQHAbTNgBVvE/nLstzf1n
JkAZcSe7Qc/xP7MQnn1O5iVAFUPCemtA8j/PB/NVRW0lQOS4x/wMu/I/5sxO
zRvqJEAxuMVScjPzP1Tt7z5WaSRADLrUke6V8z8AAAAAAAAkQCWOOog=
        "]]},
      Annotation[#, "Charting`Private`Tag$2930#9"]& ], 
     TagBox[
      {RGBColor[0.571589, 0.586483, 0.], AbsoluteThickness[1.6], Opacity[1.], 
       LineBox[CompressedData["
1:eJwBkQJu/SFib1JlAgAAACgAAAACAAAA3UFxdRapzD8AAAAAAAA0QA8vqSbj
Ss0/8t574Uf0M0B4zqqKX2bQP996Vpo/szNAtJSriyxN0j8rzaXkumwzQD9M
qv+gE9Q/o1ketuUqM0DCKYvDJNHVPwKfLhJc6jJAkZYWkYe01z/AmrP/VaQy
QK70n9GRd9k/qtBhdP9iMkAX4tMbe2DbP/O8hHosHDJAePXptXNA3T8jYj8L
pdYxQCf6/cITAN8/f0EjI82VMUARR95syXLgPzrXe8x4TzFAtom8sVxV4T8h
p/380w0xQAEUcHvfSuI/Zy30vrLGMEBIsRTt6TvjP5RsggvdgDBANkc4GMgc
5D/t5Tnftj8wQMokMciVEOU/SSvMiCjyL0AF+6gxN/TlPxD/dmFCbi9APOQR
Q2DT5j+mRFFP8+wuQBkVUNl4xec/+vYUYKtgLkCdPg0pZafoP6UdK3/C3S1A
x6+f/UCc6T8PsSrB4E8tQO0zI3qkjOo/R7ZZGJbELEC6sCWw22zrP9cv232q
QixALXX9agJg7D8lFkYGxrUrQEcyVN/8Qu0/ynADnUAyK0BdApz7fiHuPz49
8EhSsSpAGRq5nPAS7z9wdsYXayUqQHwqVfc19O8/+iPv9OKiKUBCQWNrNXTw
P0I+AfVhFSlAmmnbtznm8D/hzGUDQJEoQHAbTNgBVvE/T835JrUPKEAZcSe7
Qc/xP3s6d20xgydAFUPCemtA8j/+G0fCDAAnQOS4x/wMu/I/QWoAOu9xJkAx
uMVScjPzP1Iq6cZo5iVA0jODhcGj8z+6XiRiQWQlQEZTq3qIHfQ/4P9IICHX
JEAN75JMOY/0P14VwOxfUyRAc4tQ5yrX9D8AAAAAAAAkQHrIJNk=
        "]]},
      Annotation[#, "Charting`Private`Tag$2930#10"]& ], 
     TagBox[
      {RGBColor[0.915, 0.3325, 0.2125], AbsoluteThickness[1.6], Opacity[1.], 
       LineBox[CompressedData["
1:eJwBIQLe/SFib1JlAgAAACEAAAACAAAAl3Zb/Sgx2D8AAAAAAAA0QK70n9GR
d9k/FomuLLfHM0AX4tMbe2DbP09ee/doczNAePXptXNA3T+5d8FopSAzQCf6
/cITAN8/hKC3tXXTMkARR95syXLgPyV3uT6+fzJAtom8sVxV4T8lXWujmjEy
QAEUcHvfSuI/+/AoRO/cMUBIsRTt6TvjPwPJX4vOiTFANkc4GMgc5D9rsEau
QTwxQMokMciVEOU/qEU5DS3oMEAF+6gxN/TlP0bq20esmTBAPOQRQ2DT5j8W
0/cotkwwQBkVUNl4xec/d9M+jHDyL0CdPg0pZafoP4If7n2cVi9Ax6+f/UCc
6T83x7TnuK0uQO0zI3qkjOo/UfdtnuoHLkC6sCWw22zrPyxGhwxEbS1ALXX9
agJg7D+w8LfyjcUsQEcyVN/8Qu0/9rlIkP8oLEBdApz7fiHuP6ALzHqGjytA
GRq5nPAS7z/0uGbd/egqQHwqVfc19O8/CoVh95xNKkBCQWNrNXTwP8qsc4ks
pSlAmmnbtznm8D9K8+XS4wcpQHAbTNgBVvE/L8JKabBtKEAZcSe7Qc/xP77s
xndtxidAFUPCemtA8j8ONqM9UionQOS4x/wMu/I/CtuWeyeBJkAxuMVScjPz
P2gIfQYS2yVA0jODhcGj8z+IVMNIJEAlQEZTq3qIHfQ/UPwgAyeYJECKInp2
1Iv0PwAAAAAAACRAAE30AA==
        "]]},
      Annotation[#, "Charting`Private`Tag$2930#11"]& ], 
     TagBox[
      {RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1:eJwVjWs0lAkYgKWyp2jF6CLaaETqm+tXmVa8L46hWRRbtEi2sLmckBqFtGez
S6UtXbQxdrbljJhsbDPubaGJihISS7mWu5k081UYbfvjOc95fj2W+6N9QnV1
dHQ8P/O/s/1d0/OLghzDreeT7s9J5N23auZZbYNqRWBuaxuJRdLnR2boHvBl
aClt3+c+uIZZ300PhNu54eqjrSS6fucf00SPAq1Fszz3GYmbhKr7CnoSZJjl
8D41kShNsVfW0NOhYqmdY+kDEof0v19wjy6CRTMR263KSezb7h5Y5lMEV4f0
BtJ/I3Fto41NaIMcmNr2qCWJJJL6sh5pXTWs2tK1Ym0QiRUuR/fZbawF9S80
fp0jicIQA/nQbQW06/wYkmRJ4qPcD6t90x6C5KKFXu08Eg1ZBdYDgiZodNM0
ZPdz8diTwjP7wpphet1c4jkFF2WXpWcJzxZYbm7/t76Ei+BR+OkPWhvY29/s
uJ7GxVrbs3VWz56D/IS3RWMkFzMyl2ekyl6AeceGsZ88uPiXWvwsI74TzgXw
JN4sLq7obzVLDO6CMer44E3Dzz/NiDwOX8LvcqWLSMVBm2ltLU2nB/xzrl3K
beWgkdurqIeHe2FBTnyYnYyDpaerSwJ390GZ4rTtQCYH55nEJPYI+sFPrzna
LJ6D7iUmEyP2A+AZIXgx5MfBLW68lQ3mg/DN+w/Mxq85+MiK03Bl6WvgiboW
OZhxcOHMDY6d+jUwIqbaFFo2bhs0cglufQPxAQ41/b1sNF22s/OYYghuhVSz
02vYmOO4xDY0fxiUmdEXPPPYWH9LrEXRCHzV5xuXncLGCZKekJc+Cte9Dsef
CGVjZfG64q6oMWC+romMd2cj46g2Qjd4HG5cch3QrmejG3dXz6zzBGyM1ApE
+mzcqyuaSbacBL3Glvyclyw0XVUhUhkr4eJb43tmYhYmbdj9frNaCezwqvKH
ISx0djoQufmICgqWNpZdWMfCrPCusq1vVLBpsevV1FEmxph5dMzzfQsHBdYV
kmImmsbaVDk9fQvHK6P7XsUycZlLbUIkTkF2kuUo346Jg+X1swZVU3DtkP3H
+vcM5JQrfA6T78Ap/44gtoKBLeSpn2ty38E050aS4CQD+d9KE9JWq+HC+LRs
GzJwifKix9bzatjyUd4UtJCBPiZxU0Vzakjz6Fxf8JjAiJd3/LPiNSB7GnLG
4ByB7WsbxDHDGpjK29Mo9iHQYbJOeHBUA/2xyWNZ3gTmVdz1DB7XQItj3uLM
nQTG7iyb2aHSQEmH0j3di0CDZIkf64MGog1SFccEBDp1phhOfkHBRJz8H29n
Am+edzoZaUPBkLNxyXwugbQAB98DthS0G/Ka59gEJlhvZQRspOBB917lRxaB
bnfYXQIWBRJhAUPFILB/dI3dBjsKQgqxsNuWwJX8uclhPgV9RtG5cksCTxpN
K3rdKWh+dbm22ILAN90aUYeAgnvSyj7pGgJvx00IGrwoELvqWfy5mkCv692S
fF8Kgo7niH41JVAW1XFCvIcCL35d1emVBJrx2nZd9afAgTbyb8oKAoefPNZN
DaLAvGiTaeIyAndk1XcmB1NgkODPE5oQWBpaVyzcT8Es/0e/WBqB5py7qYdC
KBinSYRRxgSemq0MCgujoKv38ZUfjAj8Dzy+Rcg=
        "]]},
      Annotation[#, "Charting`Private`Tag$2930#12"]& ], 
     TagBox[
      {RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6], Opacity[1.], 
       LineBox[{{0.8300683739256396, 20.}, {0.857038349187426, 
        18.706805023270675`}, {0.8867199029588498, 17.28359139900337}, {
        0.9144272195713449, 15.955041323813044`}, {0.9415888704534826, 
        14.652655610088456`}, {0.9710619984624059, 13.239435882607125`}, {
        0.9985608893124005, 11.920879704202775`}, {1.0283712572891806`, 
        10.491489512041685`}, {1.0386214208141864`, 10.}}]},
      Annotation[#, "Charting`Private`Tag$2930#13"]& ], 
     TagBox[
      {RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1:eJwBYQOe/CFib1JlAgAAADUAAAACAAAAFUVtXv7R4D8AAAAAAAA0QLaJvLFc
VeE/3XHW5RLgM0ABFHB730riP3tyl2lopDNASLEU7ek74z+L8tII1GkzQDZH
OBjIHOQ/bK+32y0zM0DKJDHIlRDlPwFxuZnt9zJABfuoMTf05T9nb2SLm8Ay
QDzkEUNg0+Y/P+2JmF+KMkAZFVDZeMXnP8xvzJCJTzJAnT4NKWWn6D8pL7i8
oRgyQMevn/1AnOk/O/PA0x/dMUDtMyN6pIzqP742RAa0ojFAurAlsNts6z8T
t3BsNmwxQC11/WoCYOw/HDy6vR4xMUBHMlTf/ELtP/X9rEL1+TBAXQKc+34h
7j9BPxrj4cMwQBkauZzwEu8/QYWkbjSJMEB8KlX3NfTvPxII2C11UjBAQkFj
azV08D+YjyjYGxcwQJpp27c55vA/3KdEbGG/L0BwG0zYAVbxP2wvLV+3Ui9A
GXEnu0HP8T9mwE8o2dwuQBVDwnprQPI/AcvEWNduLkDkuMf8DLvyPwXfc1+h
9y1AMbjFUnIz8z/t8Redl4ItQNIzg4XBo/M/d34OQmoVLUBGU6t6iB30P2kU
P70InyxADe+STDmP9D/9I8KfgzAsQFIUc/Kt/vQ/djI6uSrEK0Bq3b1amnf1
P1dK7KidTitA1iLIn3Do9T/Z2/D/7OAqQD3uw3Zo6vU/qWUqNgPfKkCkub9N
YOz1P3jvY2wZ3SpAcVC3+0/w9T8YA9fYRdkqQAx+plcv+PU/WCq9sZ7RKkBB
2YQP7gf2P9d4iWNQwipArI9Bf2sn9j/VFSLHs6MqQBNbPVZjKfY/pZ9b/cmh
KkB6JjktWyv2P3QplTPgnypAR70w20ov9j8UPQigDJwqQOLqHzcqN/Y/VGTu
eGWUKkAYRv7u6Eb2P9KyuioXhSpAfxH6xeBI9j+iPPRgLYMqQObc9ZzYSvY/
ccYtl0OBKkCzc+1KyE72PxLaoANwfSpATqHcpqdW9j9RAYfcyHUqQLRs2H2f
WPY/IYvAEt9zKkAbONRUl1r2P/EU+kj1cSpA6M7LAode9j+RKG21IW4qQE+a
x9l+YPY/YLKm6zdsKkC2ZcOwdmL2PzA84CFOaipAHDG/h25k9j8BxhlYZGgq
QIP8ul5mZvY/0E9TjnpmKkD3LI5T
        "]]},
      Annotation[#, "Charting`Private`Tag$2930#14"]& ], 
     TagBox[
      {RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1:eJwBcQOO/CFib1JlAgAAADYAAAACAAAAtknkVmGl3z8AAAAAAAA0QBFH3mzJ
cuA/0HcsNOzWM0C2ibyxXFXhP8G+1dPJnDNAARRwe99K4j+uVe6uy10zQEix
FO3pO+M/UBYmJ/MfM0A2RzgYyBzkP4HtVO1A5jJAyiQxyJUQ5T+vFPPusqcy
QAX7qDE39OU/bVKIPkttMkA85BFDYNPmP965PCsJNDJAGRVQ2XjF5z9OcWBT
6/UxQJ0+DSllp+g/TD97yfO7MUDHr5/9QJzpP0hdBXsgfTFA7TMjeqSM6j/4
pK7Jcj8xQLqwJbDbbOs/NgNPZusFMUAtdf1qAmDsP3OxXj6IxzBARzJU3/xC
7T8/dmVkS40wQF0CnPt+Ie4/vmSLJzRUMEAZGrmc8BLvPzyjICZBFjBAfCpV
9zX07z+Q8Fnl6LgvQEJBY2s1dPA/pDpR9Zc7L0Caadu3OebwP9exNqGTxi5A
cBtM2AFW8T9xfFqH2lMuQBlxJ7tBz/E/Budc5GnXLUAVQ8J6a0DyP7p+Td1F
Yy1A5LjH/Ay78j9pthxNauUsQDG4xVJyM/M/gEEq99lpLEDSM4OFwaPzP7X5
JT2W9itARlOreogd9D/lUQD6mnkrQA3vkkw5j/Q/NNfIUuwEK0BSFHPyrf70
P+uvz+WIkipAat29Wpp39T+dKLXvbRYqQNYiyJ9w6PU/bc6IlZ+iKUA97sN2
aOr1PxZBoXyaoClApLm/TWDs9T++s7ljlZ4pQHFQt/tP8PU/EZnqMYuaKUAM
fqZXL/j1P7VjTM52kilAQdmED+4H9j/++A8HToIpQKyPQX9rJ/Y/kCOXePxh
KUATWz1WYyn2PzmWr1/3XylAeiY5LVsr9j/iCMhG8l0pQEe9MNtKL/Y/NO74
FOhZKUDi6h83Kjf2P9i4WrHTUSlAGEb+7uhG9j8hTh7qqkEpQH8R+sXgSPY/
ysA20aU/KUDm3PWc2Er2P3IzT7igPSlAs3PtSshO9j/FGICGljkpQE6h3Kan
VvY/aePhIoIxKUC0bNh9n1j2PxNW+gl9LylAGzjUVJda9j+8yBLxdy0pQOjO
ywKHXvY/Dq5Dv20pKUBPmsfZfmD2P7cgXKZoJylAtmXDsHZi9j9gk3SNYyUp
QBwxv4duZPY/CgaNdF4jKUCD/LpeZmb2P7J4pVtZISlAiF6XIw==
        "]]},
      Annotation[#, "Charting`Private`Tag$2930#15"]& ], 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], 
       LineBox[{{0.9001044576278148, 20.}, {0.9144272195713449, 
        19.62909150541217}, {0.9415888704534826, 18.925701539221688`}, {
        0.9710619984624059, 18.162452552491}, {0.9985608893124005, 
        17.450329272901485`}, {1.0283712572891806`, 16.678346972771763`}, {
        1.056207388107032, 15.957490379783211`}, {1.083497853194526, 
        15.250764584708703`}, {1.1130997954088058`, 14.48417976909399}, {
        1.1407275004641566`, 13.768720660620449`}, {1.170666682646293, 
        12.993402531606703`}, {1.2000601990980722`, 12.232215200507003`}, {
        1.2274794783909226`, 11.522153576548469`}, {1.2572102348105587`, 
        10.75223293204973}, {1.284966754071266, 10.03343799469216}, {
        1.2862579739943283`, 10.}}]},
      Annotation[#, "Charting`Private`Tag$2930#16"]& ], 
     TagBox[
      {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
       Opacity[1.], 
       LineBox[{{1.1486870372663829`, 20.}, {1.167780024674374, 10.}}]},
      Annotation[#, "Charting`Private`Tag$2930#17"]& ], 
     TagBox[
      {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1:eJwB8QEO/iFib1JlAgAAAB4AAAACAAAAm3xjifIf6z8AAAAAAAA0QLqwJbDb
bOs/gnoj1XTTM0Atdf1qAmDsP6ZXcAWiRjNARzJU3/xC7T+fC20XLcMyQF0C
nPt+Ie4/0T+B605CMkAZGrmc8BLvPwVHfEJ5tjFAfCpV9zX07z8OJSd7ATQx
QEJBY2s1dPA/Gta4NpKmMECaadu3OebwP/pd+tOAIjBAcBtM2AFW8T8ozKZm
DEIvQBlxJ7tBz/E/YIImKygpLkAVQ8J6a0DyP0LmBbP/Ii1A5LjH/Ay78j8q
8LJA6AYsQDG4xVJyM/M/hfqOUv7vKkDSM4OFwaPzP4eyyifQ6ylARlOreogd
9D+PENQCs9EoQA3vkkw5j/Q/QRw9oVHKJ0BSFHPyrf70P2Yo1cMdyCZAat29
Wpp39T+Q2jrs+q8lQNYiyJ9w6PU/YjoA2JOqJEA97sN2aOr1PxSt5qAEpiRA
pLm/TWDs9T/HH81pdaEkQHFQt/tP8PU/LwWa+1aYJEAMfqZXL/j1P/zPMx8a
hiRAQdmED+4H9j+ZZWdmoGEkQKyPQX9rJ/Y/0JDO9KwYJEATWz1WYyn2P4MD
tb0dFCRAeiY5LVsr9j82dpuGjg8kQEe9MNtKL/Y/nltoGHAGJEBXQMZFEjL2
PwAAAAAAACRAXQbV4w==
        "]]},
      Annotation[#, "Charting`Private`Tag$2930#18"]& ], 
     TagBox[
      {RGBColor[0.922526, 0.385626, 0.209179], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1:eJwBcQOO/CFib1JlAgAAADYAAAACAAAA6hDlekVY4D8AAAAAAAA0QBFH3mzJ
cuA/lPHW/8n3M0C2ibyxXFXhP4IqdFGgsTNAARRwe99K4j9SuZOFmWUzQEix
FO3pO+M/Su0yF/UaM0A2RzgYyBzkPw5u0MNS1TJAyiQxyJUQ5T+zRPBS04ky
QAX7qDE39OU/JGgO/VVDMkA85BFDYNPmP74wrAQ7/jFAGRVQ2XjF5z86T8zu
QrMxQJ0+DSllp+g/gbrq80xtMUDHr5/9QJzpP6p7i9t5ITFA7TMjeqSM6j/7
4asgCdcwQLqwJbDbbOs/GJXKgJqRMEAtdf1qAmDsPxeea8NORjBARzJU3/xC
7T/i8wohBQAwQF0CnPt+Ie4/qt1TuDt2L0AZGrmc8BLvP1N/lvOy4C5AfCpV
9zX07z+UutVkLlUuQEJBY2s1dPA/maEZm++9LUCaadu3OebwPzUiWge1MC1A
cBtM2AFW8T8i7ZkuP6YsQBlxJ7tBz/E/0mPeGg8QLEAVQ8J6a0DyPxt0Hz3j
gytA5LjH/Ay78j8nMGUk/esqQDG4xVJyM/M/gzaqxttWKkDSM4OFwaPzP3fW
656+yylARlOreogd9D8uIjI85zQpQA3vkkw5j/Q/fgd1DxSoKEBSFHPyrf70
Px43t50FHihAat29Wpp39T+BEv7wPIgnQNYiyJ9w6PU/fIdBenj8JkA97sN2
aOr1P8ZaUGMI+iZApLm/TWDs9T8QLl9MmPcmQHFQt/tP8PU/pNR8HrjyJkAM
fqZXL/j1P80huML36CZAQdmED+4H9j8gvC4Ld9UmQKyPQX9rJ/Y/xPAbnHWu
JkATWz1WYyn2Pw3EKoUFrCZAeiY5LVsr9j9XlzlulakmQEe9MNtKL/Y/7D1X
QLWkJkDi6h83Kjf2PxWLkuT0miZAGEb+7uhG9j9mJQktdIcmQH8R+sXgSPY/
sPgXFgSFJkDm3PWc2Er2P/rLJv+TgiZAs3PtSshO9j+PckTRs30mQE6h3Kan
VvY/t79/dfNzJkC0bNh9n1j2PwKTjl6DcSZAGzjUVJda9j9MZp1HE28mQOjO
ywKHXvY/4Qy7GTNqJkBPmsfZfmD2PyvgyQLDZyZAtmXDsHZi9j91s9jrUmUm
QBwxv4duZPY/wIbn1OJiJkCD/LpeZmb2Pwpa9r1yYCZA0OKVrQ==
        "]]},
      Annotation[#, "Charting`Private`Tag$2930#19"]& ], 
     TagBox[
      {RGBColor[0.528488, 0.470624, 0.701351], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1:eJwBgQN+/CFib1JlAgAAADcAAAACAAAAVUNF4KC13j8AAAAAAAA0QCf6/cIT
AN8/Ha/szv71M0ARR95syXLgP26fEbrAtDNAtom8sVxV4T9jlEhp23czQAEU
cHvfSuI/ZukmP981M0BIsRTt6TvjP4ZhnqQW9TJANkc4GMgc5D9K3ifOprgy
QMokMciVEOU/HbtYHiB3MkAF+6gxN/TlP5ScmzLyOTJAPOQRQ2DT5j8ooXfW
9/0xQBkVUNl4xec/ygX7oOa8MUCdPg0pZafoPxFvkC8ugDFAx6+f/UCc6T9l
OM3kXj4xQO0zI3qkjOo/1iSjKcP9MEC6sCWw22zrP+0VizKAwTBALXX9agJg
7D8RZxpiJoAwQEcyVN/8Qu0/2by7VSVDMEBdApz7fiHuP7819thXBzBAGRq5
nPAS7z9lHbAF54wvQHwqVfc19O8/ltiX4c8TL0BCQWNrNXTwP+JTzgqLkC5A
mmnbtznm8D932Ci89xUuQHAbTNgBVvE/R6O1jMudLUAZcSe7Qc/xPzIukapx
Gy1AFUPCemtA8j9mwpBQyaEsQOS4x/wMu/I/txbfQ/MdLEAxuMVScjPzP0Gx
X1aEnCtA0jODhcGj8z8UVQTxxiMrQEZTq3qIHfQ/A7n32NugKkAN75JMOY/0
PzwmD0miJipAUhRz8q3+9D+v2VjYz64pQGrdvVqad/U/PU3xtM8sKUDWIsif
cOj1PxXKrRmBsyhAPe7Ddmjq9T+vCKNwY7EoQKS5v01g7PU/SkeYx0WvKEBx
ULf7T/D1P4DEgnUKqyhADH6mVy/49T/qvlfRk6IoQEHZhA/uB/Y/wLMBiaaR
KECsj0F/ayf2P2ydVfjLbyhAE1s9VmMp9j8G3EpPrm0oQHomOS1bK/Y/oRpA
ppBrKEBHvTDbSi/2P9eXKlRVZyhA4uofNyo39j9Bkv+v3l4oQBhG/u7oRvY/
F4epZ/FNKEB/EfrF4Ej2P7HFnr7TSyhA5tz1nNhK9j9LBJQVtkkoQLNz7UrI
TvY/gYF+w3pFKEBOodymp1b2P+x7Ux8EPShAtGzYfZ9Y9j+Hukh25jooQBs4
1FSXWvY/Ivk9zcg4KEDozssCh172P1h2KHuNNChAT5rH2X5g9j/ytB3SbzIo
QLZlw7B2YvY/jPMSKVIwKEAcMb+HbmT2PygyCIA0LihAg/y6XmZm9j/CcP3W
FiwoQLWpnYo=
        "]]},
      Annotation[#, "Charting`Private`Tag$2930#20"]& ]}, {}}, {{}, {{{}, {}, 
      {GrayLevel[0], PointSize[
        NCache[
         Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
       LineBox[{{0., 13.3}, {0.0284014423076923, 12.5}, {0.145348557692307, 
        11.7}, {0.182103365384615, 12.9}, {0.24558894230769202`, 14.9}, {
        0.27900240384615305`, 15.6}, {0.380913461538461, 16.1}, {
        0.437716346153846, 14.5}, {0.7484615384615381, 16.2}, {
        0.913858173076923, 17.}, {0.9623076923076921, 16.6}, {
        1.00407451923077, 15.9}, {1.05920673076923, 14.8}, {1.09930288461538, 
        14.8}, {1.1360576923076902`, 14.6}, {1.16947115384615, 14.}, {
        1.3098076923076902`, 11.8}, {1.3900000000000001`, 14.2}}]}}, 
     {GrayLevel[0], PointSize[
       NCache[
        Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6]}, {
      {GrayLevel[0], PointSize[
        NCache[
         Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
       1.6]}, {}}, {
      {GrayLevel[0], PointSize[
        NCache[
         Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
       1.6]}, {}}}, {{}, {}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 10.},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 1.4}, {10, 20}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.868111818158331*^9, 3.8681119952754908`*^9, 
  3.868172657747869*^9, 3.86817387822388*^9, 3.868174426504427*^9, 
  3.868176290352213*^9, 3.868176359654469*^9},
 TextAlignment->Center,
 CellLabel->"Out[18]=",ExpressionUUID->"c3f84f86-5748-47ee-9fe2-aaf7f6c15d31"]
}, Open  ]],

Cell["", "PageBreak",
 PageBreakBelow->True,ExpressionUUID->"736ee461-0417-4087-8e61-328099100169"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Farben \[ADoubleDot]ndern", "Chapter",
 CellChangeTimes->{{3.868124291648259*^9, 
  3.868124316953533*^9}},ExpressionUUID->"d7019564-42d9-4c6a-802e-\
34a8b097c483"],

Cell["\<\
Nun soll sich die Farbe der Linien entsprechend der Beschleunigung/Steigung \
\[ADoubleDot]ndern.\
\>", "Text",
 CellChangeTimes->{{3.8681727591213713`*^9, 3.86817281278386*^9}, {
  3.868173145143639*^9, 
  3.868173160495924*^9}},ExpressionUUID->"945ce784-fee9-45db-a6ea-\
e331721c8ca4"],

Cell[CellGroupData[{

Cell["Blau\[Rule]Kleinerer Winkel; Rot\[Rule]Gr\[ODoubleDot]\[SZ]erer Winkel \
", "Section",
 CellChangeTimes->{{3.868124420849546*^9, 3.868124445656402*^9}, {
  3.868173164782591*^9, 
  3.868173165917233*^9}},ExpressionUUID->"eda3dd01-7bf6-4cf1-91f4-\
f88f62d61cbf"],

Cell[TextData[{
 "Beim kleinsten Beschleunigung soll die Farbe blau sein. Es soll die linear \
roter werden, w\[ADoubleDot]hrend der Blauanteil linear kleiner wird. Bei \
einer Beschleunigung von ",
 Cell[BoxData[
  FormBox[
   RowBox[{"max", "/", "2"}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "bf923eac-e9d5-4e93-bc27-58b4e6af15bd"],
 " soll die Farbe gleich ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"127.5", ",", " ", "0", ",", " ", "127.5"}], ")"}], 
   TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "ad1d2487-e4e6-4722-92fb-05a42cdfe1e4"],
 " sein."
}], "Text",
 CellChangeTimes->{{3.868173167873448*^9, 3.868173232336061*^9}, {
  3.868173300459444*^9, 
  3.86817338114637*^9}},ExpressionUUID->"669ad6e1-aba4-471d-b200-\
de4507341d09"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"valuesLookedAt", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"tsa", "[", 
       RowBox[{"[", "u", "]"}], "]"}], "[", 
      RowBox[{"[", "3", "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"u", ",", "1", ",", "103", ",", "5"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"maxLookedAt", "=", 
   RowBox[{"Max", "[", "valuesLookedAt", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Table", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Plot", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Cot", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "maxAngle"}], "/", 
           RowBox[{
            RowBox[{"Flatten", "[", 
             RowBox[{"MaximalBy", "[", 
              RowBox[{"tsa", ",", 
               RowBox[{
                RowBox[{"Take", "[", 
                 RowBox[{"#", ",", 
                  RowBox[{"-", "1"}]}], "]"}], "&"}]}], "]"}], "]"}], "[", 
            RowBox[{"[", "3", "]"}], "]"}]}], "*", 
          RowBox[{
           RowBox[{"tsa", "[", 
            RowBox[{"[", "u", "]"}], "]"}], "[", 
           RowBox[{"[", "3", "]"}], "]"}], "*", 
          RowBox[{"Pi", "/", "180"}]}], "]"}], "\[IndentingNewLine]", "*", 
        RowBox[{"(", 
         RowBox[{"x", "-", 
          RowBox[{
           RowBox[{"tsa", "[", 
            RowBox[{"[", "u", "]"}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ")"}]}], "+", 
       RowBox[{"h", "[", 
        RowBox[{
         RowBox[{"tsa", "[", 
          RowBox[{"[", "u", "]"}], "]"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}], "]"}]}], ",", " ", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"x", ",", "0", ",", "1.4"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "1.4"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"10", ",", "20"}], "}"}]}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"ColorFunction", "\[Rule]", 
       RowBox[{"Function", "[", 
        RowBox[{"x", ",", 
         RowBox[{"RGBColor", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"tsa", "[", 
              RowBox[{"[", "u", "]"}], "]"}], "[", 
             RowBox[{"[", "3", "]"}], "]"}], "/", "maxLookedAt"}], ",", "0", 
           ",", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"maxLookedAt", "-", 
              RowBox[{
               RowBox[{"tsa", "[", 
                RowBox[{"[", "u", "]"}], "]"}], "[", 
               RowBox[{"[", "3", "]"}], "]"}]}], ")"}], "/", 
            "maxLookedAt"}]}], "]"}]}], "]"}]}]}], "]"}], ",", " ", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"u", ",", "1", ",", "103", ",", "5"}], "}"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Rasterize", "[", 
  RowBox[{
   RowBox[{"Show", "[", 
    RowBox[{"%", ",", 
     RowBox[{"ListLinePlot", "[", 
      RowBox[{"sh", ",", 
       RowBox[{"PlotStyle", "\[Rule]", "Black"}]}], "]"}]}], "]"}], ",", 
   RowBox[{"ImageResolution", "\[Rule]", "300"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"RGBColor", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"tsa", "[", 
        RowBox[{"[", "u", "]"}], "]"}], "[", 
       RowBox[{"[", "3", "]"}], "]"}], "/", "maxLookedAt"}], ",", "0", ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"maxLookedAt", "-", 
        RowBox[{
         RowBox[{"tsa", "[", 
          RowBox[{"[", "u", "]"}], "]"}], "[", 
         RowBox[{"[", "3", "]"}], "]"}]}], ")"}], "/", "maxLookedAt"}]}], 
    "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"u", ",", "1", ",", "103", ",", "5"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQAWIQ3fRHf+61i28c0y3eg2meXRKbQbRXm9teEN0z6dpB
EC3ReeQYiK4pvXAKRL++WngaRP9a/PgiiNb88fQqiLZQjme7DqRZyu6xg2i+
ps3GIDrhPI8piP5pG9UFouX+hfeD6E+c65aD6Ae+j1eA6K9ruJRvAumONRWq
IJqh2k4HRK/0eWoAohOetZqD6KjbzTYgWn7PpmAQ3ZShEQEWr3u4BUxvUNsK
ohc5n9kJohkXXz8Gor+Y1L64BaSPZUm8BNEcRfLaX4B0r6Q2mM7Sv/TzK5A+
UCn7C0SfUb7E/A1IXxN/zgqivQ5OfQui2YNmgmkAGnPEqw==
  "],
 CellLabel->"In[44]:=",ExpressionUUID->"58a1a7e8-fcfc-4e36-aaea-f07766b9ed53"],

Cell[CellGroupData[{

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzs3W1sHdedJviLaQwwwAI73ZhGf9gvXRtjF4NFY4EdNwaNmcFs2YAaGGCB
do92MAMsMFP2bEuy7Ci2Zdmx/FKKQyuRHNqWIjuSTakkxEkkJSEtOLQid+JS
i5RfKIVhWl4LpmQVSVOUGcp8ieiYkiyePeKxK9e3TlWdqjqnzqmq54eLRjd1
ee+hO2bIR///c/7nu772H9f8k1artfGf0f/xH+98+LYHHrjzkdV/TP+P/7Rh
491rN/zd//sfNjz4d2v/7oG/uuuP6AffoP/j/D9ttW7+7wQAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAgi8nJyb6+vqeffvqhhx66Z8XDDz/c3d396quvTk9PC77I73//+1/+
8pc7dux48MEH169ff//99z/55JMHDhwYHR1dXl5Wen4AAAAAAAAAgGqZnZ3d
uXPnmnhr167du3fv73//++TXGRoauv/+++NepLu7m75ROV8RAAAAAAAAAIDh
giC47777EgKZ0ObNm2dmZuJe59ixY6mvcP/993/00UdlfnUAAAAAAAAAAAa6
fPly+2TLPffc84Mf/GBkZGRiYmJsbGxoaGj37t1r164Nn+C6LndaZnh4uD17
2bFjx6lTp+iLvP/++6+++urGjRvDP3rsscc++eST8r9SAAAAAAAAAABzvPDC
C2Fa8uSTT16+fDn6nPfff799kObw4cMdT/j000/bU5df/vKXHU9YWFjYunVr
+ISDBw+q+noAAAAAAAAAAIx38eLFMCfZuHHj/Px83DPPnj0bTsusX7++Y9Dl
1VdfTc1bfve73339618PXwHFMgAAAAAAAADQWEeOHAmzlGPHjiU/+fnnnw+f
fOrUqfDjN27ceOihh9jHv/rVrybsJb3zzjvhK9C3lvZlAAAAAAAAAABUyne+
850wJEko72VOnDjBTVTef//98OP79u1LeIXPPvvsa1/7WthLI+VLAAAAAAAA
AAConHC+Zf369alPHhkZCbOXH/7wh+HHX3nllfDj77zzTvKLfO973wufjAuY
AAAAAAAAAKCZlpeXFxYWJiYmzp49m/rkuDmZHTt2hB+fnp5OfpHXXnstfPJb
b71V9AsAAAAAAAAAAKi7PXv2cOOUhx9+OBy2WV5eTn6RX/3qV+GL/PSnP1V8
ZAAAAAAAAACAavv444/vvvtulqWsW7fuypUr7OPLy8vhfUybN29OfZ0PPvgg
zGRefPFFxacGAAAAAAAAAKi29h4Y+r+HH19YWAg//u1vfzv1dWZmZsLnP/PM
MyqPDAAAAAAAAABQbf/wD/8QBinr1q1r7+a9dOlS+EfPPfdc6kv97ne/C5/f
1dWl8tQAAAAAAAAAABV25syZdevWhUHKq6++2v6nH374YfhHzz//fOqrffrp
p+Hzt2zZouzUAAAAAAAAAAAV9t57791zzz1hirJz586OFt8gCMI/3b17d+oL
Xrt2LXz+448/ruzgAAAAAAAAAABVNTIy0h7IPPXUU59++mnHc8bGxrg9M3GW
lpbC57uuq+TcAAAAAAAAAACVNTg42L6y9NRTTy0uLkaf1r67tGvXrtSX/eST
T8Lnf/Ob38x0pDVtMn1iJv+1dSDucda/xP2UuWCu29r5eOtJ7mOffUDdaUG7
Y+7JB1tPcx9brRfP+xO6DwjZbLOP3tnax33sdQb0nu2PWp91PO5yltM/TbFM
3wDpk59sPR73OGDv63jxj4MF1zpwb+u73Ee/+3bH8w/au7e3NnEfe6ytg+7r
av9ZAADPrdbMn7U+6ngkf8q99rv/pnUy+hj258s5c7LNzsX/rfX/dTzoB3Wf
C0C+ICD/pHWj47HF1f/jB0C9LS8v9/b2tgcgTz/9dHRChrl8+XL4tO7u7tQX
n52dDZ+/bdu2TAdTGsWEzvqXssYy9LcM+ntH3K8k9EF/YbngByUcHsp33p+I
y2TY45R3RvcZIYOZ4EpCLEP/SOPZopnM7fYNjedhMn0DHPGGEzIZ+thpdQf+
hfbXf9n5RVwmQx877N7wmfPBbFwgEz4O2uk7tgAg1wZnIZrJ/Mj7ffJncTOZ
e+13yzlzssngWjSToQ/6cd1HA5AMmQxA+a5evdp+7TXbSLp+/Xrc89s7e0Xu
Ubp48WKmXad25WQyJFcsQ/U6RxJ+K6GPN9zj5ZwfSjYbzG+1XkyIZQ45On+R
h6yMjWVusW4YmMkw9Pub4DfAuWDugL0vOZk57r7R/uJve++JxzKD7uvJscwe
a+uEf77UfzoAzfYj7/fRTGaDs5D8Wf3eNDeW6XHHyzl2Mscew6gMNAEyGYCS
zc/PP/XUU+2BzOHDhztKfaO+9rWvsSc/9NBDqW/x3nvvhS/+gx/8INPxSstk
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
gDKetTKpnKSoTCfZ13/Vv0iZIk3iZSRa5rZwW5vvwhxcJ3NNZNbJMKLenDel
MqKw31E7mMrJnA2HMXmW/0m/j+mZZ54pV7zIncw999wzeOS6detefvnl8mN+
9KMfFV9227aRDz4uOplT6ZKKlslGaWUyPSF6ZXigtbnYaFwCoB1GdTI5lQUz
CP41jVzLTMZtxLCDDFoG8PAv+7fyJOX+XvXF9LKT8SBSpkiTeBnvtYwtJ8Md
is020/s1wUK6zHUyq3vPip4iOoUsnzM2Gcbk32V0jSWCerl48eLExESxoEXF
yZw8eXLwsFtvvfXcOb7EY7zwwguDF7/hhht+/OMfj7Q8F51MNoqWyS5XoIVh
WGlmjLYyicJ+dyantO+LWyCExiUAtMN1Mnv71V+TKidlo4/JNKfTC7eGj4i0
zH3RPtsL7ArQMoCLZwUzzU9SPI6UKVI7XkauZdgBv+U3oh0rToaxIjxUdjKT
CaFgEHW2xMe4WmZXwh+Xox4sk9UdxuTrZXSVEsGWl3To0KE77rij6GGuu+46
FSezffv2wcMeffRR+V6+9rWvDR789NNPj7RCR51MdlnLiJzM6nDnkJbJxNPN
hjDXyiQK+9W+I/+MKwA0+WbCyfhVcTKZWvDvjkg1IA7UgH1L/1Lve9Ay1oGW
AVzUs3/ZI20vtpqGfUx+R8oUqR0vszWakmgZ148ktpwMt1RmReiGCy0j6mAS
PV49WCZn1GFMURR5fBldXiLY2jLOnTtXVCVjlwck7d69+ytf+YqKkyk+rDK8
9/HHHx88ePv20bq03HUyWZWWYfcOPV69lcmEmWkn7Nf1eWoAOEQTJ5OD4F+7
QMsQgZ0uQcsALp5l/9buY+I6GZ8iZYrUjpfxWMvYcjKZR0OxM3HY7/pIGCWn
HiyToz6MyZt0XwmSEsHW1vDMM88UhcznP//5559/vWZJ0cl89rOfHbQjVe5r
dnZ28Jrf+c53Rlqn006G8Vx/UaJluE9RbGUyMS97XXTEdNgv17i6NU8NAFdo
7mQyBP/aBlqGCNAyQIJPrUzsmL8h3Fijj8n7SJkiteNlJuMZL7WMRSfDHYod
9eba2bt21keHRwr7zcRaRnSeqDiMqSOX0UUlgq0tYOBkbrjhhm3bti0vL+e3
KzqZS5cunT9//vjx4y+88ELlvjpbJ5NTQ8tk9lqZjIb9dsG4AkAHrpNhN9Z4
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
Du7bEG5kj7G9TJuMFC/jlpa5JiLkZPwbip0j6mCSP0vUQFEOluE+MkmSV9Lz
X+1NSMwMtIwJRnIyL7300mc+85nB4z/3uc/Nz8/rXU9HnAzjuf6iRMvUe800
TbmNgUOEYVgpSbhhvyvDA5VrQOMSABZ5T3jRopPJ1IJ/d0ToStbGfdE+aBnr
QMuAerjeypT3MXEjZdiNubHZE++1vUybjBov44qWIeVkMh+HYjNm+ue4TmZ9
dFj+RJVgGXlfQ6WWwTAm7ag7mR//+MfFlqUvfvGLZ86c0b6e7jiZzIyWyUZp
ZZKoEtFc7PFYZuG4VXBoXAKgNaw7mRwE/7YJtAwFoGVAPTzI/t0T7y07mX8X
PD5obup4H9Oo8TISLXNbuM3WuxiCmpPxtVRmfXS4RgeTSrCMykAWuZbBMCa9
qDuZe++9d/DI22+//fx5I/ldnXIymVTLrO3tafLKzVuZ1kVHuFpmIV0WPYVb
pYPGJQBag4iTyRD82y7QMhSAlgG1USyYeT75oe2V8rkyPF3WMsUcYPQxjRQv
Q1/LUHMymaelMgyuk1kV7pc/Sx4sI5oRU75Yvyt+UqJlMIxJI4pO5umnnx48
7MYbbzx50lRuUtecTGZSy7BPnIqZkbQycZ2MKOxXZGXRuARAa5SdzHssjafM
USmYOZs6/5WJAtAyFICWAbVxOvv35uh82cl8Ovi/hwZnd7yPaaR4GbmWOZ1e
sPhGMoGTURskYorN8WLZyUS9OZtr0sGuZJGrZbbEx+RPlATLjNTXcKh/Qp76
a+BNdxEVJ3Pp0qW1a9cWY2TuVeZv/3a0y6AddDKMvclRQ1omG2VedlmejBT2
y/2AlxOlAADmuLpHy8lkCsG/KJjRBbQMBdi5kkTLPJ5U5ACAjuNo9u9fJj+R
RMoUt473MY0UL7M1mpJoGbuOl6CTYXDbl6b7S5aX1RhR2K+kcyFHdALIzbiQ
9DVUahmk/jZHxck8//zzY3XZunW04afddDKMh+OD5rRMptzKNNRImI0S9iuK
726+eACAIgSdTKYW/ItJ2VqQaxnUabQDtAxoiHPZv8fTn8kjZdDHNGCkeBmy
WmZNTNHJ3B6d9G8oNmMhXeY6mdW9itnHog4mrqVJpT8/DGMyjYqTefjhh+Fk
WuCe6CmRlmF3NX99xVamIVMqCvvdmZwaenHuB7z5sgEA6pSdDNtsL+rnIPi3
HSbjA9Ay1oGWAQ1xLvu3MlIGfUxF1ONlaGoZmk5mur/ELZU5kVZMFqbPlvhY
jbDfTPmivEpfA4YxGUXFyRTTfeFkjCLRMg/HB7XsokYrE7dUZijsN0mSeh9w
AIBGKDuZTK1gBn1MzZlKDkPLWAdaBjTHoexfxUgZ9DENUI+XmUoOibQM26wc
0mk6GUbUm/OyVCYTdzBVPlHlvE89/BPDmDpCx50MY21vj0jL7E20XUHmKhSu
VEnTdCFd5jqZddGRwQsqxncDAIxybXSJspPJQfBvC0DLUABaBjTHlexfbqTM
1+OF+3sPSLRMx/uY1ONlqGkZsk7G16HYjJn+Oa6TWR9V/ynhBsgUL8SPtBIM
Y+oCcDJZW1pmpFam8XheEvaLxiUAiOCEk8kQ/NsK0DIUgJYBWqCf/buv/2rZ
ydwcvf4tcU+8V6JlOt7HpB4vQ0rLcJ1Mv3+pzTWI4JbKbI4Xba9LA6JSmcoO
JnmwTDlNtBIMY/IeOJkciZZ5rq/zqKLeyvQvg3tEc7HRuAQAEVxxMhmCf1sB
WoYC0DJAF8Szf8tOhm35XUf7qVzLbAg3drk8UjFehh20iWiZbyZ0nYzHpTIM
rpNZFe6vfKLkQny9vgYMY/IbOJkBrWmZ7LI+lVe15bwl+OD7g8ly2C8alwAg
AtfJUCgnFjGbzCD41yjQMhSAlgG6oJz9y42UOZ7+/LrA2fQs+pgkKMbLENEy
lJ0MY0V4qOxkJhMfpN+uZJGrZbbExyqfyz1fa3INHcOYPAZOZsCpdKlNLZMp
R3P/SvDHRSfz/mCy/Bg0LgFgBeecTIbgX/NItAzboGXaAVoGaIRm9i83Uobd
WHwM+pgkKMbLyLXMVNJGlRRxJ7M5Xiw7mag3Z3tdehB1MBVnr3DhZk0kSdJk
MRjG5CtwMkVOpUurw51tahnFVqY3BW8fmBn2P+UH1OhMBAA0Z03MmbtE3Mnk
YFK2Udh3eGgZ65xOL3yp9yi0DNDC+fRlFTPTZvYv18nkkTJF0MckoTJe5qFo
d0ZAyxB3Mgxu+9J0f8n2ujSwkC5znczq3rOVzx0KltF1DR3DmPwDTmaIU+mS
yMmsDnea0DKZcivTm4K3vz+YfEvwwfJdaFwCwAruOpnscsHMpnADCmYMAS1D
AbmWuS+qnmoKQBFq2b+SSJkilX1MbOtyH1NlvExWpWUm4xmjK+Q6GXaj0Z2O
xO3RSV+HYjO2xMfqhf1mb2yL0HgNHcOYPANOpoxcy5jbr2IrUxk0LgFgC66T
2Uvp0lUllQUzCP6tDbQMBaBlgHboZP9+vHdGEikzRGUf00S03fSCyaISL8MO
JhItszWaMrc8+k7mRPoat1SG3W57aXoQdTCpPHfQE6H3GjqGMfkEnAyX5/qL
VrSM+rzsIuwp5pYEAJDAvhG57mQyhUnZ6GOqDbQMBaBlgHaIZP9yY36HImWK
qPQxdbZgRiVexpaWoe9kMsFQbG9KZWb657hOZn1U3QabB8uYuIaOYUzeACcj
QqJl1vb2GN01++SqtDINQOMSALbww8lkasG/OyKUwtYBWoYC0DLABNazfxUj
ZYqo9DF1NvhXJV6GHUxuC7eJtMxdvd0mFtbvO+BkpvtL3SyVUelgYidrhq6h
YxiTH8DJSLCoZTLlViY0LgFgEW+cTA6Cfw0BLUMBaBlgAuvZv2Un8/Hemcpn
VfYx3d/rbuNDZbwMO5jc1dvdppZxwslkglKZzbGRNE4r1A77NQqGMXkAnIwc
u1pGpZUJjUsAWITrZAh+TVIHk7INAS1DAWgZYAiL2b9XhqfVI2WKoI9JQmW8
DDvJbVPLuOJkJpOz3FIZ2+vSxq5kkatltsTHbC8Nw5jcBk6mkr3JUYtaJqua
l/0n0cMtrAEAwMU/J5OjUjDT2dmptYGWoQC0DDCHlezfUSNliqCPSUJlvMx3
okdb0zJcJ7MmpvhlY0V4qOxkJhN/vjCIOpgW0mXbS8MwJoeBk1Hh4figSMvc
Ez3Vzhq4BTP/S/DrHwqe/Pu+rHEYAGCOvX0/nUymEPyLgpkaQMtQAFoGmKP9
7N8akTJDoI9JhEq8TDtaxiEnwy2ViXpztteljYV0mWYHUw6GMTkKnIwi90RP
WdcyaZr+q/DGopN5d/CnHwqevL6HJkEA7OCxk8nU+pgwKXtUoGUoAC0DjKJY
MKPLzDR0Mtnlo/2GcCP6mLjItQy7V6Jlbgu3aVlDmmauOBkGt31pur9ke13a
2BIfqx322wIYxuQicDLqrO3tEWmZvUlLoZc7k1PvDybfEnwwCII3BW//UPBk
vrHb21kAAKCI304mB8G/2pFrmamkerAm0AK0DDBHm9m/3EiZUV8EfUwSKuNl
xoJvGNUybjmZ26OTHg/FzlkV7udqGdvr+jkYxuQccDIjQUHLXN97/kPBk/8y
uOctwQcHToZt7ewdAFCE62TWxBdtr0szCP7VDrQMESRaht1le3XAedrJ/m0S
KTPETDKLPiYulfEyRrWMW07mRPqa96UyM/1zXCezPqLy5xvDmNwCTmZUJFrm
uX4bs97+vn++qGIG27roSAt7BwAUYV+TuuBkclAwo5fT6QVoGQpAywDTmM7+
5UbK3B1fqPdq6GMScSY9d2c4LtEy1wVfl2iZJq2pXCdzTUTUyWSCodielcqI
wn6JdDDlYBiTK8DJ1MC6llkXHeFqGYT9AtAynXIyGYJ/dQMtQwRoGWAa09m/
zSNlhpiItqOPqUxl6q8hLeOck5nuL3FLZU6kr9lemk4oh/0OwDAmJ4CTqcGp
dMm6luE6GYT9AtAyXXMyGYJ/dQMtQwRoGdAC5rJ/tUTKDIE+JhHyeBlDWsYt
J5MJSmU2x22cJbXGrmSRq2W2xMdsL+0NYBgTfeBk6mFdy+xMTqFUBgDrcJ3M
tbS/JmlhNplBH5MuoGWIAC0DWsBQ9i83UuZ4+rOGq60M/u1sH5M8XubG4Gsi
LcO2elrGOSfDHYrNNtvr0oyog2khXba9tDeAYUzEgZOpzal0SeRkVoc7W9Ay
edjv0LYyPGB6vwCAIt10MhmCf7Ui1zL3RftsL7ArQMuAdtCe/cuNlKkX81tm
T7wXfUxl5PEyNwUb9WoZ55wMY0V4qOxkJpOzttelE1HYL7UOpgzDmGgDJ9ME
u1pGFPY7Hs8b3S8AoEhnnUwOgn91cTq98KXe96BlrAMtA1pDb/av9kiZIkf7
qVzLbAg3nk29OtdWQR4vo1fLuOhkuKUyK8KaWdZk2RIfox/2m4NhTGSBk2nI
c/1FiZYxvXduqQzbqNXLAeAxHXcy2eWCmU3hBhTMNAdahgjQMqA1NGb/moiU
KYI+JhGSeJlPBX+uS8u46GQY3g/FzlkV7i87GXaj7XXxwTAmgsDJNMeilllI
lzEXGwC7lJ3M1T2fM35FVBbMIPhXBWgZIkDLgDZ5Pvlh8+xfQ5EyQ1T2MU1E
2/Xu0Qkk8TK6tEzZyVzVc8DJ3B6dLDuZqDdne12aEXUwrY+IJsJhGBM14GS0
INEya3t7jO56PJ5H2C8AFnlPeBFOJqdyUjb6mFSAliECtAxok+bZv0YjZYqg
j4mLJF5GrmWmEqVenneHTjqZrDOlMqKwX4IdTDkYxkQKOBldWNQyK8MDmIsN
gC3gZIqoBP/uiHD9pQJoGSJAy4CWaZL9u6//qtFImSKVfUxsm0lmTeyaMpJ4
meZaxl0nwy2VYTfaXpd+XAn7HYBhTHSAk9HI3uSoFS0jCvvdmZwyt1MAQA6c
TBkE/zZHrmXYXbYX2BWgZUD71M7+NR0pMwT6mLiI4mXkWmYynpG/rLtOZrq/
xC2VOZG+ZntpmtmVLHK1zJb4mO2lCcEwJiLAyejl4figFS0jCvs1t0cAQE7Z
ybBbbC/KPgj+bQ60DBGgZUD71Mv+bSdSpohKH1MHg39F8TK3BBskWmZrNCV5
TXedDCPqzXWkVEbUwUR5/AqGMVFg7DK2V+EV90RPibQMu8vQThH2C4At4GQk
qBTMdDB2YCSgZSgALQOsMGr2b2uRMkVU+pj2xHuNroEgoniZ2lqm7GTe7c6X
De5QbLbZXpd+RGG/lDuYcjCMyS4QMiZY29sj0jIPxwcN7XRddARhvwC0z9U9
OBkZlcG/KJipBFqGAtAywAojZf9ynYyhSJkhKvuY7u91LjJUFC9zS7DhPwdb
RFrmrt5u7qs57WQYK8JDZSczmXh4UWZLfMytsN8BGMZkETgZQ0i0zN7EVIoC
18kg7BcAo8DJVKIS/ItJ2XKgZSgALQNsoZ79W3YyRiNliqCPiQs3XuaWYMNY
8I2RtMxVvUtOOxluqcyKUGnmlHOsCveXnQy70fa6qsEwJlvAyZhDomWe6y+a
2OPO5BRKZQBombKTYZvtRVEEwb8NgZahALQMsIhKwcyK4NGWI2WKoI+Jy9PJ
weZaxnUnk3VmKHYm7mBaHx22vbRqMIzJCnAyRmlfy3DDfleGB0zsCwDAuDa6
BCejiErBDPqYJEDLUABaBlikMvv3t4Nt7UfKDIE+pjJn0nMNtYwHToY7FDvq
zdlelxFEYb/0O5gyDGOyAZyMaVrWMqK52OPxvPZ9AQAyOJnRQcFME6BlKHBf
9AS0DLCIJPv3vwTjtiJlipxNz24IN6KPqYgoXkZRy5SdDNssvp16dKdUZiFd
djTsNwfDmFoGTsY0p9KllrWMaC425SlsALgLnEwNEPzbBGgZCki0zC3hX9le
HfAfSfavxUiZIuhj4sKNl1HRMn44GW6pjJdDsRm7kkWulmG3216aKhjG1Bpw
Mi1wKl0SORlDWgZzsQFoDa6TSVPbyyIPgn+bAC1DAWgZYB1u9u+/CP5fi5Ey
Q8wks+hjGoIbLyPRMreF29izrol8cDLT/SVuqcyJ9DXbSzOCqIPJoQvlGMbU
DnAy7SDRMqvDndq1zHg8j7BfANoBTqYJs8kM+pjqAS1DAWgZQIGhghluzC/7
hTzRtzPjBn1MZbjxMnIt44eTYUS9ue6UyojCfl3pYMrBMKYWgJNpjef6ixIt
o313K8MDmIsNQAusiTlzl+Bk1EHwb22gZSgALQMoUMz+5UbKrAgeZXc9Fn3L
1gonou3oYyrCjZeRaJl/EfzIDyfDHYrNNtvrMsWW+Ji7Yb8DMIzJNHAybdKm
lhGF/e5MTundEQAdB05GCwj+rYdEy9waPmJ7dV0BWgYQYZD9W3Yy/1vwVH7X
A+EXn4r/xsry0MdUphwvc13wdb+dDGNFeKjsZCaTs7bXZYpV4f6yk2E32l7X
aLySno/DBzCMyRBwMi0j0TJre3v07ksU9qt3LwB0HDgZXZxNz24KN6BgZlTu
i/ZBy1gHWgYQIc/+5UbKrA++MOhvmuz9OXtk+8urDP7tYB9TOV6Gq2W4TsbR
LxtdK5URdTBtiY/ZXtpoYBiTOeBk2qc1LbOQLiPsFwDTcJ3M3v4l2+tylcqC
GQT/loGWoQC0DKDDzdH5spP5L8H4UBqwrYKZPfFe9DEVebF/fEjL3Bh8zWMn
kwmGYntcKiMK+3WrgykHw5hMACdjhb3J0Xa0DMJ+ATDNNxNOxi+cTBMqJ2Wj
j6kMtAwFoGUAEf4y+YkoUmZoeyD8opXs36P9VK5lNoQbz6benqGXKcfL3BRs
LDqZDwQzPjkZ7lDsqDdne12mWEiXPQj7HYBhTNqBk7FFa1oGYb8AGAVOxgQq
wb87IvzRfwPQMhSYiA9AywAKKDqZfLOS/VvZx8S2rvUxPRTtFmkZz5xMJiiV
me4v2V6XKXYli1wtw263vbQ6PJk8j2FMGoGTscg90VMiLcPu0rWXnckplMoA
YA6uk2E32l6XDyD4d1SgZSjweHJYomVe6L9ke4GgE1wZni5rGZGTsZj9W9nH
NBFtb39VFhmKl/lU8OcSJ/N0//+zvd76cEtlfB2KnSPqYFpIl20vrQ4YxqQR
OBm7SLTMw/FBXXvhhv2uDA/oen0AugycjFEwKXtU5FoGQqAdoGWAdbiRMn8S
3C3RMrayf1X6mDpVMDMUL5NrGa6T+e1gm7vHk+n+ErdU5kT6mu2lmUIU9uto
B1OGYUz6gJOxztreHpGW2Zvouf4rmos9Hs9reX0AugycTAuoFMx0KnlAzmR8
AFrGOtAywC7cSJk/jY49EH5RrmWsZP+q9DHNJLMtr8oiQ/Eynwr+nOtkPhp8
95rg/qnEQiKQFqLeXNdKZdZHh70J+83BMCYtwMlQoAUtsy46wtUyjhbLAUCH
vX04mTaoDP5FwUyRqeQwtIx1oGWAXcpO5ubo9b71p+K/qdQyVrJ/0cc0RDFe
5t8G+0ROxl0t07Wh2Dmrwv1lJ8NutL2uRmAYU0PgZIgg0TLP9fVEP3GdDMJ+
AWgInExrqPQxYVL2AGgZCkDLAItwI2Xyu86nL0/2/rzSzLSf/Ys+piEG8TIf
Db4rcTJsm4xnbC+2DivCQ50aip2JO5i2xMdsL60RGMbUBDgZOpjWMpiLDYAJ
uE5mTXzR9rq8BcG/6kDLUABaBtiCGylzPP3Z4AHPJz9UKZhpuZVJpY9pT7y3
zSXZJY+XqXQybNsaTdle7Mh0s1RGFPbrbgdTDoYx1QZOhg6n0iXTWgZhvwBo
J00zOJmWQfCvOtAyFICWAVbgRsqwG4uPOZ++rNjK1HL2b2Uf0/29Dp3fnUnP
re4drHQyjmqZDpbKLKTLnoX9DsAwpnrAyZDiVLq0OtxpTsuIwn53Jqe0rB+A
DgInYwsUzCgi0TJsgxBoB2gZYAVRpMwQ59OXCWb/oo/p/2/vXpujOPJ8j/db
2HfQZ+cVnJgneyZi9/Q4wjtxYk8EE8GD2Scb0eONEJiLgQGDLRsXYMFysTBg
DBgDbY3HBmPMTcZA2NAaroMAIQYDBzC0hLhYgpUQCCOMpT459GxtTde1u6sy
s6q+n+gHjibVla0uV2f9lPlPq48K4/ZM5h8zR6oymTjGMmuNfnsmk8/1qO5X
tPYV+h1jGfG86q41is2Y6kAmo5uB0ohbJjMt2954LOM4VYZiv0DdyGQUovBv
QOKWn1hGOWIZyOdRUsZOw9q/rGMyBc9kxGNZbr/q/tbGcflSZ3FEdb+i5baC
KQE3Zb6bManuoHbIZDTkHcuIf23kxcX/5o6ZzKL89bD6D6SKYybzUp4av5JQ
+DcgYhkdEMtAMt+SMlX0rP3LOqZyjZlM7GKZ5vzttG2KXXYv9tuSv6a6a+Hw
iGVUd007ZDJ6uljs94hlGnxxiv0C4SKTUa670MU6Jl/EMjoQv2diGUgTpKSM
nYa1f4dKQ63ZNWlex1QsOmQyv8ocaMp8kIBYprM44jhV5lbpR9Vdi1ZL/loi
i/2a3DZjUt0v7ZDJaCvSWGZC9hz7YgNhIZPRAYV/gyCW0YFHLCMefAoI0bHi
04AlZaroWfs3zeuYHDOZ/5P5ak5mRTJimXyuJ4VTZYSJ2TP2TEY8qbpfoXHc
jEl1p7RDJqMzj1hmYe5wI6/cXhhgqgwQFjIZfVD41xexjA6IZSBNTSVlqmhY
+7er0J3OdUyOmcy03IU5mRXJiGXSuSl22X0F0yajV3XXQmPfjEl1j7RDJqO5
6GIZt2K/YfUcSA8yGa0MlYbey7YyYcYDsYwOiGUgR60lZex0q/3rW/g3keuY
HDOZBcb4d8WbvrHMq9ntqrsfSAo3xa5wK/abmBVMZdtmTKq7ox0yGf11FG5E
Ecu47Yu90egLsfNAGtgzmRdy7LukmO+EmZQX/iWW0QGxDCSor6RMFQ1r/+7M
70nVOia3TEb802DpwfrctgTEMqmdKnOnNOqYyUzLfau6a2Gybsakui/aIZOJ
hc+NC1HEMovy19kXG2jcz7JjZDIa8t0pO+XrmIhldEAsg6g5ZjJBSsrY3Spe
1ar2b5B1TEOlhMyyKJXKbplMRZBYRv9LSmqnymwyeh1jmX2FftVdC1klllHd
C+2QycTFuvwpt1hG/FPdL+uYyVDsF6gJmYy2ghT+3ZvfqbqbyhDL6IBYBlGz
ZzLBS8pU0a32b3rWMflmMsJB4/iczIrJmfXxjWXWGv32TCaf61HdLxncVjAl
72/l+wxqZVQjk4mRhbnDbrHM58aF+l6TYr9A4+yZjHhGdafw3yj864FYRgfE
MojUr3ODDZaUqaJb7d/DRkfi1zEFyWSESnmZWMcyjsuXOosjqvsVObdivy35
a6q7hsiRycSLRyzTUajzhsKx2O+E7Llwew4kGJmM/tgp2wOxjA6IZRCd5caj
xkvK2GlV+/dGseQdy7Rm18R6HVPATKb8X+Vlpmbed4tlxEPnS0pz/nY6N8UW
WvLXEl/sF47IZGLHI5a5WKxnySHFfoEGvZAjk4mHIBNmYj1or5t3LHO0wB/p
ZCCWQURCLClTRavav77rmMQjvuuYHDOZ37pv8rg+t216Zk0cY5lbpR8dp8qI
51V3TYaJ2TP2TEY8qbpfiBaZTByFHsu47YudvAWMQBTIZGLEt/BvaifM3Cs9
IpZRjlgGEQmxpIydVrV/fdcx7czvkdCNKNSUyZSfl5eJaSyTz/WkdqrMvkK/
41SZTUav6q4hQmQyMRVuLHOnNOqYySzKX4+i80DC2DMZ8VDdKbgKso4pnTtl
E8vogFgGUfh59l64JWWqaFX7N8g6pjhOmKk1kyk/Ly8zI7PKI5b50qh/o5Do
uG2KnZKpMm7FflnBlGBkMjE1UBoJN5bZaPRR7BeoD5lMHFH41xGxjA6IZRC6
V/LDUZSUqaJP7d8g65i6Ct1RdyNcdWQy5eflZdbkvvCIZcS/Suh8rRynyqw1
krYxtKM7pVHHTGZa7lvVXUNUyGTia6A04pbJTMu21xHLTMieY19soA4v5cfJ
ZOKIwr+OiGV0QCyDcEVXUsZOn9q/vuuYtuTaou5DiOrLZCq8Y5m3sm2DJb3m
YLhNlVHdL0k2Gb2Oscy+QipSqRQik4m1cGMZt32xxfMR9R9IBjKZWGPCjB2x
jA6IZRAueybz69xgRMcKWPtXtImoA6YkrWNqJJMRvjROeccy3xVvRtf5OryY
vWrPZHYV0lKH320Fk+p+IRJkMnF3sdjvEcvU+mpuxX6j6DmQGGQycUfhXzvv
WObD/DHVHUwFYhmEyLGkTKRH1KT2b5B1TIeNjkj7EAp7JvPLXA2ZTPn5JcUj
lpmaef+godEtv+NUmXyuR3W/JOkqPnDMZFry/FkkgchkEiDEWMZtX2yK/QIe
HDOZUkl1t1ALCv/a3Ss9+o/cAWIZtYhlEBY5JWWq6FP7NwHrmP4+22gmU/aL
ZSZn1q/PbYui8/VxXL7UWRxR3S9JWvLXKPabEmQyyeARyyzMHa7ppRblr1Ps
F6jJAsOhxi+ZTBx1F7pYx2RFLKMDYhmEQmZJmSqa1P69USy1ZtfEdx1TKJlM
+fmF3TuWWZLdqEl5meb87dRuil0xMXvGnsmIJ1X3CyFr+i+qO4JGhRjLOGYy
FPsF3JDJJEmQCTN78ztVd1MeYhkdEMsgFKoymQodav/Geh1TWJlMOVgso0N5
mVulH9O8Kbawr9DvOFVmk9GrumsIE2lMknQUboQSy7gV+2WqDOCITCZ5KPxr
RSyjA/EpeMQyRyi8jADkl5Spoknt35iuYwoxkyk/v6Qsy+13i2WaMh/MyazQ
obyM46bYqZoq41bslxVMSUImkzCfGxdCiWUci/1OyJ6LrudAfDlmMh3F+kdK
0MFQaei9bCuFfyuIZXRALIMGOZaUOVZ8KrkbOtT+FVf42K1jsmcy4plGXjBI
LKO8vExncSTlU2XulEYdM5lpuW9Vdw2hIZNJnnX5U26xjPingC/iVux3o9EX
aeeBOPqo4FDjl0wmGXwnzKSn8K93LCP+SXUHU4FYBo1wLCmz3Hgkvyea1P6N
1zqm0DOZcrBYRnl5GcepMmuNfoVdkmyT0ctUmWQjk0mkhbnDbrHM58aFgC/i
ti/2ndJopJ0HYodMJtl8d8pOzzomYhkdEMugEWpLylQJuJQp0gkzXYXuuKxj
+mVuPPRMpiJILKOwvIzjptjioao/SritYFLdL4SDTCapPGKZjkKge4c7pVH2
xQaCIJNJPAr/WhHLKEcsg7opLyljp7z2r2/hX03WMUWXyZQDxDJqy8u8mL1q
z2R2FYZU9Ue+ruIDx0ymJc8FPwnIZBLMI5a5WAw032+j0UexX8CXYyYjnlTd
L4SMwr8mYhnliGVQH8eSMjdLP6ntlQ61f30L/ypfxxRpJlP2jGX+PbOpEst8
lt8f4hGDc5wq82I2wi26NNSSv8YKpqQik0m2xmOZCdlz7IsNeCOTSY8gE2ZS
UviXWEY5YhnUwbGkjHhSdb/+Qnnt3xvFkncs05pdI74FIjq6L3smIx7hHiJI
LLMkuzHcgwbkuHypsziipDOqOGYyE7NnVPcLjSKTSbwGYxm3fbHF8xI6D8RC
R5FMJl2CTJhROG6XhlhGOWIZ1EGrkjJVlNf+1Xkdk4RMpuwXy8zIrFJVXqY5
fzvlm2IL+wr9jrHMJqNXddfQEDKZxBsojTQYy7gV+5XQeSAWyGRSyLfwb0om
zBDLKEcsg1ppWFKmivLav3quY5KTyQib80d9Yxkl5WWYKlN2L/bLCqZYI5NJ
g4HSiFsmEySWcdsXm2K/QIVjJrPAiGSkBH0EWceUhp2yiWWUe74f1kFiGQSk
Z0kZO7W1fzVcx/TbvKRMphw4lpFcXoapMuXnm7A4ZjLTct+q7hrqRyaTEh6x
zLRsu28ssyh/nWK/gBsymTSj8G+ZWEYD3rHMh3n2S8V/07mkTBW1tX991zGJ
h8x1TDIzGWGX0RUklpFZXqazOOI4VeZW6UdpfdDBJqOXqTIJQyaTHheL/R6x
jO+PO2YyFPsFhFKpTCaTZhT+LRPLaIBYBgEdKz7VuaSMndrav77rmHbm90Rx
XDvJmYxwtHDVLZYRD2ssI628TD7Xw1SZsvsKJtX9Qp3IZFKlkVjGrdgvU2UA
MhmUmTBDLKMBYhkEZM9kdCspU0Vt7d8g65gkTJiRn8mUA8cy0srLOG6KLR4S
Dq2VruIDx0ymJc9i1Vgik0kbj1hmYe6w9886FvudkD0np+eAthwzmZfy1PhN
HQr/EssoRyyDIOJSUqaKwtq/QdYxRV341zGTESOQqAWPZeSUl3kxe9Weyewq
JH+vwyoU+00SMpkUqjuWcSv2u9Hok9Z5QENkMjBR+Ncjlpmd3aG6d6lALANf
MSopY6ew9q/vOqYtubbQD2pSlckIl4t3A8Yy63Pbou6M41SZF7ORlHrWnGMm
MzF7RnW/UDMymXTqKNyoL5Zx2xf7TmlUWucBDZHJwKq70JXmdUwf5o8Ry6hF
LANvjpmMziVlqiis/atwHdMCQ1kmU/aLZaZn1pixjITyMmyKXbGv0O8Yy2wy
elV3DbUhk0mt+mKZO6VR9sUG7MhkUCXIhJm9+Z2quxkVYhnliGXgLXYlZexU
1f5VtY5JbSZTriWWEY/ThQvR9cRxU+x8rie6I2rLbQUTfy6PFzKZNFuXP+UW
y4h/cvupjUYfxX6BKmQycJTmwr/EMsoRy8DDr3ODcSwpUyV47d/QlzLJX8ek
PJMp1xjLRFpehqkyFXdKo46ZzLTct6q7hhqQyaRcfbHMhOw59sUGrOyZzAs5
9l3CXwyVht7Ltqaz8C+xjHLEMnCz3HgU35IyVVTV/hWX99bsGmnrmHTIZMp+
sczkzHprLBNdeRnHqTIp3BRb2GT0Uuw37shksDB32C2W6Sg4//XWrdhve2FA
cucBTfwsO0YmAw++E2aSWvjXO5a5V3qkuoOpQCwDu7iXlLFTMmFG5jomx0ym
WFQwKVdcuoPHMhGVl+ksjjhOlblV+jH0Y+nPbQWT6n4hKDIZlOuKZdyK/Uru
OaAJMhn48t0pO6nrmLxjmcvFu6o7mAoesYz4J9W9gxr2TObXuUHVnWqIqtq/
ctYxfVTQJZMp1xjLRFReJp/rYapMRVfxgWMm05K/prprCIRMBhUesczFYr+9
PcV+ASsyGQSR2sK/RwvXiGWUI5ZBlZ9n7yWgpIydktq/EtYxaZXJlJ/HMsty
+91imabMB1WxTOjlZRw3xRaPcI8SF25TZVjBFAtkMjDVGsssyl+n2C9QYc9k
xDOqOwVNpbPwL7GMDohlYPVKfjgxJWXslCxl2pnfE906Jt0ymXLtsUzo5WVe
zF61ZzK7CkPhHiUuHDOZidkzqvsFf2QyMA2URmqNZSj2C1SQyaAmQSbMJK/w
L7GMDohlYEpeSZkqSmr/dhW6I1rHpGEmU649lgm3vIzjVJkXsyHvsRUX+wr9
jrHMJqNXddfgg0wGVgOlkWnZ9uCxTHthgKkygPBCjkwGNQsyYWaolKi/9xHL
6IBYBqZkZzIV8ifM+Bb+rW8dk2MmI54Mq9uNqCmWCbe8DJtiW7mtYLpTGlXd
NXghk0GVgdKIWyYzLdtuj2Uci/1OyJ5T0nlAFTIZ1Me38G/yJswQy+iAWAYV
jiVlVHcqfEpq//oW/q11HZPOmUy59lgmrPIyjpti53M9obx47NwpjTpmMtNy
36ruGryQycDOO5YR/2pt7LYv9kajT1X/AfnsmYx4qO4U4iHIOqaE7ZTtEcuI
B7GMHMQyKCe9pEwV+bV/bxRL3rFMa3ZN8MmQxaLWmUzZM5b598wmeywTVnkZ
pspYbTJ6KfYbO2QycHSx2O8Ry1Q1div2yzQ5pMdL+XEyGTQibYV/LxfvEsso
RywDx5Iyy41HqvsVIclLmUJcx6R/JlOuPZYJpbyM41SZdG6KXTExe8YxllHd
L7gik4GbmmIZ9sVGypHJoHFpK/xLLKMDYhmkoaRMFfm1f33XMe3M7/F9kVhk
MmW/WOZ3mdbQy8t0Fkccp8rcKv0Y1puKl67iA8dMpiV/TXXX4IxMBh48YpmF
ucPWlhuNPor9Is3IZBCWVE2YIZbRAbFMyqWkpIyd5Akzja9jiksmI2zOH/WI
ZWZkVoVeXiaf62GqjJVbsV9WMOmJTAbegscy7IuNNHPMZEol1d1CPKWq8C+x
jA6IZdLMsaTMzVIq/qwgufav7zom8egqdLv9uGMms8DQMZMp1xXLNFJexnFT
bPEI8R3FDsV+Y4RMBr46CjeCxDJuxX7bCwMKOw/IQSaDcKWq8C+xjA6IZVLL
saRMUsv8OpJc+7fudUzxymSEXUZXrbFMI+VlXsxetWcyuwpBSygnz75Cv2Ms
s8noVd01VCOTQRCfGxeCxDKO+2KLh8KeA3IsMBz2XSKTQYO6C10pWcdELKMD
YpnUSmFJGTuZS5mCrGOyF/4Vg4p4ZTLlv+yyd9UtlhEPx1hGPOqLZZgqY+e2
gol9WHRDJoOA1uVPucUy4p8qbcT/4BT7RTqRySAiQSbM7M3vVN3NEBDL6IBY
Jp1SW1Kmiszav0HWMR02Oqw/EsdMplxvLHPQqGeTIKbKVBG3ZqxgigUyGQS3
MHfYLZb53PhrvXSK/SKdyGQQqZQU/iWW0QGxTAqluaSMncwJM77rmLbk2szG
Mc1kyvXGMnWUl1lr9NszmXyuJ4o3FRebjF6K/eqPTAY18YhlOgp/vR2g2C9S
yDGT6SjGYKSEuBgqDb2XbU184V9iGR0Qy6QNJWWqyKz9G3wdk2Mm89t8PEYa
4updRyxTR3kZx+VLncWRiN5XLEzMnrFnMuJJ1f3CfyOTQa08YpmLxX7RoL0w
wFQZpM1HBYcav2QyCJ3vhJnf5zZ776aqP2IZHRDLpMqx4lNKytgFqf0bylKm
gOuYYp3JlP1imemZNY6xTK3lZZrzt9kUu0pX8YHjVJmW/DXVXcNfkcmgDr6x
jGOx3wnZc6o7DkSFTAbS+O6UnYB1TN6xzNECw0gZiGVShZIybqQtZQqyjinW
mUy5gVgmeHmZzuKI41SZW6UfI31rmnMr9ssKJk2QyaA+3rGM277YG40+1R0H
IuGYyYgnVfcLyZSGwr/EMjr4MH+cWCYlKCnjQVrtX3Ftb82u8Yhl4p7JlBuI
ZYKXl8nnepgqY0exX52RyaA+A6UR71hmUf66YyzD5mtIJDIZyJf4wr/3So+I
ZZTziGV+l/1Cde8QGkrK+JIzYcZ7HVMCMpmyXywzObPeLZYJWF6GTbEd7Sv0
O8Yym4xe1V0DmQzqN1AacctkKrGMYyZDsV8kUkeRTAYKBJkwE+vCv8QyOiCW
SQPHTIaSMlWk1f7tKnQnOJMpP7+21xfLBCwvw6bYjtxWMPEXc+XIZNAIj1hm
WrZ9ef4ixX6REmQyUCjIhJn4Fv4lltEBsUwa2DMZSso4ulW82pZ9K+qlTI7r
mOyZzC9zcR1pNBLL+JaXYaqMI7div6xgUo5MBg26WOz3iGUo9ouUIJOBWr6F
f2M9YYZYRgfEMolHSZmayFnKtDO/xzuT+Z/ZwbDekXzi2r4st98tlmnKfOAR
y/iWl2GqjKNNRi/FfjXU9JzqXiDePGKZCZndjlNl2gsDqnsNhMkxk1lgjKnu
F1IkyDom0UB1N+vkHcvsMoj6ZSCWSbblxiNKytRETu1f6zqmv8sMVmUy/yNz
Y0uuLax3JF8jsYx3eZm1Rr89k8nnemS+Oz1NzJ6xZzLiSdX9SjUCGYTCI5b5
p0wHxX6ReKVSmUwGOugudCW18K93LPNh/pjqDqYCsUyCUVKmPhImzJiFfx0z
GfF8a3bNjWIpvPckVSOxjHd5GcflS53FEZnvTkNuK5ha8kw6VYZMBmFxi2Um
ZnY4ZjKL8tdVdxkIDZkM9JHgwr9i6P4fuQPEMmoRyyQYJWXqI6f272Gjwy2T
qTxEg7DekXyNxDJu5WWa87fZFNuRW7FfVjCpQiaDEHUUbjjGMr/KHKDYL5KN
TAa6SepO2cQyOiCWSapf5wYpKVM3CbV//z5bXU/GmslUJszEt6K7RywzL7tt
fW5breVlbpV+dJwqI56X/+50Q7FfrZDJIFyfGxccY5lfZI6xLzYSzDGTeSme
O1QiMZJa+JdYRgfEMonkWOaXkjI1iXQpkz2T+bvMoH3L7PiuY/KIZV7Nbv8s
v7/W8jL5XA9TZRztK/Q7xjLiedVdSyMyGYRuXf6UPZP5l8yXFPtFspHJQENJ
LfxLLKODI4VrHrGM+IxUdxA1o6RMKKKr/RswkxGPnfk9Ubw1CbxjmdOFCzWV
l3HbFJupMmX3FUzU/JSPTAZRcIxl3Ir9qu4sEA4yGWgrkYV/iWV04B3LXC7e
Vd1B1Myeyfw6F+PdlhWKYsLML3PjATOZWBf+9Y5l/lS4VFN5GcepMmsNZoO4
FvtlBZN8ZDKIyMLc4YD7Ym80+lR3FggBmQx0FmTCzN78TtXdrI13LCP+SXUH
U4FYJmF+nr1HSZmwhF77t6ZMpvLoKnRH+h4jsjl/1COWOVH4f8HLy7hNlVH4
7vSxyeil2K8OyGQQHXss80LmG/bFRlLZM5kXctT4hV4SWfiXWEY5YpkkoaRM
6EKs/WvPZP4+O3bY6PCOZWK6jsk7lhEXluDlZV7MXrVnMrsKcS2GHK6J2TP2
TEY8qbpf6UImg0jZYxnHTIZiv0iAn2XHyGSgv6HS0HvZ1oQV/iWWUY5YJjEo
KRORUJYy2TMZ8RDP3yiWvGOZmK5j8o1lApaXWWv02zOZfK5H9fvTgtsKppb8
NdVdSxEyGUStKpZxK/bLvtiIOzIZxIjvhJnYFf4lllGOWCYxyGQi0njtX7dM
pvw8b9+Sa/NOZg4bHbLea2iOFq66xTLiIS4s3xVvBikv47h8qbM4ovr9acGt
2C8rmKQhk0HUBkojVbGMY7HfCdlzqnsKNIRMBvHiu1N27NYxEcsoRyyTDI4l
ZVR3KjkamTDz27xrJlPhu45pS65N1hsNjW8sM1h64Ftepjl/m02x3dwpjVLs
Vy0yGUgwUBqh2C8Sz57JiGdUdwrwkrzCv8QyyhHLJAAlZaIWvPavaGn9Qd9M
ppzQdUy+sYxo411eZmpmLZtie9hX6HeMZcTzqruWCmQykKMqlnHbF5tiv4gv
MhnEVMIK/xLLKEcsE3eOJWWWG49U9ytp6qj9GySTKSd0HZO4dPjGMt7lZf4x
c4SpMh7cVjBxdyYBmQykuVjsNzOZiZkdjpnMovx11d0E6vRCjkwGcRVkwkyM
Cv8SyyhHLBN3lJSRpqalTAEzmYrkrWMKEst4lJd5KbOFqTIe3Ir9soJJAjIZ
yGSNZX6VOUCxXyQJmQziLsiEmaFSPDYPJZZRTtwfEcvEFyVlZApe+9cxkymV
XF9ZXLFbs2uStI7JO5Y5WvhLcuVRXsZxqsxag+U5f7XJ6K3aEZtiv3KQyUAy
ayzzi8wx9sVGYtgzGfFQ3SmgNr6Ff2M0YYZYRjmPWEY8iGV05lhS5maJL7UI
BZkw878yJ2rKZCoSto4pSCxTdikv86+ZrY5TZdS+I62YOUxVOKO6XwlHJgP5
zFjGbV/s9sKA6j4CNSOTQTIEWccUl52yiWWUI5aJKceSMpT5jdpw6f43+Y89
Mhkxcq4jkxG6Ct1JWsfkHcvsMroqzRzLy/w8c8aeyewqxGMKqARuK5g2Gb2q
u5ZkZDJQoqNww7vYr+oOAjV7KT9OJoPE6C50JaPwL7GMcsQyMUVJGVU8av/W
ncmUAxT+jdc6pnulRx6xzOb80Uoze3kZx6ky+VyP2rejFbdiv6xgig6ZDFSp
xDJu+2JT7BexQyaDhElM4V+PWGZ2dofq3qUCsUwcUVJGLcelTI1kMhU783sS
s44pYCxjLy/juHypszii9u3o405plGK/kpHJQKF1+VO/yWx7IfMNxX6RAI6Z
TE0jJUBDydgp+8P8MWIZtYhlYoeSMsrZa/86ZjL7jZM1veyNYsl3HVNcyrnf
Kz1altvvFsuIfzJbWmOZf84cZFNsb/sK/Y6xjHheddeSiUwGalViGcdMhmK/
iBcyGSRVMgr/EssoRywTL5SU0YR1woxjJjMj8665WXZASVrHFDyWOWgcr2Qy
UzNrmSrjy20F053SqOquJRCZDJRbmDvsVux3f+GO6t4BQS0wHGr8kskgGZJR
+JdYRjlimRg5VnxKSRlNmLV//y3ze8dMppLY7MqtEi2Dv+xhoyMZ65iCxzJm
eRnHTbH/OXPwoHFc4RvRiluxX1YwRYFMBjpYmDvsWOz3F5ljHQXdp8QDFWQy
SLwEFP4lllGOWCZGKCmjlVvFq1OzzvNkrOubThlfBn9N33VMrdk1sVjHFDyW
qZSXeSmzxXGqzNTMWvGvCt+IVlry1yj2KweZDDTxeu6E41SZX2UOXCyydBEx
QCaDNAgyYWZvfqfqbnrxjmXIBCQglokLSsro5qPCuG8mIx41LWXyXcckHnFZ
xxQwlik/Ly/jOFVmQmb3nMyKJdmNgyVih7+YmD1jz2TEk6r7lTRkMtDHy7lL
jrHMxMwOYhnozzGT6SiOq+4XEL64F/7dZZwjllGLWCYWKCmjm4CZTB0TZnzX
Me3M74nufYXII5Z5Nbvd2rI1f8FxqkxlcdOS7MbvijdVvQt9uK1g2mT0qu5a
opDJQB93SqOOmcwLmW9+k9lGLAPNiZESmQzSY6g09F62Nb6Ff48WrhHLqEUs
oz/HTIaSMgo5ZjL/lvm9YyZT64SZIOuYYjFhJngs82L2qj2T+dfMVnOHJsrL
lN2L/cZ9BdPatWubnvvxxx8D/sgPP/xw6NCh1atXz5kzZ8qUKbNmzVq0aFFb
W9vVq1fHxxsa8JPJQCsbjT7HWGZCZjexDDRHJoMU8p0wo3PhX2IZ5Yhl9GfP
ZCgpo1CtmUyttX+DrGOKReHfgLHMrsKQPZP5eeaMmcmIB+Vl7pRGk1fst7Oz
s+m/BMxkxI/MmjWryUVra+vg4GDd/SGTgW4mZM/ZM5l/ynT8JrNtWradWAba
IpNBOvnulK3zOiZiGeWIZTRHSRmtOGYyS/JX27JveccyNS1l8l3HtCXXFunb
DMXm/FGPWMa8tjguX3ops8Uay1BeZpPR6xjL7CvE8r6sp6dn+vTpNWUyBw8e
dEtjTLNmzfr++zojazIZ6OZscdhxqsy/ZL6sxDIDpRHVfQQcOGYy4knV/QIi
F+vCv8QyyhHL6Gy58YiSMvooFh0ymcpI45TxpW8sE3wpUzLWMQWJZZrzt+2Z
zD9mjlgzGcrLlN1XMN0pjaruWm36+vpmz55tzVJ8M5muri5r+9WrV58+ffrm
zZtXrlxpb2+3vtqbb775+PHjOnpFJgMNuRX7/U1mWyWWUd1BwAGZDFIuvoV/
iWWUI5bRFiVltOKRyQjDpfu7cqvCmjCTjHVMQWKZIFNlKC/jVuy3JX9Ndddq
cP78+ZkzZ1bNb/HOZJ48eWJNXQ4dqi6UNzw8vGTJErPBtm31LHYjk4GGvIv9
EstATx1FMhmkXZAJM3oW/vWIZcSDTEACYhltUVJGH96ZTEXACTOXCieDHDEB
65iOFq66xTLiIa4tjlNl/jlz0J7JpLy8TEv+WnyL/Y6Nje3cuXPSpEn2NUfe
mUx7e7tv3vLw4cPXXnut0mbKlCl1FJYhk4GeFuWvexT7FY+FucOq+wj8DTIZ
oCLIhJmh0pDqblYTI3NiGbWIZfT08+w9SspowjGTWWBUjzSGS/e/yX/sm8wE
rP0rLtet2TWxXsfkHcv83vjOcarM1Mxax1gmzeVlJmbP2DMZ8aTqfvm4evXq
4sWLrTnM5MmTg2QyY2Njc+fOrTSbPn26x7qkU6dOmS+4Z0/NG8eTyUBbjplM
pdgvsQw05JjJLDDGVPcLUMC38K+eE2aIZZQjltGQY5lfSsooETCTqbhVDK32
bwLWMXnHMv+QORl8qkyay8u4rWDaZPSq7pqzBw8evP/++9Y0ZtKkSfv373/n
nXeCZDJXrlwxm23ZssXjQD/99NOMGTMqLQ3DqLWfZDLQVnthwHuqDLEMtEIm
A1gFWcek4U7ZxDLK3Ss98ohljhTiVLsgGSgpo49SqRw8k6kIsfZv3NcxiQu4
WybzfzPtjlNl3DKZNJeXcSv2q+cKpvPnz1sDmddff/3SpUvi+YCZzO7du81m
p06d8j7W+vXrzca1bsBEJgOdORb7/UXmmJnJEMtAH2KkRCYDVOkudMWu8C+x
jHLEMrqxZzK/ztVcMAGNqyOTKYda+zfu65g8Ypn/memyZzKbjZ71uW0escxn
+f2q35Nsd0qjjpnMtNy3qrvmwMxkpkyZsn379tHRv+4SFTCTWb16tdmsv99n
4++vvvrKbHzyZKB6TSYyGejMbV/sX2UOWGOZdXmf3BKQgEwGcBTHwr/EMsoR
y2iFkjKaqC+TqQix9m+s1zG5xTKOU2VezP5l+pB3LLMku1H1e5Jtk9HrGMvs
K/ikFvKdP3/+5Zdf3rJly71796zPB8xk5s2bZ0Y64+M+/6OdPXvWfM0vvvii
pn6SyUBzbvtiT8zssMYynxsXVPcUaeeYybyUp8Yv8Bex2ymbWEY5Yhl9UFJG
E46ZzG8DjzSGS/eDJDNBav92Fbrju47JLZZxXL7UWRwRP3LQOO4dy6StvIzb
CibV/ao2NDT04IHDoqogmcz4+Li5T1Nzc7Pvsa5fv26+5saNtSV1ZDLQn/e+
2Oajo6DRYB7pRCYDeIhd4V9iGeWIZTRBSRlNNJjJVIRV+9e38K/O65gcY5n/
nemwZzL5XE/lR74r3qS8jMmt2G9LPh6X5SCZzPDwsNlm6dKlvq957949s/3K
lStr6g+ZDPS30ejzLfZbeVwsajdlDqlCJgN4i13hX2IZ5YhlNEEmo4nGM5mK
sGr/+hb+1XYdk7i21DRVRhgsPaC8jKklfy1GxX6rBMlk7t69a7ZZtWqV72s+
fPjQbN/S0lJTf8hkEJFwT60J2XPe+2ITy6SHzlctMpm40/nsSpJ4Ff4NJZbh
1GoEsYwHaaeWY0kZOYeGVViZTNmv9q84tQJOmLlRLHnHMq3ZNUOlofo6GSl7
LOM4VaY5f9v6U5SXMU3MnrFnMuJJ75/S4QsxSCbT19dntnn//fd9X/PJkydm
+wULFtTUHx1+J0ikcE8tt2K//5L5klgmbXS+apHJxJ3OZ1fCBJkwsze/U3U3
/6rxWIZTq0HEMm6knVqOJWWOFZ/KOTpMIWYyFW4TZsxMJkjt3/iuYxLXllez
281MZmJmh+NUmVulv7ltp7xMxb5Cv+NUmU1Gr8dP6fCFGCSTKZVKZpsNGzb4
vqZ4HbP9/Pnza+qPDr8TOz17Vda1YynplVuxX3sm4x3LpOTXFQp6VRPRMXsm
80JO8b5Lev669OxVWdeOJbhXURT+jejX5R3LHPXLBBL8IYbOrVfKY5l4/bpC
51hSZrnxSG2vaqVnx2rqVeiZTNml9q81kwlY+9d3HdPO/J4Gu1qO4EMU15Zl
uf1mLPMPmZO+U2XKtvIyolcalpeRcMK7Ffv1WMGkw/+GQTKZnp4es8369et9
X3N0dNRsbxhGTf3R4Xdip2evyrp2LCW9ulMaDVjs1zuWScmvKxT0qiaiYz/L
jpHJBKFnr8q6dizZvRoqDb2XbfWOZZR0zK6RWCbZH2K4PHolbp3+I3dQVSwT
u19X6IKXlNHzd1XWtWPKM5mKqtq/9kwmSHkZ33VMjZeXieJDtMYyjptii4f9
p6zlZeyZjHicLijeFlbCCS9u0BwzmWm5bxX2yleta5fWrl3r+5qPHz8227/9
9ts19acJAAAAAAAgejXlFVEIksncv3/fbNPa6v/nocHBQbP9smXLwu4yAAAA
AABA7AXJZKw1e4Pso3T79m2zfZC1TgAAAAAAAGkTJJMRZsyYUWkzd+5c39e8
dOmS+ZqffPJJqP0FAAAAAABIgoCZTEtLS6XNpEmTPJpVHDlyxHzNb775Juwu
AwAAAAAAxF7ATKatrc1s1tPT4/2aW7duNRtfvnw57C4DAAAAAADEXsBM5vjx
42azQ4cOeb/m22+/XWk5ZcqU0dHRsLsMAAAAAAAQewEzmaGhoUmTJlWarVix
wuMFBwYGzBd89913I+gyAAAAAABA7AXMZISVK1eaLb/77ju3ZtZVTp2dnRF0
GQAAAAAAIPaCZzIXLlwwW86bN29oaMje5sSJE2ab5ubmZ8+eRdZxAAAAAACA
GAueyQirV6+2xjLW+r1Pnz5tb2+fPHmy2eDcuXMR9x0AAAAAACCuaspkhoeH
33jjjSaL+fPnr1u3btWqVTNnzrQ+/9lnn8npPwAAAAAAQBzVlMkIg4ODhmE0
edq6dev4+LiEzgMAAAAAAMRUrZmM8OzZs3379s2ZM8eexixevPjPf/5z1H0G
AAAAAABIrfHx8evXrx8/fvzAgQMHDx7805/+1N/fr7pTAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgfzwww+HDh1avXr1nDlzpkyZ
MmvWrEWLFrW1tV29enV8fDy+x4JyMj/uW7du7dq1a8WKFXPnzp363Lx581pb
W9vb29lZLHnUXknEIVauXNn03Pvvvx/14SCZzLPr9u3be/fuXbp0qbheiWPN
nDlzwYIFH3/8sThWuAeCDmSeWoODg19++eU777wjvhPFsV555ZU33njjww8/
PHny5E8//RTusaChtWvXVr6kfvzxx3BfmZF8ykV3ajGSR3RnVxUNR/KdnZ3i
ctrkQvyPIL7W43gsKCft4xavs2bNGrcDCZMmTdq8ebMYRYRyOCin/Ery9ddf
m4fT5EqOsEg7u4aHh7ds2eJx4Xr33XeHhoZCORZ0IO3UGhsb27Fjh7hZdjvW
66+/funSpVCOBT2Jk838uMO9tVH+/Qu1Ijq1GMmjHOWFy063kfzBgwc9zv8K
ce39/vvv43UsKCft4y6VSjNnzvQ9ltDc3Hzv3r1Q3h0UUn4luXXrlvVmR4cr
OcIi7ewSrzB37lzfY4k2XLWSQdqp9ezZM/Nvfx7EDc6RI0dCeWvQTU9Pz/Tp
083POsRbG+Xfv1ArolOLkTzKUV647HQbyXd1dVnP89WrV58+ffrmzZtXrlxp
b2+fPXu2+U9vvvnm48eP43IsKCft475//7717zVTp0795JNPuru7xbHE/9qd
nZ0bNmwQI0+zgWEYZOyxpvxKIu53Fi5caO2D8is5wiLzwvXqq6+aryYuYnv3
7r127dqdO3cuXbr06aefWocKCxYsYKVJ3Mm8cH300UdVF6izZ8/evn1bfCd2
dHTMnz/f/KfJkyczWyZ5+vr6rGdUU3i3Nsq/f6FWRKcWI3mUo7xw2ek2kn/y
5In1vR86dKiqwfDw8JIlS8wG27Zti8WxoJzMj3vdunXm6yxatEhc2O1txGjB
Gr9v37697sNBLR2uJOL8afpbZDLJIO3sGh8fX758ufk6S5cuFa9c1aa3t9fa
ma+//rq+Y0EHMi9cN27cMF9H3MWcOHGiqoEYi27cuNFsI+6dSfyS5Pz58/b5
BqHc2ujw/QuFoju1GMkjurPLkW4j+fb2dt8r58OHD1977bVKmylTptS9RFTm
saCctI/79u3b5oHEUOHBgwduLS9fvmxm7OJw/PkmppRfSawnkiZXcoRF2tl1
+vRp80CGYYg7HcdmFy5cMJvNnz+/jgNBEzIvXG1tbeaxdu7c6djm2bNn4sQz
m3V3d9d3LGhlbGxMfOL2b6imkG5tlH//QpVITy1G8ikX9YXLTreRvPgNmCvZ
p0+f7nFinzp1yuzwnj17ND8WlJP5cYufMl/h4MGD3o3F/25mY3FPVMfhoJby
K4k44rx58yov+9577+lwJUdYZJ5dixcvrvy4GBX09vZ6tHz77bfNY7HlRExJ
vnA1NzdXXmHy5MmPHj1ya3b06FHzWJ9++ml9x4I+rl69al5YzBPA/O/Gb22U
f/9ClahPLUbyaRb12WWn4Uj+ypUrZje2bNni0fKnn36aMWNGpaVhGJofC8rJ
/Ljfeecd81i+Jb+OHDnCOCHWlF9JzAn/r732mjjfdLiSIyzSzi7r3wTFGeXd
uL29Xdz+vP7660uWLLl27Vqtx4IOJF+4zEpE4jLl0ayvr8/slRiX1ncs6ODB
gwfWG9Wm52Hv/v37rQOkxm9tlH//Qj45pxYj+XSSc3bZaTiS3717t9mNU6dO
eTdev3692biOUuoyjwXlZH7c5l9txCjUt3F3d7d5LP4sGEdqryQnT540vzXE
6PTRo0c6XMkRFmlnlxhymD97+fLlBrqMeJB84Xr55ZcrPy6+Hz2a3blzxzzQ
ypUr6zgQNHH+/PkmC3OX83BvbRjJp5CcU4uRfDrJObuq6DmSX716tdkN3xnR
X331ldlYvB2djwXlZH7c4+Pjw8PDN2/eDHJrQ7oedwqvJPfv3zf/8FepLKfJ
lRxhkXZ2rVmzpvKD06dPHxsba6DLiAfJFy5zWyUx5rTXjjZZixp99NFHdRwI
mjBvbcQtrfh6Gh0drTwf7q0NI/kUknNqMZJPJzlnl5W2I3lzLZX4VYj/Hbwb
nz171uzzF198ofOxoJy2H/cHH3zAICHWVJ1a4lgrVqyovNSCBQuePXtW1uZK
jrBIO7vMjUuWL1/eQH8RG5IvXNbtJHbv3u3YRnRj2bJlZrPOzs46DgRNiFub
l19+ecuWLVXrPsK9tdF2aIfoyDm1asJIPjEkn13ajuRFx8yCw83Nzb7tr1+/
bvbZd/27wmNBOW0/7v/8z/80Z3R7Vz6EnhSeWuZiE3EK3bx5s/KkDldyhEXa
2fX48WPzB9va2ipPjo2NiVuYDRs2vPbaa+J+Z+bMmWLA8Nlnn/X09NT5fqAN
+ReuwcHB6dOnm192XV1d9i6Js8s8yvz589kLO9aGhoYct6oJ8dZG26EdIiXh
1KoJI/kkkXx2aTuSHx4eNvuwdOlS3/bWGji1rjuWeSwop+3HbV3dLP47ugMh
IqpOLXHpNmtmfvXVV+bzOlzJERZpZ5c4ncwf3Lt3b/n5zYt1V2IrcRO0adOm
H374of43BtWUXLguXLgwdepU8yzavHmzeKa/v//u3budnZ3WGTKzZs26detW
fUeB5kK8tdF2aAclVGUyjOTTIIqzS+eRvPheNvuwatUq3/YPHz4027e0tGh7
LCin58f9xz/+0TzK5MmTqTgXR0pOLfF1YN4vixsZa/UPHa7kCIu0s+vixYvm
D37zzTddXV3mOMGNOAMHBwcbeHNQSdV3Yl9fnzlP2424WR4YGKj7ENBciLc2
eg7toIqSTIaRfEqEfnZpPpK37oEYpA9Pnjwx2y9YsEDbY0E5DT/uCxcuWDe7
b29vj+IoiJqSU+vTTz+tvML06dOrbl50uJIjLNLOLmth1Y8//tgMZGbPnv3J
J58Ui8UjR47s2LHjjTfeaLIQNzWS1+wjLKq+E589e3bixInm5uYmF2Lc61up
FbEW4q2NhkM7KCQ/k2Eknx6hn12aj+RLpZLZhw0bNvi2F78Ts/38+fO1PRaU
0+3jvnTpkjmFW1izZo1vbTroSf6p9e2335qvIO6Uq/5Vhys5wiLt7DL3YWx6
vqik8h9bt241dxyoGBsbO3DggNmgiTqZsaXkO/Hq1auvv/56kx9xj7Nt27ZK
qUMkT4i3NroN7aCW5EyGkXyqhHt26T+S7+npMfsQZEWeGC6a7Q3D0PZYUE6r
j7u7u9t6GV+8ePGTJ0/CPQSkkXxqjYyMvPrqq5UfX7t2rb2BDldyhEXa2XXs
2LGmv7Vr1y63xh0dHWaz6dOnP3z4MPiBoAn534lVf1Bubm4uFosDAwPPnj17
/Pjx9evXt2/fbv1mXLZs2dOnT+s4EDQX4q2NVkM7KCczk2EknzYhnl2xGMlb
ZyE6drKKdauIt99+W9tjQTl9Pm5x72Mdl4rLuPh/M8TXh2SSTy2zlNzvfve7
4eFhewMdruQIi7Sz68SJE00W4me9/95nHZz88Y9/DH4gaELyhUtcrGbMmGG+
wsaNGx3HtN9///38+fPNZlu2bKn1QNBfRGuXGMlDWibDSD6FQjy7YjGSv3//
vtmH1tZW3/aDg4Nm+2XLlml7LCinw8ct7nF27tzZZLFixQpy9biTeWpZJzPY
d5Kt0OFKjrBIO7us9WSE48ePe7c/c+aM2TjIkgHoRvJ3onWTa/HFZy1maO/Y
rFmzzMY3btyo9VjQXIi3NjoM7aAPCZkMI/nUCuvsistI3lp9K0hF9Nu3b5vt
a919TOaxoJzyj/vp06fWzfIqL8t6+QSQdmrdu3dv+vTplR8sFApuzXS4kiMs
0s6uS5cuWa9OvhsqWbcvWbRoUfADQROSvxPnzJlj/nhfX59346+//tps3NbW
VuuxoLkQb5yVD+2glagzGUbyaRbK2RWvkbw5u3Xu3Lm+ja3DyE8++UTnY0E5
hR/3gwcPFi9ebL2Mb9++nVJgiSHn1Prmm2+aGvDGG2808BahjJyzy3qrMmnS
JI9pDCZzb6YgHYOGpH0nWiczvPXWW77th4eHzTrSb775Zk3Hgv7CvXFmJA9T
pJkMI/mUC+XsitdIvqWlpXJc8Y3s+5aPHDli9lO8TZ2PBeVUfdzff/+9daeJ
yZMnF4vFRl4QupFzasXrSo6wyDm7xCubd8HiP4L84e+VV16ptJ8zZ07wA0Ef
0r4Tb9y4Yf5swMkJs2fPrrR/+eWXazoW9BfujTMjeZiiy2QYySOFmUxbW5t5
6J6eHu/GW7duNRtfvnxZ52NBOSUfd19fnzm2FMRdzLffflv3q0FPck6teF3J
ERZpFy5rbdV79+55Nx4bGzMbs31JTEk7tWrdsFgwb3/EjTZ/iU6YcG+cGcnD
FFEmw0ge5VRmMsePHzcPfejQIe/Gb7/9dqXllClTRkdHdT4WlJP/cd+9e9da
q3DevHm+6+gRR3JOrevXr+8NYMeOHWZnxF22+bxvx6AnaRcu662Nb43f3t5e
s/EHH3xQ04GgCWmnlnXtUpCiH2NjY+Yms+JWqKZjQX/h3jgzkocpikyGkTwq
Qjm74jWSHxoaMmdQr1ixwqPlwMCA2eF3331X82NBOckf9+PHj60THd966y3f
spmIKa2uJJpUBkNYpJ1d3d3dwX9cjA3MxuyFHVPSTq3x8XHzr8ziiPfv3/du
f+XKFUZcCRbujbNW379QK/RMhpE8TNJ2Wi/rNJJfuXKl2ZPvvvvOrZn1j3qd
nZ36HwvKyfy4N2zYYL5Ic3Oz4wb0SAx9riT6XMkRFjln108//fTqq6+ar3Dh
wgW3liMjI+Yt9pQpUx4+fFjrsaAJaReujz76yHyFjz/+2LuxuF82Gx8+fLiO
w0Fnod/a6PP9C7VCP7UYycOUzkxGDAXNnsybN29oaMje5sSJE9b/TRwLEoon
Oy3EMDK6YyEWpJ1ap0+fNl9k6tSpt2/fjuT9QBsyr1re9LmSIyzSzi7rSue5
c+fevXvX8UXWrFljNvvDH/4QynuEEtJOrTt37kyePNl8nZMnT7p1affu3Waz
2bNnP3nypMH3CN3UdGvDSB7BhXtqMZKHVfCzK2Ej+dWrV1svsNZKXE+fPm1v
b7d+uZ87d87xRazvSLh+/Xp0x0JcSDi1xsfHFy5caD3KhsAo+hFfMq9aHrS6
kiMscs6usbGxpUuXmg1mzpx57Ngx682LGJQuW7bMbCBumZkkE3fSLlyff/65
tc3HH39cVUq6v7/f+ldp4dSpU+G+WeigphtnRvIILsRTi5E8qgQ/uxI2kh8e
Hn7jjTes72j+/Pnr1q1btWqVGCVan//ss8/cXiTg7ySUYyEuJJxaly5daqrX
5s2bo/8dIBIyr1oetLqSIyzSzq6HDx8uWrTI2mzWrFmtra1inGmWx6yYOnXq
lStXonzTkEHaqTU2NrZ27Vprs0mTJomTTVymxOEWLFjQ9Lf27NkT5fuGMlFk
MozkUQ711GIkjyqpzWSEwcFBwzC8T/utW7d6bJIY/HfS+LEQI1GfWlV/DawJ
V/JYk3nVCvIKOlzJERZpZ9fjx4+tf3R2NGfOHAKZxJB2ao2NjYk7Yu8DNT0v
UnTkyJHI3i4UiyKTKTOSR6inFiN5VElzJlN+viBr3759YuxnP+EXL1785z//
2fvHa/qdNHgsxEukp1bV7OuacCWPO5lXLd9X0ORKjrDIPLvOnj27ZMkSc0MT
04wZM8RttXipUN8ZFJN5apVKpXXr1k2ZMsV+rFdeeeUPf/iD78ZMiLWIMpky
I/nUC/HUYiSPKinPZCrGx8fF2zl+/PiBAwcOHjz4pz/9qb+/PwHHgnJ83IgI
pxaiI/PsGhwcPHv27OHDh8WdTrFYvHLlCrUxE0zmqfX06dNLly4dOXJk//79
4ljioOLQY2NjER0O6cH3LwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIC4
+//9A5jq
    "], {{0, 958}, {1500, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag[
   "Byte", ColorSpace -> "RGB", ImageResolution -> 300, Interleaving -> True],
   
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Magnification[0.25],
  ImageSizeRaw->{1500, 958},
  PlotRange->{{0, 1500}, {0, 958}}]], "Input",
 CellChangeTimes->{{3.868179819614685*^9, 3.868179819625246*^9}},
 TextAlignment->Center,ExpressionUUID->"9c2313a7-beae-48fc-aeb2-e2def8238b36"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.007544121155445359, 0, 0.9924558788445547], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[0.005029414103630239, 0., 0.6616372525630365],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0.007544121155445359`", ",", "0", ",", "0.9924558788445547`"}], 
         "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.007544121155445359, 0, 0.9924558788445547]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.007544121155445359, 0, 0.9924558788445547],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.34075380368201275`, 0, 0.6592461963179872], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[0.22716920245467517`, 0., 0.4394974642119915],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0.34075380368201275`", ",", "0", ",", "0.6592461963179872`"}], 
         "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.34075380368201275`, 0, 0.6592461963179872]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.34075380368201275`, 0, 0.6592461963179872],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.21340947209445751`, 0, 0.7865905279055424], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[0.142272981396305, 0., 0.5243936852703617],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0.21340947209445751`", ",", "0", ",", "0.7865905279055424`"}], 
         "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.21340947209445751`, 0, 0.7865905279055424]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.21340947209445751`, 0, 0.7865905279055424],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.5131612348723684, 0, 0.4868387651276315], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[0.3421074899149123, 0., 0.3245591767517544],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0.5131612348723684`", ",", "0", ",", "0.4868387651276315`"}], 
         "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.5131612348723684, 0, 0.4868387651276315]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.5131612348723684, 0, 0.4868387651276315],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.3719458390515235, 0, 0.6280541609484764], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[0.24796389270101568`, 0., 0.418702773965651],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0.3719458390515235`", ",", "0", ",", "0.6280541609484764`"}], 
         "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.3719458390515235, 0, 0.6280541609484764]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.3719458390515235, 0, 0.6280541609484764],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.36905794944185033`, 0, 0.6309420505581497], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[0.24603863296123357`, 0., 0.4206280337054331],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0.36905794944185033`", ",", "0", ",", "0.6309420505581497`"}], 
         "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.36905794944185033`, 0, 0.6309420505581497]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.36905794944185033`, 0, 0.6309420505581497],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.010939104569894728`, 0, 0.9890608954301052], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[0.0072927363799298196`, 0., 0.6593739302867369],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0.010939104569894728`", ",", "0", ",", "0.9890608954301052`"}], 
         "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.010939104569894728`, 0, 0.9890608954301052]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.010939104569894728`, 0, 0.9890608954301052],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.5812089620500882, 0, 0.4187910379499117], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[0.3874726413667255, 0., 0.27919402529994114`],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0.5812089620500882`", ",", "0", ",", "0.4187910379499117`"}], 
         "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.5812089620500882, 0, 0.4187910379499117]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.5812089620500882, 0, 0.4187910379499117],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.49113654456198064`, 0, 0.5088634554380194], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[0.32742436304132044`, 0., 0.33924230362534624`],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0.49113654456198064`", ",", "0", ",", "0.5088634554380194`"}], 
         "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.49113654456198064`, 0, 0.5088634554380194]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.49113654456198064`, 0, 0.5088634554380194],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.4535862927649628, 0, 0.5464137072350371], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[0.30239086184330854`, 0., 0.3642758048233581],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0.4535862927649628`", ",", "0", ",", "0.5464137072350371`"}], 
         "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.4535862927649628, 0, 0.5464137072350371]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.4535862927649628, 0, 0.5464137072350371],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.3814842368789019, 0, 0.618515763121098], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[0.2543228245859346, 0., 0.41234384208073205`],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{"0.3814842368789019`", ",", "0", ",", "0.618515763121098`"}],
          "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.3814842368789019, 0, 0.618515763121098]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.3814842368789019, 0, 0.618515763121098],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1., 0, 0.], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[0.6666666666666667, 0., 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{"1.`", ",", "0", ",", "0.`"}], "]"}], NumberMarks -> False]],
     
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1., 0, 0.]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1., 0, 0.],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.08802791847321875, 0, 0.9119720815267812], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[0.05868527898214584, 0., 0.6079813876845208],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0.08802791847321875`", ",", "0", ",", "0.9119720815267812`"}], 
         "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.08802791847321875, 0, 0.9119720815267812]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.08802791847321875, 0, 0.9119720815267812],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.5398640239662614, 0, 0.46013597603373857`], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[0.35990934931084095`, 0., 0.30675731735582573`],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0.5398640239662614`", ",", "0", ",", "0.46013597603373857`"}], 
         "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.5398640239662614, 0, 0.46013597603373857`]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.5398640239662614, 0, 0.46013597603373857`],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.5116385791131954, 0, 0.48836142088680456`], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[0.34109238607546366`, 0., 0.3255742805912031],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0.5116385791131954`", ",", "0", ",", "0.48836142088680456`"}], 
         "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.5116385791131954, 0, 0.48836142088680456`]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.5116385791131954, 0, 0.48836142088680456`],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.16293377284403981`, 0, 0.8370662271559601], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[0.10862251522935988`, 0., 0.5580441514373068],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0.16293377284403981`", ",", "0", ",", "0.8370662271559601`"}], 
         "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.16293377284403981`, 0, 0.8370662271559601]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.16293377284403981`, 0, 0.8370662271559601],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.008060095814827032, 0, 0.9919399041851729], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[0.005373397209884688, 0., 0.6612932694567819],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0.008060095814827032`", ",", "0", ",", "0.9919399041851729`"}], 
         "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.008060095814827032, 0, 0.9919399041851729]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.008060095814827032, 0, 0.9919399041851729],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.22756078683427622`, 0, 0.7724392131657237], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[0.1517071912228508, 0., 0.5149594754438158],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0.22756078683427622`", ",", "0", ",", "0.7724392131657237`"}], 
         "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.22756078683427622`, 0, 0.7724392131657237]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.22756078683427622`, 0, 0.7724392131657237],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.4245751389405842, 0, 0.5754248610594158], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[0.28305009262705616`, 0., 0.3836165740396106],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0.4245751389405842`", ",", "0", ",", "0.5754248610594158`"}], 
         "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.4245751389405842, 0, 0.5754248610594158]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.4245751389405842, 0, 0.5754248610594158],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.4886484856671962, 0, 0.5113515143328038], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[0.32576565711146416`, 0., 0.3409010095552025],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0.4886484856671962`", ",", "0", ",", "0.5113515143328038`"}], 
         "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.4886484856671962, 0, 0.5113515143328038]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.4886484856671962, 0, 0.5113515143328038],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.6770481996868726, 0, 0.32295180031312737`], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[0.4513654664579151, 0., 0.2153012002087516],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0.6770481996868726`", ",", "0", ",", "0.32295180031312737`"}], 
         "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.6770481996868726, 0, 0.32295180031312737`]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.6770481996868726, 0, 0.32295180031312737`],
    Editable->False,
    Selectable->False]}], "}"}]], "Output",
 CellChangeTimes->{
  3.8681185842147207`*^9, 3.868120906464875*^9, {3.86817263542662*^9, 
   3.868172658525667*^9}, 3.868173879505314*^9, 3.868174427221002*^9, 
   3.868176291326694*^9, 3.868176360767477*^9, 3.868176433022994*^9, 
   3.8681783011013823`*^9},
 TextAlignment->Center,
 CellLabel->"Out[48]=",ExpressionUUID->"43b556ac-8e41-4c43-b989-198f06357f41"]
}, Open  ]],

Cell["", "PageBreak",
 PageBreakBelow->True,ExpressionUUID->"917cec8d-c409-4f94-95ef-cd06e9412aeb"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Blau\[Rule]Kleinerer Winkel; Rot\[Rule]Gr\[ODoubleDot]\[SZ]erer Winkel; Mit \
\[CapitalUDoubleDot]bergang in Gr\[UDoubleDot]n\
\>", "Section",
 CellChangeTimes->{{3.868124464777648*^9, 3.868124475477206*^9}, {
  3.868173288884438*^9, 
  3.8681732898297033`*^9}},ExpressionUUID->"c2799bd8-09dc-478e-a36e-\
75a3ba842842"],

Cell[TextData[{
 "Hier soll der Blauanteil maximal bei der kleinsten Beschleunigung sein und \
linear abnehmen, bis er bei einer Beschleunigung von ",
 Cell[BoxData[
  FormBox[
   RowBox[{"max", "/", "2"}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "a876f797-099d-4cb2-94ac-77ae1525ebcf"],
 " gleich Null ist. In diesen Punkt soll nun der Rotanteil linear steigen, \
bis ein maximaler Rotanteil bei der maximalen Beschleunigung erreicht ist. \
Der Gr\[UDoubleDot]nanteil soll linear startend vom der kleinsten \
Beschleunigung bei ",
 Cell[BoxData[
  FormBox["0", TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "6693efdb-f334-49cc-82fe-a0ed439bc6b6"],
 " bis zur Beschleunigung ",
 Cell[BoxData[
  FormBox[
   RowBox[{"max", "/", "2"}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "c9c86bab-22f5-4b10-a6d1-522ed8923af3"],
 " maximal ansteigen. Anschlie\[SZ]nd soll der Gr\[UDoubleDot]nanteil \
symmetrisch linear sinken."
}], "Text",
 CellChangeTimes->{{3.8681732934648333`*^9, 3.868173293642198*^9}, {
  3.868173388973686*^9, 
  3.868173649777811*^9}},ExpressionUUID->"690a4f3c-039a-4273-badc-\
0c334774d673"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"valuesLookedAt", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"tsa", "[", 
       RowBox[{"[", "u", "]"}], "]"}], "[", 
      RowBox[{"[", "3", "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"u", ",", "1", ",", "103", ",", "5"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"maxLookedAt", "=", 
   RowBox[{"Max", "[", "valuesLookedAt", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Table", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Plot", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Cot", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "maxAngle"}], "/", 
           RowBox[{
            RowBox[{"Flatten", "[", 
             RowBox[{"MaximalBy", "[", 
              RowBox[{"tsa", ",", 
               RowBox[{
                RowBox[{"Take", "[", 
                 RowBox[{"#", ",", 
                  RowBox[{"-", "1"}]}], "]"}], "&"}]}], "]"}], "]"}], "[", 
            RowBox[{"[", "3", "]"}], "]"}]}], "*", 
          RowBox[{
           RowBox[{"tsa", "[", 
            RowBox[{"[", "u", "]"}], "]"}], "[", 
           RowBox[{"[", "3", "]"}], "]"}], "*", 
          RowBox[{"Pi", "/", "180"}]}], "]"}], "\[IndentingNewLine]", "*", 
        RowBox[{"(", 
         RowBox[{"x", "-", 
          RowBox[{
           RowBox[{"tsa", "[", 
            RowBox[{"[", "u", "]"}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ")"}]}], "+", 
       RowBox[{"h", "[", 
        RowBox[{
         RowBox[{"tsa", "[", 
          RowBox[{"[", "u", "]"}], "]"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}], "]"}]}], ",", " ", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"x", ",", "0", ",", "1.4"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "1.4"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"10", ",", "20"}], "}"}]}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"ColorFunction", "\[Rule]", 
       RowBox[{"Function", "[", 
        RowBox[{"x", ",", 
         RowBox[{"RGBColor", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"tsa", "[", 
                 RowBox[{"[", "u", "]"}], "]"}], "[", 
                RowBox[{"[", "3", "]"}], "]"}], "/", "maxLookedAt"}], ">", 
              RowBox[{"1", "/", "2"}]}], ",", 
             RowBox[{"2", "*", 
              RowBox[{"Abs", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"tsa", "[", 
                   RowBox[{"[", "u", "]"}], "]"}], "[", 
                  RowBox[{"[", "3", "]"}], "]"}], "/", "maxLookedAt"}], "-", 
                RowBox[{"1", "/", "2"}]}], "]"}]}], ",", "0"}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "2"}], "*", 
             RowBox[{"Abs", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"tsa", "[", 
                  RowBox[{"[", "u", "]"}], "]"}], "[", 
                 RowBox[{"[", "3", "]"}], "]"}], "/", "maxLookedAt"}], "-", 
               RowBox[{"1", "/", "2"}]}], "]"}]}], "+", "1"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"tsa", "[", 
                 RowBox[{"[", "u", "]"}], "]"}], "[", 
                RowBox[{"[", "3", "]"}], "]"}], "/", "maxLookedAt"}], "<", 
              RowBox[{"1", "/", "2"}]}], ",", 
             RowBox[{"2", "*", 
              RowBox[{"Abs", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"tsa", "[", 
                   RowBox[{"[", "u", "]"}], "]"}], "[", 
                  RowBox[{"[", "3", "]"}], "]"}], "/", "maxLookedAt"}], "-", 
                RowBox[{"1", "/", "2"}]}], "]"}]}], ",", "0"}], "]"}]}], 
          "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}]}]}], 
     "\[IndentingNewLine]", "]"}], ",", " ", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"u", ",", "1", ",", "103", ",", "5"}], "}"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Rasterize", "[", 
  RowBox[{
   RowBox[{"Show", "[", 
    RowBox[{"%", ",", 
     RowBox[{"ListLinePlot", "[", 
      RowBox[{"sh", ",", 
       RowBox[{"PlotStyle", "\[Rule]", "Black"}]}], "]"}]}], "]"}], ",", 
   RowBox[{"ImageResolution", "\[Rule]", "300"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"RGBColor", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"tsa", "[", 
           RowBox[{"[", "u", "]"}], "]"}], "[", 
          RowBox[{"[", "3", "]"}], "]"}], "/", "maxLookedAt"}], ">", 
        RowBox[{"1", "/", "2"}]}], ",", 
       RowBox[{"2", "*", 
        RowBox[{"Abs", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"tsa", "[", 
             RowBox[{"[", "u", "]"}], "]"}], "[", 
            RowBox[{"[", "3", "]"}], "]"}], "/", "maxLookedAt"}], "-", 
          RowBox[{"1", "/", "2"}]}], "]"}]}], ",", "0"}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "2"}], "*", 
       RowBox[{"Abs", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"tsa", "[", 
            RowBox[{"[", "u", "]"}], "]"}], "[", 
           RowBox[{"[", "3", "]"}], "]"}], "/", "maxLookedAt"}], "-", 
         RowBox[{"1", "/", "2"}]}], "]"}]}], "+", "1"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"tsa", "[", 
           RowBox[{"[", "u", "]"}], "]"}], "[", 
          RowBox[{"[", "3", "]"}], "]"}], "/", "maxLookedAt"}], "<", 
        RowBox[{"1", "/", "2"}]}], ",", 
       RowBox[{"2", "*", 
        RowBox[{"Abs", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"tsa", "[", 
             RowBox[{"[", "u", "]"}], "]"}], "[", 
            RowBox[{"[", "3", "]"}], "]"}], "/", "maxLookedAt"}], "-", 
          RowBox[{"1", "/", "2"}]}], "]"}]}], ",", "0"}], "]"}]}], 
    "\[IndentingNewLine]", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"u", ",", "1", ",", "103", ",", "5"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.8681235743877172`*^9, 3.8681237740457153`*^9}, {
   3.868123805638432*^9, 3.868123842268015*^9}, {3.868123938750001*^9, 
   3.868123942196817*^9}, {3.868124185737054*^9, 3.8681241894897947`*^9}, 
   3.8681249132381363`*^9, {3.868172723780635*^9, 3.868172724099903*^9}, {
   3.868174435359715*^9, 3.868174452992078*^9}, {3.868174596758336*^9, 
   3.868174663101666*^9}, {3.8681758356732483`*^9, 3.86817590577247*^9}, {
   3.868176119732995*^9, 3.8681761327332573`*^9}, 3.86817626906951*^9, 
   3.868176410061541*^9, {3.868178295086784*^9, 3.868178295183641*^9}},
 CellLabel->"In[39]:=",ExpressionUUID->"0b631c72-816d-4a20-bcc0-ac83c73c4785"],

Cell[CellGroupData[{

Cell["", "PageBreak",
 PageBreakBelow->True,ExpressionUUID->"4f18b11b-abb8-4454-b7ff-59ea964de71e"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzs3Q9wHcd9J3j4j7w5VyrZ5LIpn6uSTGwyVXtVvjvtxVeb3Vx2VGJOtVW7
pU1We3eulJMJxZAEZUqWqZJtWcKItMkKTUu2bFJSmNAjnGOZkGNHPoWBcbE5
gELIESBRYgD9oS1qHkkRBCD68VEUBBN4eH0DNjV6fNMz0zPTPd0z8/3Uq63s
4/vTUByZ/PL3+/Zvrr/tDze+u6+vb9vP+f/PH/7pp6/71Kf+9LP/9V/6/5//
duu2/k23/tmG/3jrHX+26c8+9W/Xv8d/8rD//7xyTV/f6v9MAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAANJ47bXX/vZv/3bPnj133nnnLZd9+tOfvu+++5544om5uTnOD3nr
rbd++MMfPvDAA3fccceWLVtuv/32HTt2DA4O/vjHP+50OlLPDwAAAAAAAABQ
Ls1m86tf/erGaJs2bTpw4MBbb70V/zkTExO333571Ifcd999/hcV8xMBAAAA
AAAAAGjO87xPfvKTMYFM4K677nr99dejPmdkZCTxE26//fbZ2dkifzoAAAAA
AAAAAA2dO3eue7Lllltu+eY3v/n888+fOnWq0WhMTEw8/PDDmzZtCl5g2zZz
Wubo0aPd2csDDzwwOTnpf8jx48efeOKJbdu2Bb909913LywsFP+TAgAAAAAA
AADo48EHHwzSkh07dpw7dy78muPHj3cP0jz22GM9L1hcXOxOXX74wx/2vODC
hQu7du0KXnDw4EFZPw8AAAAAAAAAgPbOnDkT5CTbtm1rtVpRr3zppZeCaZkt
W7b0DLo88cQTiXnLG2+88ZnPfCb4BBTLAAAAAAAAAEBtfe973wuylJGRkfgX
79u3L3jx5ORk8PzKysqdd95Jn9+6dWvMXtLTTz8dfIL/1cJ+DAAAAAAAAACA
UvnSl74UhCQx5b3Uk08+yUxUjh8/Hjz/9a9/PeYT2u32bbfdFvTSCPkRAAAA
AAAAAABKJ5hv2bJlS+KLn3/++SB7efTRR4PnH3/88eD5p59+Ov5DHnrooeDF
uIAJAAAAAAAAAOqp0+lcuHDh1KlTL730UuKLo+ZkHnjggeD5ubm5+A/5+7//
++DFP/rRj/L+AAAAAAAAAAAAVfcXf/EXzDjl05/+dDBs0+l04j/k2WefDT7k
O9/5juQjAwAAAAAAAACU209/+tP+/n6apWzevPnixYv0+U6nE9zHdNdddyV+
zokTJ4JMZv/+/ZJPDQAAAAAAAABQbt09MP7/HDx/4cKF4Pk///M/T/yc119/
PXj9/fffL/PIAAAAAAAAAADlNjY2FgQpmzdv7u7mPXv2bPBLX/nKVxI/6o03
3ghe/4UvfEHmqQEAAAAAAAAASmxqamrz5s1BkPLEE090/+rp06eDX9q3b1/i
py0uLgavv/fee6WdGgAAAAAAAACgxF588cVbbrklSFG++tWv9rT4ep4X/OrD
Dz+c+IFLS0vB6++55x5pBwcAAAAAAAAAKKvnn3++O5DZuXPn4uJiz2sajQaz
ZybKz372s+D1tm1LOTcAAAAAAAAAQGkdOXKke2Vp586db775Zvhl3btLe/fu
TfzYhYWF4PWf//znUx1pY5dUb0yl7wfXRz3c5vPMt3idhrG8pm/pGubDbK+T
d1pQzn5jT9/ZDzAfxvxH3Uvjqg8I6ZjHtvY9+bvMh3V8p9qz9b3vUs/D2tBW
eyRC/wW4tLbv0vuYD3P5qn8BNjpe6Id457Fu2ez98KXXjFev6zv+W8yHfe6r
Pa+/sWX+yut9zMe1TWP3gi31HwUAMBk3vNz3kX/uecS/xXzoYN8de8IP95VT
xZw5nrX3mb7/+jc9D/9J1ecCEM/zOn3vXe552NtXVJ8LoOI6nc53v/vd7gBk
z5494QkZ6ty5c8HL7rvvvsQPbzabwet3796d6mBSo5iA23w+bSzj/5HEbK+L
ymT8h7G8xu2MFnB4KJ57aTwqk6EP562Dqs8IKXiLMzGxjP9LCs8WTjHMdcsK
z0Ot/gtweV1UJuM/jKW17sqVfwEOtp2YTMZ/rF0yRlfc7s+3Zj8Tlcn4D/P0
x4NXnmx7UYFM8Lix1Rv7AIBs1t2nw5mM83gz/l3MTMZ8SIv/SvXmFsKZjP/w
n1d9NADBkMkAFO/SpUvd117TjaTl5cjf9nd39vLco3TmzJlUu07dislkSKZY
xme1b46JZfyH3d5ezPmhYF77lDH/0ZhYxmrdpvqMkIK2sYyxdknDTIay2zti
Yhn/4b+AvrLR8dYtm/HJzI623f3hTus7/LHM7gU7Ppa5tmkcWXIL/GcDUHfO
481wJmPdfTrhXZNTzFjGHtFiANUcGMOoDNQBMhmAgrVarZ07d3YHMo899lhP
qW/YbbfdRl985513Jn7Fiy++GHz4N7/5zVTHKyyTIVljGbczGh/LGMtrvE6j
sJ8CCuO1T5k//cOYWMb/VdVnhBT0jGV0zmR87spofCzTvce0o20nDsw0Ot47
H77wdEwsY7x6nf+C4MVHllwMzABoJUMmQ6I3mLxmq4Azx3On5zEqA3XAzGSs
9chkAKSYnZ397Gc/GwQmmzdvdl2X541f+MIX6Fs2bdq0tLQU/+Inn3wy+Iof
/OAHqU5YZCZDssYy2GOqs5huGdTLlJFusYzmmQxJucc0uuLGxzI9AzPe0mv8
sQwGZgC0kqFSxuc1WzpvMDFHZeyDL6g+F4BIyGQACnP69Olt27YFacmtt946
PT3N+d7BwcHgjY1GwhDIt771reDFL730UqpDFpzJkKyxDFkd49+OPaZ6SqyX
QSxTLlrFMuFMxn+m4DPwELvH1F386y29Zp7+eEwy0x3LEAzMAGiDWSnjTlxM
fKM9Mq5t2a9zuMEclVF9LgDBkMkAFODs2bO33357EJV8+tOfPn06eaA0MD4+
Hrz3hz/8YfyLP//5z9NXbtmy5Wc/+1mqcxafyZAcsQz2mGrLa5+Kj2XsN/ao
PiOkEBPLGBM3FXqSdculyGQIxx6TsbQ2+Bdg2uLf+Fim5zKmk20v5jImDMwA
FINZKZNY80sZu/YzYxnZZ+Zh9A+HMxnnMH53B5WCTAZAtoWFhe6VpYGBgWaT
678iA+fPn9+0aRN9+549cf8VOT8/H3zRl7/85bRHVZLJkByxTOIek//AHlMl
oV6mYjSJZUqUyZCUe0xpi3/5L2OieAZmPnHRKuwfDkANZauU8bmvnGJmMtbQ
sOwzJ2KOyhj96g8GIBAyGQDZHn744SAnueuuuy5cuJDhQ+6///7gQ1555ZWo
l3VvOU1MTKT9FlWZDMkRyxCOPSarfXNhPwgUCfUyVRIfy7jnjxZxhlAm4z8K
+N48+PeYCF/xbzAww38ZE4WBGQC1slXKUFFlvzpsMDHXl9zpedXnAhAGmQyA
VJOTk0FIcsstt5w5cybb50xNTXWvPp0/fz78mqeeeqo7/Im5XzuKwkyG5Itl
ePaYMDBTSc5bB1EvUxnW8Z1qY5kyZjIk5R7T6Iq7dsngHJhJdRkThYEZAFWY
lTLeGd5/iWlb9mvtfQaXYkO1IZMBkKfT6Wzfvr07S3mYW7g35oEHHuj+qO7+
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
sQ++IPvYoBXPQyYDUDSeTKbT6QS7SJs2bTp37lz8Zx4/fjz4zC9/+cupzlPP
TIZkimU4u3/91xT8s1RDfWIZgj0mjfFkMlRULPPOTtPHr0fhTE6IZSrGbt3f
d+EXRO0xEb6BmQKKf48suYnFv5UcmAlnMrWqlPF5zVaeDSbncIM5KiP72KAV
ZDIAxeO8d+mRRx4JXvaNb3wj/jO//OUvBy8+fPhwqvPUNpMhSbGMe/455rvQ
/StPrWIZnj0mFP8Wjz+TWX3xG3uiYpnVZGb+o+7xb64GLIaBcCYzxDIV4y48
3Tf3qwL3mBKLfwu7KbuGAzOolPHZI+N5yn6N/uFwJuMcxhZzjSCTASgeZyYz
MzOzefPm4JU/+tGPol75+OOPBy/btm3b4uJiqvPUOZPxOTPDGWIZdP/KU6tY
hmePyW5vV33MemFmMu5o5G+NmPUy3Q/7jT2rr/O8vOFMjbnnjyKWqZLVWObE
hwreY/JfIPWHouo2MINKGcrYtZ8Zy/C8lzkqYw6MyT4z6AOZDEDxODMZ37e/
/e2NXb7xjW+8/vrr3S+Ym5t7+OGHu1/z9NNPpz1PzTMZkjWWIej+laZWsQzh
2GMy2yn+yhhycgbTZTIktl6GPvxf7Xr15XAmWxuwaRLHkf1PQE/xsYwze0j1
ASGd1dbfsx8rfo+pgOLfk23vxpZZk4EZZiZTt0oZn/vKKWYmYw0N87ydub7k
Ts/LPjZogpnJWOuRyQBIxJ/JrKys7N27tzty2bRp044dO/bt2/fggw/ee++9
G6/2ve99L8N5kMmQHLEMQfevNLWKZbDHpI8MmQwVH8sY8x/12lfPsbtuxnCm
rm3AiGUqZjWWOf3xvjMfFLjHpE/xL8/AzCcuFnFnt2yolKGiyn55Npisvc/g
UuyaQyYDUDD+TIZcjmWGhoY2JtmyZcuTTz6Z7TzIZKg8sQy6fyWJiWX8X1J9
OsGwx6SJzJkM4amXuRS6IJWOzZgmCmd4IJapHmv2M2L3mIg2xb81GZgx159A
pQyVuezXm1vAqEzNIZMBKFiqTIbyPO/BBx/csmVLOI259dZb//qv/zrxYqYY
yGQCeWIZgu5fOWoVyxDsMWmAmcn4T3K+nbdeJgyFM3ziYxm7cUD1ASE1+9xX
+47/ltg9Jk2Kf0kNBmbsfbOolKGcySlmLGOPhNL4EOal2BiVqQ9kMgBlcenS
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
WMZ49Trz4n9WtcdUfPEv58DMn/3N36JSJqeosl9raJi+wDncYI7KqD028DM+
3EYmA1BbyGRKQc9YhtR4lQmxDI/y7jHVMJOhrNZtqJdJZtvZ2oDpJdqr2Q6U
WULr7/Hfst/8YuIeU7aBmcG2o1vxL+EbmHn/l/pRKZOTNTQcX/Zr9A+HMxnn
sNZTqRBAJgNQZ8hkykLbWKa23b+IZXjw7DFpWPxrrluuZyZDUC/DL0cbMMKZ
skuOZVr3J+4xOe0ss4J6Fv/yDMz80tQH3/3730elTB7Grv3hTMZ/kv4qc1TG
HBhTe2bghEwGoM6QyZSItrEMqevADGIZHjx7THZ7u+pjXqXOmQxBvUxaOdqA
r4QzUE7xsYw1+xm7vUPGHhPRsviXpB+YQaVMWs7kFHNUxh65EpUz15fc6Xm1
xwYeyGQA6gyZTLnoHMvUs/sXsQynxD0ms71O9RnfEc5k/IfqQxUK9TJZ5GgD
RjhTUvGXMZmnP+6ujEraY9Kz+DfVwAwqZTKIKvulG0zW3mdwKXZJhTMZ/xnV
hwKAgiCTKR2dYxlSy+5fxDKcSrTHhEyGQr1MRpnDGZrMuK7qHwBSSGz9XZ0V
TNpjsts7Mny1nsW/hHtgBpUyGXjNFjOTMR86uPqrcwu4FLukkMkA1BkymTLS
PJYh9Vtl8hbPxsQyzsz3VR9QF2XZY7I2tJHJUKiXyQ6FM7WRGMv4L0jcYzKX
M84K6ln8e7LtXds0Egdm/JcVfLAKsEfGmbGMMzlFIi7FxqiM/szrkckA1Bcy
mZLSP5apW/cvYhl++u8xIZPphnqZnNznvnvvn/6694F/gZ2mCkts/XUXnnZX
Ro2ltTL2mPQs/iV8AzP+a4o/WNlFbTD5v+ROz2NUpoyQyQDUGTKZ8tI/liE1
G5hBLMPP6zSM5TXa7jExMxmv0VF1HuVQL5OTM3uo78nfNR77bYQzFZYYyzit
78jbYyJ8xb96Dszc2DIxMJOK+8opZiZjDQ2TiFEZ++ALqk8NcZDJANQZMplS
K0Us89qSd9eMVZPuX8Qy/HTeY0Imw4R6mTzc80f7nvxd+qDhTMY2YNMkjqP6
p4FIiZcxkdVZQVl7TKMr7tolAwMzdWANDUeV/TIvxfYfqo8MccKZjP9QfSgA
KAgymbKLj2WcmWHVB7yiPt2/iGVScVYGNdxjsncgk2FDvUwe3bEMfZgPfCRj
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
sWegZfJRRvZvk7RMHZ1MSOock9W+WnaN2oF4mYisWiaTjUF+b9XklTPOp3+b
X8vQImVmFMIxx+S0+4Q86PKCf2nBMrl/pKtpmOlulQmO6+9IOhljzfoi99J4
4GQAqIDBwcHly5dncjJHjhy58cYbGUImJDjnzTffzFESnAxoBtAyRRCe/dsY
LVNfJ+PzzTGhYaZiEC8TwdYyzpFN4WmZ1luHjTHeVG4JkIDr+paVScu4f3w6
5zImRqRMF5XNMfl8wb+Dk16m2xQ7wRRRdsOMveGX3U7mCw8QW2XszbrI5xyY
F8PJAFAur7zyyg033BAXKalO5le/+tXXv/716PyvfvWrjz766Isvvjg0NPTc
c8899NBD1157bfTVlStXttuZf23hZEBjgJYpAmf2b3AO5w3yaJngrZPin2Un
X2GbPeOyi8oAzxyTMyHmU2PACeJlIlha5sfn2evWZLUxsh8QmCJjGrD3wbnG
1rN5ljFxOhmfb45J5eBf2gSTZRUaMiq7YabbydDDfjHBRANOBoBS2bNnz/XX
X9/V3MJ2MpOTk7fffnt08m233fbrX/+665xDhw7FPc+WLVuyFgYnA5oEtExB
xGb/srTMDy8wv/Lp8EVmyY+pEMbCsVo7mRDMMSkI4mVCCFrmx+e1vrWw9f53
wcbUHu40YO+Dc83vn5W6jIkYKUO982rnmIQH/wqfYIp4aNRJbZhZe9zOccvW
3U91O5krNxCdjLluQ8FH0VTgZAAoiYmJiZ/+9KfXXHNNcuCI7WR27doVnRm8
3hgdHSWetnfv3ui0W265JWt5cDKgYUDLFERs9i9By/zwgtZlvyv2FWZ5NMPJ
+JhjUhLEy4R4o0OnbMwX/1smG4Pd1vWAL3CGrWXsX93JEynTReockzneI+pR
ig3+9TyP9pNfvNSSGmbcfUcJrTKL70WrDD9JJxMcsosCoPYcOHBg9erVcQ+z
dOlSTicTXfGaa645dOgQ48xbb701us033ngjU4VwMqB5QMsUh3OUiadhZlrL
/PCC1o2/3/r4vOTLy4LN2KWSdDLBJbKLygnPHJPdXiW7TL1AvEyI+/wTHRvD
DWxMXUmTM+xlTK2ffjrpZOx7jrDvs8o5Jp6GGf7g3+CHnPjzb5q8Q8RsymiY
MVds459gEvIoGgacDABiGRkZueeee+I25pprrunv7//7v/97Hifz2muvRaet
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
8+pCtIzfoOzf4B8i63pr1WxMhDPRhzkmKTQyXsYbHYKWKY9aR8rEkbuMyaes
OOywZU6oZYyxhd4k1wqkrHTNMc159qMFW2XszTuIWsbZtbf71FDOGEbBwBme
hpnZZx+EkwFAK+BkUkkN/kXDTE2p9f7rVJyhfp21jNik34JOxhenZeqe/es4
TlYbI7vkdFKDfzHHVBKNjJeBlimPukfKxJG7jMmnzAh3xppOLs4udY6pr+2w
W2V+70c3Dky4nLdGm2CiXiGUM/kCZ6bkTGrDTNLJGOfAyQDQZOBkeEDwb/Og
NclUvMalVHTWMq7rEv99c97awERBJ+OL0zI+d8OMOmYm+HVrpI2JY7WvxhxT
9aTGy1gjX5FdY2a80SFzz3Kalgm+JLvAukKMlPFeOyG7rpzIXcZEi9Pv7Ms+
qWVKnWOKGmaIS7GDI/hSb9vmuSn34GGik7E29qdcM7ecmTIzt/8zVcvAyQCg
G3Ay/DzYdhD82xia3SQTobOWIf4T53NuQpyML1TL1CX7N7Qx5E9Um2JjItzJ
AbaWMcYXlNTPrznNi5eBlikDYqRMvWJ+u5C7jImq2WNOptQ5Jv9k8O+speuS
TmbOlouCLy0c40oYsDb2s8J+2YRmJlca8OGzWufuJjiZuRc+DicDgFbAyWQC
wb/NgNZEocI+F+Foq2UEJv0SnYzdm+cFkkAt46ud/RsuVMpkYxrQpYY5Jlk0
L14GWqYMGhMpEyFxGRPtpVQU9hs/yptjGphwia0ys5aui/5i8zTMGGvWJ51M
cGGGUvIGzqy9Md3JzD77YO5vEQBAfeBkcoBN2bWGli9aZC+P4mirZUSZN4FO
xhetZXz1sn8zrbdujI2JY7dXYY6pehoZLwMtI5YmRcrEkbWMibo778DcpJax
2otLKmNw0iOOL8159qPRH+2e8ZTXeM6uvcRWGXtzdp2bXc50NcwQnczlI+ah
tpfvWwQAUBw4mXxsm3A/dMJAw0wdoQ1BN7JJJoKhZYKjqVpGVNKvNzgp0Mn4
JWgZRbJ/s9qY4N+iqb93mGOSQiPjZaBlBNKwSJk4spYxkZ/cY2G/XXNMJTXM
WHc/lXQys797Xfzv9sIxgx38Swv75ZpgIpIxcCZqmEk6meAIv7T2uJ2zGACA
wsDJ5AbBv3UkeM9IHKZowP7rVNxjz+imZWhJzlkXKwt3Mn4JWsaXmv2bycYE
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
ahnyobwYoPLvbWrZr+NvaeCpgyDQ4U8AAIthOBnC2HxUmGNC8W8zQMtoArQM
6GJl96+kHJMdlTJpwgv7KtfLtFDLNO9kqEux3dXD8p5REnllv94O+r/7hcUy
MYeWqbCMiTpgoH//p+k5po0bNw5cZGZmhvNTXn755X/5l3+5++67P/vZz37y
Ip/73Of+9m//9nvf+96pU6fqHMYUJ0NwH78rT8sEY49FUcRpZpqMMuWV/fq7
RmQ/taE/3QAYBNvJJDzYCZBj0oHo/KvQMjoALQPS2DcwU5hjIlcwt7XUY1pT
KZOmTr1M27RMFDXtZGKLRmW8HYP8Zb8xR7HM4sOKW8ZkRLsvg8Ick9fpV31G
Cvv37x94Ax4nMzk5ec899wzkc9NNNz3wwAM///nPq53HICcTF2mZ+GJgR7co
U95e7OjMOXlPiuASAA1AdTLR2HzP3XgGZpBjagBoGU2AlgFprOz+FZtjsqxS
Jo03dWvlepn2aBklToY6KkNulPqkknDWb846GXIj9c48xTIJopYxmdLuy8C4
HNPY2NiqVav4nQz5rvj0pz/NEDJd7rzzztOnT1c4kllOJmZqmfD0YmUTNbaT
hfwIJHvnpRKdOdf8Xmzqn4DnefKeEYAW4q/lcjIJKP7VAWgZTYCWAT3Y1/3L
k2PiLP61r1ImTZ16mZZoGSVOJhydoI7KRKempT6vDPISTP5u+rcWT7HM4j1r
L2PKU0DGRRsKc0zk0iTHdOLEidtvvz0tUthO5rXXXrvtttu6d/7kJz/5z//8
z88888zx48fHxsb2799///3333TTTd07+L5fYVrGOCcT82kZraJM/q6Rhst+
EVwCoAFKOZn44sDMNRccDMyoBVpGE6BlQBbLokw8OSa/s6bwccL9r9tXKZOm
Tr0MQ8s4+69v8quQB9XJeMvlOhmCu3rYmlGZvLLfsgmmbDNnzWVMlvV/6p9j
OnToUHbihe1k/uEf/qF7z7Vr17722mvZ+xw9ejT9sA8//HDZg5noZKLpUzxa
Ji4TZZK9IdrxtzS2FxvBJQCaoayTSSgcmEHxr2zYWsZ/KVB9wLYALQOy2Nf9
W5hjcjvLCh8k62QsqJRJU6dexnoto8rJUJdik0v288ogmpyiOhn3vu15n5L3
EjL7mrHOMib73kbnyTEpGZiZm5t75JFH0gMtPE7mlVde6d7t9ttvn5qibOxK
eO6557oPfsstt0xPl5soM9HJxGW0THxxAs1xnEIzIzXKlFf2G4wcEf5c1AEh
BJcAEA7VyYRDxb8mFW7KRo5JNtH5V50ffjxPy3jPbVB9wLYALQOoWDYwUz/H
ZHGlTJrK9TJsLROdP9nwFyIcJU6G4KwczDqZYK9GxSD8+Lv3UbVMcOAw9f78
xTJx1WVMtr6NzpNjavhIL7zwwrp169Ie5uabb+ZxMt/97ne7d9u9ezf7WTZt
2tS984EDB0qd0FAnE1/UMnlOxnn0ph4tE+dvN+tBXpQpr+xX/BNZZ1wB0JNg
a0UnE/MV//bPQqVKJDr/qvv0bdAyyoGWAVT4u3/JPVUftpiaOSa7K2XSVK6X
8Y6uY2iZ8OzBhr8QsahyMtRRGWelqSHfvART3v35i2USyi5j8jzP4rfR2Tmm
xo4xNTWVViUDFxckDQ4OfuUrX+FxMum7FZb3/uAHP+je+bvf/W6pc5rrZOIi
LUM+2nt/7iiTDDPTTNmv6fvUADCIOk4mAcW/aoGW0YRw8hloGUDFsu7fyjkm
qpOxqVImTeV6GYu1jConE1u0FDvOL/v1duRaJv5imQT+ZUzWtPsyYOSYGjvD
oUOH0kLmC1/4wpEjCykVTifz2c9+thtHKnyuZ555pvuY3/jGN0qd02gnQwhP
H2ZoGfqn8EWZZOzL9rbtkV32SzWuZu1TA8AU6juZGMW/qoGW0QRoGcDApihT
ND/mzC6pkGOyvlImTeV6GX/sASu1jEInQ12K7a4ebubZhePtGCxV9hvna5m8
14mcy5ha8jZ6Xo6psQN0ncwtt9zy8MMP/+IXv0hu53Qy8/Pz586dO378+HPP
PVf4XK2dk0mooGVidVEmqWW/bTCuAOgD1cmQGys8FM/AzNh8JPgLABeBltEE
hpYhF7RMy7Gp+7dajsldfqwNlTJpqtXLBOM787QMuQzVMlkn436wyi8bFZ/d
olEZgrN+c9bJkBvz7p+XYKqjZcgdqKpH9tIZVWRzTI099aFDh1auXPm1r32t
J3nE6WRK8Y//+I/dx/zRj35U6nMtcDIxU8u4j9+V91mc+7LFRpmCkSPyRmWo
f2mYu08NAM0R6GRijuJfDMzIg61lyIdUH7AtQMsANjYNzARzW0vlmPxN4y2p
lElTrV7GPi2j1slQR2UMXYpNCA4cpo7K+LvpVUVx/lv5jBdZBa2/e99Jfckp
5yvWgp4cU2PPe/bsWeqyJOFO5syZMytXruwWCL/++uulPt0OJxNX1TLxRTPT
cJSJWvbr+FsEPDLNuCK4BIAkwqE5gU4m5iv+xaZsSUDLaAK0DGDz8kx050nP
ju7fwoGZdI6pVZUyaarVy1imZZx3dRQ6mXB0gjoqE50qt+1XH/LKfiskmBiV
vCwts+rXWvg2ejrHpPos4p3Mfffd131A8v/Lfro1ToYQjD1WTcvE3FEmIVXY
eXux/V0jdR7W1n1qAGiLcCeTgOJfhUDL6AC0DCjEpu5fr7OCM8eUdTLOdc+r
PXwzVKuXCc8etEbLqHUyBHf1sE2jMtHkFNXJuPdtZ3xW3pv47Hft6cuYfvfN
ZR/HGpIck+pTCHYyw8PD3Ue7+eabx8fHyz6CTU6G4B95qLKWaTLKlLcXOzpz
rvJjIrgEQMNQnYy/VsCvSTwDM8gxSQJaRgegZQAP1kSZOHNMznXPt61SJk2F
ehm2lgnGdyr5Qiqg3MlQl2KTq8kziMXfvY+qZYIDh/M+hVEsQ15Fsp6rZxnT
19/R8rfRo/kx1UcQ6WQOHz588803dx/te9/7XoUHsczJELyn7s3TMuRDhZ/O
vy+7pswUvhebeuyWGFcAlCDPySSg+FcV0DI6AC0DeLCm+5cnx+T8zbYWVsqk
qVAvY4eWUe5kFs6wcjDrZIK96l9cVyYvwcT4lArFMgmXtf7ShmTQNdEwopzM
kSNHPvnJT3Yf6p577pmfn6/wOPY5GYL7+F15WsY/8hDPI3BGmcgPINuLsp5i
14jAsl8ElwBonmhsXqqTiVH8qw5oGR2AlgGcWDMw43fWsAZmvv1n7ayUSVOh
XsYCLZN1MuSWhs9g36hM+OJxqpPxdgwyPivvvftCqbKoZWjtvn1vv8rZ/vvk
DiK/PMBEiJN55pln0kJm3bp158+fr/ZQAymqPYKeMLRMMPYYzyNwRpnqiE2B
e7GDIKAqo2oHAwDw0ICTiVH8qw5oGR2AlgGcWNP9G84PsbRMxsm4y4+pPnLT
VKiXYWsZ7+g6JV8IPzo4mdjGURlvx2DZsl/q++AJhfGEhdbfv/+vlM/83Tcn
IzTQMo1R38k88cQT6cjSunXrfvazn1U+j2UqJg1Dy4Snc6OCPUiNMuWV/QYj
R8o+FIJLADQP1cl4/VJ+TXqwE6D4t3mgZXQAWgbwY0f3LyvHdN2jWS2j+rxq
YGsZZ+J9Ueeyl9XR+ZPmahn3g1o4GX/7s1kn464ebv4kAqE6GWf9Zsan5BXL
8CQU6K8rv/6ObrIpmKry7jwoSx0nMz8//8gjj6QnW+6+++7KEzIJFjuZWJCW
iZmdTmkqRJnyyn5LPQiCSwCoojEnE6P4VxHQMjoALQNKYUeUiZ5junNdyytl
0vg/vbtU66+5WkYTJ0OgxpfC0QklhxFCcOAwVcv4u3u7idJUK5ahz9i8/aqe
rUze+OdFf5Wgl8pO5sKFC+m118nm69nZ2ZrnsdvJxOK0TMxdMlMqyhSdOVe/
7Jd6MCFruwEAbJp0MgnYlN080DI6AC0DSmFH9y8lx4RKmcspWy8TnT/pHlqV
p2XIh1R9IWz0cTLexidtWoqdkFf2y0gwxZWKZcirM8onfPRXssuy3RM3iv86
QYpqTmZqamrdunVpIfPwww9XK/XtwXonE02fEqhl+KNMQRBwPmb9sl8ElwBQ
RfNOJr44MHPNBQcDM00CLaMD0DKgLBYMzFByTHAyl1O2XsZELZN1MuRScpJw
dII6KhOdmlZyHiFEk1NUJ+Pet531WSWLZXLvnwoupS/npWtlfcGgkpMZHx//
whe+0P2sm2++WeDLbeudTHxRy+Q5mQpaJr4YZXIch8fMcEaZ6pT9IrgEgEKU
OJmEwoEZFP+KBVpGB6BlQFns6P69LMdEq5RxO8tUn1ExpepljNMy+jiZhcOs
HrZvVMbfva/CqEypYhnqnZ0/WkoVMl0tg9ZfSZR1MidOnLj99tu7n/JXf/VX
o6OjAs/TBicTM7WM8+hNFbRMLDTKFIwcqTwqQz0GdtwD0AxZJ+Mua+7XpMJN
2cgxiYWhZZwfflz16doCtAyogAXdv5dyTLRKmb4f/b4zu4TcR/UxVVKqXsYs
LeMtn9PHydi3FDshL8FU8Fk5AYpssQz1nkEQLCxjOnEjw8xAy8iglJN59dVX
b7vttu79P/e5z504IXg6sSVOhhCePszQMtUeM4oiejCwR4E6TqEkoZb9Ov6W
wjMguASAQpylMwqdTMxX/Ns/i3YpYXjPbYCWUQ60DKiG6VGmxRwTrVJm4caL
xsbvrFF9TJWUrZcxRcto5WRiG5diE8IXj1OdjLdjkP2JPMUy7FxDoZbBMibh
8DuZ6enpdGRp9erVk5Pia9Xb42RiOVomLhNlYqiSvL3Y/q4R9lMzfsABALJR
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
yow9GIt5TMFjma/byxz6G+lQmQfO/KX4qcYXYpTczk6a/apBJgNDZN9eLR0q
88Ca2YUbTF1EDJDJIA2CDJiZPJbTXaYX71imMPSB7gKTj1gmLmgpY5r81gnf
TEY8GprK5DuPSTziMo8pYCxTrrSXkQ6V2fzQA9f+NDPwY3uc2OG+zPJN9ZmM
eFJ3XUlDJgNzZF/4rTyWefUXxDIwnzSTKRyY0F0XEL64N/61LuSJZfQilokF
WsqYJmAm08SAGd95TLnxhyN7WWHyiGUyx39evWWua7t8qMxXk5syAz8u3O3W
9SrM4TaDyeriHydMZDIwh31rRJ7JLFvwwBv/QCwDw+U7yGSQIsWS/YO7mfg2
/s1f7SSW0YtYxnzSTIaWMhpJM5nv/Ps/STOZRgfMBJnHFIsBM8Fjmcz0Tkkm
87u/d1Zoor1M2b3Zb9xnMK1bt27KV+7duxfwV7744ot9+/atXbt2zpw5M2bM
mD179pIlSzo6Oj766KNSqaWB8WQyMIq1+6g8ltnyL8QyMByZDFLId8CMyY1/
iWW0I5YxX30mQ0sZjRrNZBrt/RtkHlMsGv8GjGXy+4uSTOZfN32zava1P6W9
jD04nLxmv8ePH5/yvwXMZMSvzJ49e4qL1atXDw42P4aQTAamyVhbJZlM+5IH
3viHzJ6pxDIwFpkM0sl3pWyT5zERy2hHLGM4WsoYRZrJzNiwf9LHGe9YpqGp
TL7zmLLjk6J8leHInVvmEcsUhr5e2lU+fenQ31THMrSXsbq6pbFMvieW38uK
xWJbW1tDmUxXV5dbGuOYPXv29evXmyuJTAamKXx0ST5U5qXplVjGHu3XXSMg
Ic1kxJO66wIiF+vGv8Qy2hHLmMxaf52WMuYoHCjVZzL5rff/+vPigOUbywSf
ypSMeUxBYpncuvclmczj/16dydBepuw+g8keHNZdWmMuXbr02GOPVWcpvpnM
yZMnq7dfu3ZtT0/PxYsXz507t2vXruq9PfXUU6Ojo01URSYDA7k2+33jHyqx
jO4CAQkyGaRcfBv/EstoRyxjLFrKGMUjkxEu37P/uZgNa8BMMuYxBYllggyV
ob2MW7Pf3M5O3aU14PTp07NmzaoZ3+Kdydy5c6c6ddm3b1/NBiMjI8uXL3c2
2LGjmSldZDIwkHezX2IZmKlwYIJMBikXZMCMmY1/PWIZ8SCWUYBYxli0lDGH
dyZTEXDAzBtD+SBHTMA8pvz1d9xiGfEoDJ2UD5VZObc+k0l5e5nczs74Nvud
mJh44403pk6dWj/nyDuT2bVrl2/ecvv27ccff7yyzYwZM5poLEMmAzPltu31
aPYrHtnD7bprBL6FTAaoCDJgpliydZdZqzD0AbGMXsQyZsr89I+0lDGENJOx
Ftd2rrt8z15wNeebzATs/WuXipmxB2M9j8k7lrF+3yUfKnPmL6WxTJrby2SW
b6rPZMSTuuvy8dFHHy1btqw6h5k2bVqQTGZiYmLevHmVzdra2jzmJR07dszZ
4VtvvdVohWQyMJY8k/mq2S+xDAwkzWSsJWQySCPfxr9mDpghltGOWMZA0ja/
tJTRImAmU3Hs80JYvX8TMI/JO5Z5YObzwYfKpLm9jNsMJqvL0H+N4eHh9evX
V6cxU6dO7ezsfPbZZ4NkMufOnXM227Jli8eBxsfHZ86cWdnSsqxG6ySTgbHy
R/u8h8oQy8AoZDJAtSDzmAxcKZtYRjv7zjWPWCZ/dY/uAlOHljLmsO0GMpmK
EHv/xn0eU2HopGsms3GKfKiMSyaT5vYybs1+zZzBdPr06epA5oknnujr6xPP
B8xk3nzzTWezY8eOeR9rw4YNzsaNLsBEJgOTyZv9zl3pZDLEMjCHXSyRyQA1
fjOej13jX2IZ7YhlTFOfyWQfOq+7qDRqIpMph9r7N+7zmLximX/ZUp/JWHsP
Z2/9zCOWyQ3P1P2aVLMHh6WZTHZDM71to+ZkMjNmzHjttde+/PLLyvMBM5m1
a9c6m/X3+6z8u3v3bmfj9957r6E6yWRgMtd1sdfMro5lcide1F0pQCYDyMWx
8S+xjHbEMkahpYwhmstkKkLs/RvreUyusYxsqExm+v1FhbxjmczAj3W/JtWs
rm5pLJPv6dVdWq3Tp09Pnz59y5YtN27cqH4+YCYzf/58J9IplUrexzpx4oSz
z9/+9rcN1UkmA8O5rov96i+qYxmrb7vuSpF20kwmN5lMBrgvditlE8toRyxj
DlrKGEKayeQeCpTJlL8aMBMkmQnS+zc/0RHfeUyusYxs+lLhzID4Fev2Ku9Y
Jm3tZdxmMOmuq9bQ0NDw8HD980EymVKp5KzTtGDBAt9jnT9/3tnnpk2N9T0m
k4H5vNfFdh75Yu168YBiZDKAh9g1/iWW0Y5YxhC0lDFEi5lMRVi9f30b/5o8
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
kVdeeeXUqVPiWOJ/7ePHj2/cuFHceTobWJZFxh5r2q8k4vvO4sWLq2vQfiVH
WFReuObOnevsTVzE3n777Y8//vjq1at9fX2vvvpq9a3CokWLmGkSdyovXFu3
bq25QJ04ceLKlSviM/HAgQPt7e3Oj6ZNm8ZomeS5dOlS9Rk1JbyvNto/f6FX
RKcWd/IoR3nhqmfanfydO3eqX/u+fftqNhgZGVm+fLmzwY4dO2JxLGin8u1+
6aWXnP0sWbJEXNjrtxF3C9Xx+2uvvdb04aCXCVcScf5M+TYymWRQdnaVSqWV
K1c6+3nmmWfEnmu2+fTTT6uL2bt3b3PHgglUXrguXLjg7Ed8izly5EjNBuJe
dNOmTc424rsziV+SnD59un68QShfbUz4/IVG0Z1a3MkjurNLyrQ7+V27dvle
OW/fvv34449XtpkxY0bTU0RVHgvaKXu7r1y54hxI3CoMDw+7bXn27FknYxeH
4883MaX9SlJ9IhlyJUdYlJ1dPT09zoEsyxLfdKSb9fb2Opu1t7c3cSAYQuWF
q6OjwznWG2+8Id1mbGxMnHjOZqdOnWruWDDKxMSEeMfrP6GmhPTVRvvnL3SJ
9NTiTj7lor5w1TPtTl78Czgz2dva2jxO7GPHjjkFv/XWW4YfC9qpfLvFbzl7
6Orq8t5Y/O/mbCy+EzVxOOil/Uoijjh//vzKbl988UUTruQIi8qza9myZZVf
F3cFn376qceWS5cudY7FkhMxpfjCtWDBgsoepk2b9tlnn7ltdvjwYedYr776
anPHgjk++ugj58LinADOf7f+1Ub75y90ifrU4k4+zaI+u+oZeCd/7tw5p4wt
W7Z4bDk+Pj5z5szKlpZlGX4saKfy7X722WedY/m2/Dp06BD3CbGm/UriDPh/
/PHHxflmwpUcYVF2dlX/TVCcUd4b79q1S3z9eeKJJ5YvX/7xxx83eiyYQPGF
y+lEJC5THptdunTJqUrclzZ3LJhgeHi4+ovqlK/C3s7OzuobpNa/2mj//IV6
ak4t7uTTSc3ZVc/AO/k333zTKePYsWPeG2/YsMHZuIlW6iqPBe1Uvt3OX23E
XajvxqdOnXKOxZ8F40jvleS9995zPjXE3elnn31mwpUcYVF2dolbDud3z549
20LJiAfFF67p06dXfl18PnpsdvXqVedAa9asaeJAMMTp06enVHFWOQ/3qw13
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
0Xvj7du3OxufPXvW5GNBOy1v96VLl5x7S0F8izlz5kzTe4OZ1Jxa8bqSIyzK
LlzVvVVv3LjhvfHExISzMcuXxJSyU6vRBYsF5+uP+KLNX6ITJtwvztzJwxFR
JsOdPMqpzGS6u7udQ+/bt89746VLl1a2nDFjxpdffmnysaCd+rf72rVr1b0K
58+f7zuPHnGk5tQ6f/782wG8/vrrTjHiW7bzvG9hMJOyC1f1VxvfHr+ffvqp
s/GvfvWrhg4EQyg7tarnLgVp+jExMeEsMiu+CjV0LJgv3C/O3MnDEUUmw508
KkI5u+J1Jz80NOSMoF61apXHlgMDA07Bzz33nOHHgnaK3+7R0dHqgY4LFy70
bZuJmDLqSmJIZzCERdnZderUqeC/Lu4NnI1ZCzumlJ1apVLJ+SuzOOLNmze9
tz937hx3XAkW7hdnoz5/oVfomQx38nAoW2m9bNKd/Jo1a5xKPvnkE7fNqv+o
d/z4cfOPBe1Uvt0bN250drJgwQLpAvRIDHOuJOZcyREWNWfX+Pj43LlznT30
9va6bfn55587X7FnzJhx+/btRo8FQyi7cG3dutXZw8svv+y9sfi+7Gy8f//+
Jg4Hk4X+1cacz1/oFfqpxZ08HOnMZMStoFPJ/Pnzh4aG6rc5cuRI9f8m0oaE
4snjVcRtZHTHQiwoO7V6enqcnTzyyCNXrlyJ5PXAGCqvWt7MuZIjLMrOruqZ
zvPmzbt27Zp0Jy+88IKz2bZt20J5jdBC2al19erVadOmOft577333Ep68803
nc0ee+yxO3futPgaYZqGvtpwJ4/gwj21uJNHteBnV8Lu5NeuXVt9ga3uxHX3
7t1du3ZVf7h/8MEH0p1UvyLh/Pnz0R0LcaHg1CqVSosXL64+ysbAaPoRXyqv
Wh6MupIjLGrOromJiWeeecbZYNasWb///e+rv7yIm9IVK1Y4G4ivzAySiTtl
F67//M//rN7m5Zdfrmkl3d/fX/1XaeHYsWPhvliYoKEvztzJI7gQTy3u5FEj
+NmVsDv5kZGRJ598svoVtbe3v/TSS88//7y4S6x+fufOnW47CfhvEsqxEBcK
Tq2+vr4pzdq8eXP0/waIhMqrlgejruQIi7Kz6/bt20uWLKnebPbs2atXrxb3
mU57zIpHHnnk3LlzUb5oqKDs1JqYmFi3bl31ZlOnThUnm7hMicMtWrRoyre9
9dZbUb5uaBNFJsOdPMqhnlrcyaNGajMZYXBw0LIs79N++/btHoskBv83af1Y
iJGoT62avwY2hCt5rKm8agXZgwlXcoRF2dk1Ojpa/UdnqTlz5hDIJIayU2ti
YkJ8I/Y+0JSvmhQdOnQospcLzaLIZMrcySPUU4s7edRIcyZT/mpC1jvvvCPu
/epP+GXLlv3hD3/w/vWG/k1aPBbiJdJTq2b0dUO4ksedyquW7x4MuZIjLCrP
rhMnTixfvtxZ0MQxc+ZM8bVa7CrUVwbNVJ5atm2/9NJLM2bMqD/Wo48+um3b
Nt+FmRBrEWUyZe7kUy/EU4s7edRIeSZTUSqVxMvp7u7es2dPV1fX0aNH+/v7
E3AsaMfbjYhwaiE6Ks+uwcHBEydO7N+/X3zTKRQK586dozdmgqk8te7evdvX
13fo0KHOzk5xLHFQceiJiYmIDof04PMXAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAQNz9//V8keU=
    "], {{0, 958}, {1500, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag[
   "Byte", ColorSpace -> "RGB", ImageResolution -> 300, Interleaving -> True],
   
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Magnification[0.25],
  ImageSizeRaw->{1500, 958},
  PlotRange->{{0, 1500}, {0, 958}}]], "Output",
 CellChangeTimes->{
  3.868123734415189*^9, 3.868123776217779*^9, {3.868123812919786*^9, 
   3.868123843912436*^9}, 3.8681239436420507`*^9, 3.8681241907206793`*^9, 
   3.868124731755766*^9, 3.868124914653963*^9, 3.86817265973035*^9, 
   3.868172725333576*^9, 3.868173880690942*^9, {3.8681744281473827`*^9, 
   3.868174454072667*^9}, 3.8681746241765137`*^9, 3.868174689650065*^9, {
   3.868175845053319*^9, 3.868175882366206*^9}, 3.868176134190609*^9, 
   3.8681762929576693`*^9, 3.8681763620782757`*^9, 3.868176451837839*^9, 
   3.868178296543532*^9},
 TextAlignment->Center,
 CellLabel->"Out[42]=",ExpressionUUID->"75e43ce2-b16e-45d6-906c-bd30c09cdfd5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0, 0.015088242310890676`, 0.9849117576891093], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[0., 0.01005882820726045, 0.6566078384594063],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0", ",", "0.015088242310890676`", ",", "0.9849117576891093`"}], 
         "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0, 0.015088242310890676`, 0.9849117576891093]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0, 0.015088242310890676`, 0.9849117576891093],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0, 0.6815076073640255, 0.3184923926359745], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[0., 0.45433840490935035`, 0.21232826175731634`],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0", ",", "0.6815076073640255`", ",", "0.3184923926359745`"}], 
         "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0, 0.6815076073640255, 0.3184923926359745]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0, 0.6815076073640255, 0.3184923926359745],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0, 0.426818944188915, 0.573181055811085], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[0., 0.28454596279261, 0.3821207038740567],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{"0", ",", "0.426818944188915`", ",", "0.573181055811085`"}], 
         "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0, 0.426818944188915, 0.573181055811085]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0, 0.426818944188915, 0.573181055811085],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.026322469744736843`, 0.9736775302552632, 0], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[0.017548313163157896`, 0.6491183535035088, 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0.026322469744736843`", ",", "0.9736775302552632`", ",", "0"}], 
         "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.026322469744736843`, 0.9736775302552632, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.026322469744736843`, 0.9736775302552632, 0],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0, 0.743891678103047, 0.256108321896953], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[0., 0.49592778540203136`, 0.17073888126463532`],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{"0", ",", "0.743891678103047`", ",", "0.256108321896953`"}], 
         "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0, 0.743891678103047, 0.256108321896953]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0, 0.743891678103047, 0.256108321896953],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0, 0.7381158988837007, 0.26188410111629934`], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[0., 0.49207726592246714`, 0.17458940074419957`],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0", ",", "0.7381158988837007`", ",", "0.26188410111629934`"}], 
         "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0, 0.7381158988837007, 0.26188410111629934`]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0, 0.7381158988837007, 0.26188410111629934`],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0, 0.02187820913978944, 0.9781217908602106], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[0., 0.014585472759859627`, 0.6520811939068071],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0", ",", "0.02187820913978944`", ",", "0.9781217908602106`"}], 
         "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0, 0.02187820913978944, 0.9781217908602106]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0, 0.02187820913978944, 0.9781217908602106],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.16241792410017641`, 0.8375820758998236, 0], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[0.10827861606678428`, 0.5583880505998824, 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0.16241792410017641`", ",", "0.8375820758998236`", ",", "0"}], 
         "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.16241792410017641`, 0.8375820758998236, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.16241792410017641`, 0.8375820758998236, 0],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0, 0.9822730891239613, 0.017726910876038726`], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[0., 0.6548487260826409, 0.011817940584025818`],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0", ",", "0.9822730891239613`", ",", "0.017726910876038726`"}], 
         "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0, 0.9822730891239613, 0.017726910876038726`]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0, 0.9822730891239613, 0.017726910876038726`],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0, 0.9071725855299256, 0.09282741447007437], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[0., 0.6047817236866171, 0.06188494298004958],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0", ",", "0.9071725855299256`", ",", "0.09282741447007437`"}], 
         "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0, 0.9071725855299256, 0.09282741447007437]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0, 0.9071725855299256, 0.09282741447007437],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0, 0.7629684737578037, 0.23703152624219626`], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[0., 0.5086456491718692, 0.15802101749479752`],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0", ",", "0.7629684737578037`", ",", "0.23703152624219626`"}], 
         "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0, 0.7629684737578037, 0.23703152624219626`]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0, 0.7629684737578037, 0.23703152624219626`],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1., 0., 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[0.6666666666666667, 0., 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{"1.`", ",", "0.`", ",", "0"}], "]"}], NumberMarks -> False]],
     
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1., 0., 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1., 0., 0],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0, 0.17605583694643756`, 0.8239441630535624], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[0., 0.11737055796429172`, 0.549296108702375],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0", ",", "0.17605583694643756`", ",", "0.8239441630535624`"}], 
         "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0, 0.17605583694643756`, 0.8239441630535624]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0, 0.17605583694643756`, 0.8239441630535624],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.07972804793252286, 0.9202719520674771, 0], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[0.05315203195501524, 0.6135146347116515, 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0.07972804793252286`", ",", "0.9202719520674771`", ",", "0"}], 
         "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.07972804793252286, 0.9202719520674771, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.07972804793252286, 0.9202719520674771, 0],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.02327715822639087, 0.9767228417736091, 0], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[0.01551810548426058, 0.6511485611824062, 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0.02327715822639087`", ",", "0.9767228417736091`", ",", "0"}], 
         "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.02327715822639087, 0.9767228417736091, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.02327715822639087, 0.9767228417736091, 0],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0, 0.32586754568807963`, 0.6741324543119204], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[0., 0.21724503045871976`, 0.44942163620794695`],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0", ",", "0.32586754568807963`", ",", "0.6741324543119204`"}], 
         "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0, 0.32586754568807963`, 0.6741324543119204]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0, 0.32586754568807963`, 0.6741324543119204],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0, 0.016120191629654057`, 0.9838798083703459], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[0., 0.010746794419769373`, 0.6559198722468973],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0", ",", "0.016120191629654057`", ",", "0.9838798083703459`"}], 
         "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0, 0.016120191629654057`, 0.9838798083703459]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0, 0.016120191629654057`, 0.9838798083703459],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0, 0.45512157366855244`, 0.5448784263314476], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[0., 0.3034143824457016, 0.36325228422096506`],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0", ",", "0.45512157366855244`", ",", "0.5448784263314476`"}], 
         "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0, 0.45512157366855244`, 0.5448784263314476]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0, 0.45512157366855244`, 0.5448784263314476],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0, 0.8491502778811684, 0.15084972211883163`], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[0., 0.5661001852541123, 0.10056648141255442`],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0", ",", "0.8491502778811684`", ",", "0.15084972211883163`"}], 
         "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0, 0.8491502778811684, 0.15084972211883163`]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0, 0.8491502778811684, 0.15084972211883163`],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0, 0.9772969713343924, 0.022703028665607583`], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[0., 0.6515313142229283, 0.01513535244373839],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0", ",", "0.9772969713343924`", ",", "0.022703028665607583`"}], 
         "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0, 0.9772969713343924, 0.022703028665607583`]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0, 0.9772969713343924, 0.022703028665607583`],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.35409639937374515`, 0.6459036006262548, 0], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[0.23606426624916343`, 0.43060240041750325`, 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0.35409639937374515`", ",", "0.6459036006262548`", ",", "0"}], 
         "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.35409639937374515`, 0.6459036006262548, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.35409639937374515`, 0.6459036006262548, 0],
    Editable->False,
    Selectable->False]}], "}"}]], "Output",
 CellChangeTimes->{
  3.868123734415189*^9, 3.868123776217779*^9, {3.868123812919786*^9, 
   3.868123843912436*^9}, 3.8681239436420507`*^9, 3.8681241907206793`*^9, 
   3.868124731755766*^9, 3.868124914653963*^9, 3.86817265973035*^9, 
   3.868172725333576*^9, 3.868173880690942*^9, {3.8681744281473827`*^9, 
   3.868174454072667*^9}, 3.8681746241765137`*^9, 3.868174689650065*^9, {
   3.868175845053319*^9, 3.868175882366206*^9}, 3.868176134190609*^9, 
   3.8681762929576693`*^9, 3.8681763620782757`*^9, 3.868176451837839*^9, 
   3.8681782965956097`*^9},
 TextAlignment->Center,
 CellLabel->"Out[43]=",ExpressionUUID->"6b25ba9c-1bfb-4b27-9955-701a61355b59"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1868, 988},
WindowMargins->{{0, Automatic}, {0, Automatic}},
PrintingCopies->1,
PrintingPageRange->{Automatic, Automatic},
PrintingOptions->{"PaperOrientation"->"Portrait",
"PaperSize"->{708.75, 1001.25},
"PostScriptOutputFile"->"/home/aaron/HDD/Bilder/print2.pdf"},
FrontEndVersion->"12.0 for Linux x86 (64-bit) (April 8, 2019)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 235, 4, 70, "Chapter",ExpressionUUID->"e635c930-2096-473b-a58c-58b86fac7a94"],
Cell[818, 28, 693, 17, 47, "Text",ExpressionUUID->"75eeb6b2-913f-4cb5-86c8-857bf769a6ba"],
Cell[CellGroupData[{
Cell[1536, 49, 1845, 43, 182, "Input",ExpressionUUID->"4e26f33b-4437-4fe5-8e69-d5f006bc32f7"],
Cell[3384, 94, 8085, 158, 250, "Output",ExpressionUUID->"1dcffb14-3ab3-4df9-9515-dbcfeb8e1d83"]
}, Open  ]],
Cell[11484, 255, 99, 1, 1, "PageBreak",ExpressionUUID->"ebaf4463-89ac-4db9-b470-5137efc229a8",
 PageBreakBelow->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[11620, 261, 308, 5, 70, "Chapter",ExpressionUUID->"6f66f9d6-04b5-4377-b537-bd45675722cf"],
Cell[11931, 268, 198, 3, 36, "Text",ExpressionUUID->"a0bff842-bb46-484a-aa66-8656e737085c"],
Cell[12132, 273, 980, 27, 136, "Input",ExpressionUUID->"03b7f5b0-1360-48bd-b705-db316a13db79"],
Cell[13115, 302, 374, 8, 36, "Text",ExpressionUUID->"dc18d991-33cc-455c-b5c0-0d3c17d30ece"],
Cell[13492, 312, 2130, 62, 136, "Input",ExpressionUUID->"2b7f4abf-ad42-4c4d-a79a-5a5f6fa3d8f9"],
Cell[15625, 376, 335, 7, 36, "Text",ExpressionUUID->"c4ff8bbb-0223-4699-8578-80f71c584612"],
Cell[15963, 385, 2342, 60, 270, "Input",ExpressionUUID->"add87577-56be-4453-8d6e-cd8ab1ad8f1f"],
Cell[18308, 447, 99, 1, 1, "PageBreak",ExpressionUUID->"03444c54-83e9-498c-b435-d966d01266d4",
 PageBreakBelow->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[18444, 453, 276, 4, 70, "Chapter",ExpressionUUID->"8706eb45-e6da-4ed4-98c2-8dfafa29494a"],
Cell[18723, 459, 661, 11, 60, "Text",ExpressionUUID->"534f7c17-543e-4ae8-b5d4-a4964952f522"],
Cell[19387, 472, 1509, 46, 98, "Input",ExpressionUUID->"ab13d3d4-4c18-44b7-814c-b40a26e25c73"],
Cell[20899, 520, 99, 1, 1, "PageBreak",ExpressionUUID->"e676ca5e-2a49-4e67-b653-1c1ea12d9451",
 PageBreakBelow->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[21035, 526, 215, 4, 70, "Chapter",ExpressionUUID->"3adfdd2f-8bc4-4b5f-8c35-cda391bed667"],
Cell[21253, 532, 787, 18, 60, "Text",ExpressionUUID->"bb55e379-1942-4a6f-a04b-cd943902f761"],
Cell[22043, 552, 1081, 31, 41, "Text",ExpressionUUID->"34ce4c99-1c0c-40c2-b283-daa19953a282"],
Cell[23127, 585, 218, 4, 36, "Text",ExpressionUUID->"eed111ae-0928-4966-bdea-ef37b079d934"],
Cell[CellGroupData[{
Cell[23370, 593, 2778, 68, 225, "Input",ExpressionUUID->"22c5c21b-18cb-4b09-9ab9-2f58a7781e69"],
Cell[26151, 663, 22723, 419, 248, "Output",ExpressionUUID->"c3f84f86-5748-47ee-9fe2-aaf7f6c15d31"]
}, Open  ]],
Cell[48889, 1085, 99, 1, 1, "PageBreak",ExpressionUUID->"736ee461-0417-4087-8e61-328099100169",
 PageBreakBelow->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[49025, 1091, 170, 3, 70, "Chapter",ExpressionUUID->"d7019564-42d9-4c6a-802e-34a8b097c483"],
Cell[49198, 1096, 297, 7, 36, "Text",ExpressionUUID->"945ce784-fee9-45db-a6ea-e331721c8ca4"],
Cell[CellGroupData[{
Cell[49520, 1107, 267, 5, 68, "Section",ExpressionUUID->"eda3dd01-7bf6-4cf1-91f4-f88f62d61cbf"],
Cell[49790, 1114, 811, 22, 36, "Text",ExpressionUUID->"669ad6e1-aba4-471d-b200-de4507341d09"],
Cell[50604, 1138, 4373, 122, 463, "Input",ExpressionUUID->"58a1a7e8-fcfc-4e36-aaea-f07766b9ed53"],
Cell[CellGroupData[{
Cell[55002, 1264, 136716, 2247, 253, "Input",ExpressionUUID->"9c2313a7-beae-48fc-aeb2-e2def8238b36"],
Cell[191721, 3513, 37920, 992, 35, "Output",ExpressionUUID->"43b556ac-8e41-4c43-b989-198f06357f41"]
}, Open  ]],
Cell[229656, 4508, 99, 1, 1, "PageBreak",ExpressionUUID->"917cec8d-c409-4f94-95ef-cd06e9412aeb",
 PageBreakBelow->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[229792, 4514, 329, 7, 68, "Section",ExpressionUUID->"c2799bd8-09dc-478e-a36e-75a3ba842842"],
Cell[230124, 4523, 1187, 28, 60, "Text",ExpressionUUID->"690a4f3c-039a-4273-badc-0c334774d673"],
Cell[231314, 4553, 7381, 195, 815, "Input",ExpressionUUID->"0b631c72-816d-4a20-bcc0-ac83c73c4785"],
Cell[CellGroupData[{
Cell[238720, 4752, 99, 1, 4, "PageBreak",ExpressionUUID->"4f18b11b-abb8-4454-b7ff-59ea964de71e",
 PageBreakBelow->True],
Cell[238822, 4755, 139496, 2293, 257, "Output",ExpressionUUID->"75e43ce2-b16e-45d6-906c-bd30c09cdfd5"],
Cell[378321, 7050, 38233, 995, 35, "Output",ExpressionUUID->"6b25ba9c-1bfb-4b27-9955-701a61355b59"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

